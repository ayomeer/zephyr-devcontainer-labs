/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /root/zephyrproject/project/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /memory@10000000
 *   4   /memory@20000000
 *   5   /clocks
 *   6   /clocks/clk-hsi
 *   7   /clocks/clk-lse
 *   8   /clocks/clk-lsi
 *   9   /cpus
 *   10  /cpus/cpu@0
 *   11  /gpio_keys
 *   12  /soc
 *   13  /soc/pin-controller@40020000
 *   14  /clocks/clk-hse
 *   15  /clocks/pll
 *   16  /soc/rcc@40023800
 *   17  /soc/pin-controller@40020000/gpio@40020000
 *   18  /gpio_keys/button
 *   19  /soc/pin-controller@40020000/gpio@40021800
 *   20  /gpio_keys/mc_button_0
 *   21  /gpio_keys/mc_button_1
 *   22  /gpio_keys/mc_button_2
 *   23  /gpio_keys/mc_button_3
 *   24  /soc/pin-controller@40020000/gpio@40021400
 *   25  /gpio_keys/mc_switch_0
 *   26  /gpio_keys/mc_switch_1
 *   27  /gpio_keys/mc_switch_2
 *   28  /gpio_keys/mc_switch_3
 *   29  /leds
 *   30  /leds/led_3
 *   31  /leds/led_4
 *   32  /soc/pin-controller@40020000/gpio@40021000
 *   33  /leds/mc_led_0
 *   34  /leds/mc_led_1
 *   35  /leds/mc_led_2
 *   36  /leds/mc_led_3
 *   37  /soc/interrupt-controller@e000e100
 *   38  /soc/adc@40012000
 *   39  /soc/adc@40012100
 *   40  /soc/adc@40012200
 *   41  /soc/can@40006400
 *   42  /soc/can@40006800
 *   43  /soc/dac@40007400
 *   44  /sdram@d0000000
 *   45  /soc/pin-controller@40020000/ltdc_b2_pd6
 *   46  /soc/pin-controller@40020000/ltdc_b3_pg11
 *   47  /soc/pin-controller@40020000/ltdc_b4_pg12
 *   48  /soc/pin-controller@40020000/ltdc_b5_pa3
 *   49  /soc/pin-controller@40020000/ltdc_b6_pb8
 *   50  /soc/pin-controller@40020000/ltdc_b7_pb9
 *   51  /soc/pin-controller@40020000/ltdc_clk_pg7
 *   52  /soc/pin-controller@40020000/ltdc_de_pf10
 *   53  /soc/pin-controller@40020000/ltdc_g2_pa6
 *   54  /soc/pin-controller@40020000/ltdc_g3_pg10
 *   55  /soc/pin-controller@40020000/ltdc_g4_pb10
 *   56  /soc/pin-controller@40020000/ltdc_g5_pb11
 *   57  /soc/pin-controller@40020000/ltdc_g6_pc7
 *   58  /soc/pin-controller@40020000/ltdc_g7_pd3
 *   59  /soc/pin-controller@40020000/ltdc_hsync_pc6
 *   60  /soc/pin-controller@40020000/ltdc_r2_pc10
 *   61  /soc/pin-controller@40020000/ltdc_r3_pb0
 *   62  /soc/pin-controller@40020000/ltdc_r4_pa11
 *   63  /soc/pin-controller@40020000/ltdc_r5_pa12
 *   64  /soc/pin-controller@40020000/ltdc_r6_pb1
 *   65  /soc/pin-controller@40020000/ltdc_r7_pg6
 *   66  /soc/pin-controller@40020000/ltdc_vsync_pa4
 *   67  /soc/display-controller@40016800
 *   68  /soc/dma@40026400
 *   69  /soc/ethernet@40028000
 *   70  /soc/pin-controller@40020000/i2c1_scl_pb8
 *   71  /soc/pin-controller@40020000/i2c1_sda_pb9
 *   72  /soc/i2c@40005400
 *   73  /soc/pin-controller@40020000/i2c2_scl_pb10
 *   74  /soc/pin-controller@40020000/i2c2_sda_pb11
 *   75  /soc/i2c@40005800
 *   76  /soc/pin-controller@40020000/i2c3_scl_pa8
 *   77  /soc/pin-controller@40020000/i2c3_sda_pc9
 *   78  /soc/i2c@40005c00
 *   79  /soc/dma@40026000
 *   80  /soc/i2s@40003800
 *   81  /soc/i2s@40003c00
 *   82  /soc/interrupt-controller@40013c00
 *   83  /soc/memory@40024000
 *   84  /soc/rng@50060800
 *   85  /soc/rtc@40002800
 *   86  /soc/sdmmc@40012c00
 *   87  /soc/serial@40004400
 *   88  /soc/serial@40004800
 *   89  /soc/serial@40004c00
 *   90  /soc/serial@40005000
 *   91  /soc/serial@40007800
 *   92  /soc/serial@40007c00
 *   93  /soc/pin-controller@40020000/usart1_rx_pa10
 *   94  /soc/pin-controller@40020000/usart1_tx_pa9
 *   95  /soc/serial@40011000
 *   96  /soc/serial@40011400
 *   97  /soc/spi@40003800
 *   98  /soc/spi@40003c00
 *   99  /soc/spi@40013000
 *   100 /soc/spi@40013400
 *   101 /soc/spi@40015400
 *   102 /soc/timer@e000e010
 *   103 /otghs_fs_phy
 *   104 /soc/usb@40040000
 *   105 /otgfs_phy
 *   106 /soc/usb@50000000
 *   107 /soc/watchdog@40002c00
 *   108 /soc/watchdog@40003000
 *   109 /soc/flash-controller@40023c00
 *   110 /soc/flash-controller@40023c00/flash@8000000
 *   111 /soc/pin-controller@40020000/fmc_a0_pf0
 *   112 /soc/pin-controller@40020000/fmc_a10_pg0
 *   113 /soc/pin-controller@40020000/fmc_a11_pg1
 *   114 /soc/pin-controller@40020000/fmc_a12_pg2
 *   115 /soc/pin-controller@40020000/fmc_a13_pg3
 *   116 /soc/pin-controller@40020000/fmc_a14_pg4
 *   117 /soc/pin-controller@40020000/fmc_a15_pg5
 *   118 /soc/pin-controller@40020000/fmc_a1_pf1
 *   119 /soc/pin-controller@40020000/fmc_a2_pf2
 *   120 /soc/pin-controller@40020000/fmc_a3_pf3
 *   121 /soc/pin-controller@40020000/fmc_a4_pf4
 *   122 /soc/pin-controller@40020000/fmc_a5_pf5
 *   123 /soc/pin-controller@40020000/fmc_a6_pf12
 *   124 /soc/pin-controller@40020000/fmc_a7_pf13
 *   125 /soc/pin-controller@40020000/fmc_a8_pf14
 *   126 /soc/pin-controller@40020000/fmc_a9_pf15
 *   127 /soc/pin-controller@40020000/fmc_d0_pd14
 *   128 /soc/pin-controller@40020000/fmc_d10_pe13
 *   129 /soc/pin-controller@40020000/fmc_d11_pe14
 *   130 /soc/pin-controller@40020000/fmc_d12_pe15
 *   131 /soc/pin-controller@40020000/fmc_d13_pd8
 *   132 /soc/pin-controller@40020000/fmc_d14_pd9
 *   133 /soc/pin-controller@40020000/fmc_d15_pd10
 *   134 /soc/pin-controller@40020000/fmc_d1_pd15
 *   135 /soc/pin-controller@40020000/fmc_d2_pd0
 *   136 /soc/pin-controller@40020000/fmc_d3_pd1
 *   137 /soc/pin-controller@40020000/fmc_d4_pe7
 *   138 /soc/pin-controller@40020000/fmc_d5_pe8
 *   139 /soc/pin-controller@40020000/fmc_d6_pe9
 *   140 /soc/pin-controller@40020000/fmc_d7_pe10
 *   141 /soc/pin-controller@40020000/fmc_d8_pe11
 *   142 /soc/pin-controller@40020000/fmc_d9_pe12
 *   143 /soc/pin-controller@40020000/fmc_nbl0_pe0
 *   144 /soc/pin-controller@40020000/fmc_nbl1_pe1
 *   145 /soc/pin-controller@40020000/fmc_sdcke1_pb5
 *   146 /soc/pin-controller@40020000/fmc_sdclk_pg8
 *   147 /soc/pin-controller@40020000/fmc_sdncas_pg15
 *   148 /soc/pin-controller@40020000/fmc_sdne1_pb6
 *   149 /soc/pin-controller@40020000/fmc_sdnras_pf11
 *   150 /soc/pin-controller@40020000/fmc_sdnwe_pc0
 *   151 /soc/memory-controller@a0000000
 *   152 /soc/memory-controller@a0000000/sdram
 *   153 /soc/memory-controller@a0000000/sdram/bank@1
 *   154 /soc/pin-controller@40020000/gpio@40020400
 *   155 /soc/pin-controller@40020000/gpio@40021c00
 *   156 /soc/pin-controller@40020000/gpio@40022000
 *   157 /soc/pin-controller@40020000/gpio@40022400
 *   158 /soc/pin-controller@40020000/gpio@40022800
 *   159 /soc/pin-controller@40020000/gpio@40020800
 *   160 /soc/pin-controller@40020000/spi5_miso_pf8
 *   161 /soc/pin-controller@40020000/spi5_mosi_pf9
 *   162 /soc/pin-controller@40020000/spi5_nss_pf6
 *   163 /soc/pin-controller@40020000/spi5_sck_pf7
 *   164 /soc/spi@40015000
 *   165 /soc/pin-controller@40020000/gpio@40020c00
 *   166 /soc/spi@40015000/ili9341@0
 *   167 /soc/timers@40000000
 *   168 /soc/timers@40000000/counter
 *   169 /soc/timers@40000000/pwm
 *   170 /soc/timers@40000400
 *   171 /soc/timers@40000400/counter
 *   172 /soc/timers@40000400/pwm
 *   173 /soc/timers@40000800
 *   174 /soc/timers@40000800/counter
 *   175 /soc/timers@40000800/pwm
 *   176 /soc/timers@40000c00
 *   177 /soc/timers@40000c00/counter
 *   178 /soc/timers@40000c00/pwm
 *   179 /soc/timers@40001000
 *   180 /soc/timers@40001000/counter
 *   181 /soc/timers@40001400
 *   182 /soc/timers@40001400/counter
 *   183 /soc/timers@40001800
 *   184 /soc/timers@40001800/counter
 *   185 /soc/timers@40001800/pwm
 *   186 /soc/timers@40001c00
 *   187 /soc/timers@40001c00/counter
 *   188 /soc/timers@40001c00/pwm
 *   189 /soc/timers@40002000
 *   190 /soc/timers@40002000/counter
 *   191 /soc/timers@40002000/pwm
 *   192 /soc/timers@40010000
 *   193 /soc/timers@40010000/pwm
 *   194 /soc/timers@40010400
 *   195 /soc/timers@40010400/pwm
 *   196 /soc/timers@40014000
 *   197 /soc/timers@40014000/counter
 *   198 /soc/timers@40014000/pwm
 *   199 /soc/timers@40014400
 *   200 /soc/timers@40014400/counter
 *   201 /soc/timers@40014400/pwm
 *   202 /soc/timers@40014800
 *   203 /soc/timers@40014800/counter
 *   204 /soc/timers@40014800/pwm
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_otgfs_phy) fn(DT_N_S_otghs_fs_phy) fn(DT_N_S_memory_10000000) fn(DT_N_S_sdram_d0000000) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_otghs_fs_phy, __VA_ARGS__) fn(DT_N_S_memory_10000000, __VA_ARGS__) fn(DT_N_S_sdram_d0000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_clocks) fn(DT_N_S_otgfs_phy) fn(DT_N_S_otghs_fs_phy) fn(DT_N_S_memory_10000000) fn(DT_N_S_sdram_d0000000) fn(DT_N_S_leds) fn(DT_N_S_gpio_keys) 
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_otghs_fs_phy, __VA_ARGS__) fn(DT_N_S_memory_10000000, __VA_ARGS__) fn(DT_N_S_sdram_d0000000, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_gpio_keys, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_ORD 0

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /memory@10000000 */ \
	4, /* /memory@20000000 */ \
	5, /* /clocks */ \
	9, /* /cpus */ \
	11, /* /gpio_keys */ \
	12, /* /soc */ \
	29, /* /leds */ \
	44, /* /sdram@d0000000 */ \
	103, /* /otghs_fs_phy */ \
	105, /* /otgfs_phy */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_st_stm32f4discovery DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_COMPAT_MATCHES_st_stm32f4discovery 1
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"st,stm32f4discovery"}
#define DT_N_P_compatible_IDX_0 "st,stm32f4discovery"
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /memory@10000000
 *
 * Node identifier: DT_N_S_memory_10000000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_10000000_PATH "/memory@10000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_10000000_FULL_NAME "memory@10000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_10000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_10000000_CHILD_IDX 8
#define DT_N_S_memory_10000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_10000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_10000000_ORD 3

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_10000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_10000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_10000000_EXISTS 1
#define DT_N_INST_0_zephyr_memory_region DT_N_S_memory_10000000
#define DT_N_INST_0_st_stm32_ccm         DT_N_S_memory_10000000
#define DT_N_NODELABEL_ccm0              DT_N_S_memory_10000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_10000000_REG_NUM 1
#define DT_N_S_memory_10000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_ADDRESS 268435456 /* 0x10000000 */
#define DT_N_S_memory_10000000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_memory_10000000_RANGES_NUM 0
#define DT_N_S_memory_10000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_10000000_IRQ_NUM 0
#define DT_N_S_memory_10000000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_memory_10000000_COMPAT_MATCHES_st_stm32_ccm 1
#define DT_N_S_memory_10000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_10000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_10000000_P_zephyr_memory_region "CCM"
#define DT_N_S_memory_10000000_P_zephyr_memory_region_STRING_TOKEN CCM
#define DT_N_S_memory_10000000_P_zephyr_memory_region_STRING_UPPER_TOKEN CCM
#define DT_N_S_memory_10000000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10000000, zephyr_memory_region, 0) \
	fn(DT_N_S_memory_10000000, zephyr_memory_region, 1) \
	fn(DT_N_S_memory_10000000, zephyr_memory_region, 2)
#define DT_N_S_memory_10000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_10000000, zephyr_memory_region, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_10000000, zephyr_memory_region, 1, __VA_ARGS__) \
	fn(DT_N_S_memory_10000000, zephyr_memory_region, 2, __VA_ARGS__)
#define DT_N_S_memory_10000000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible {"zephyr,memory-region", "st,stm32-ccm"}
#define DT_N_S_memory_10000000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_memory_10000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible_IDX_1 "st,stm32-ccm"
#define DT_N_S_memory_10000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_memory_10000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10000000, compatible, 0) \
	fn(DT_N_S_memory_10000000, compatible, 1)
#define DT_N_S_memory_10000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_10000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_10000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_memory_10000000_P_compatible_LEN 2
#define DT_N_S_memory_10000000_P_compatible_EXISTS 1
#define DT_N_S_memory_10000000_P_reg {268435456 /* 0x10000000 */, 65536 /* 0x10000 */}
#define DT_N_S_memory_10000000_P_reg_IDX_0 268435456
#define DT_N_S_memory_10000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_10000000_P_reg_IDX_1 65536
#define DT_N_S_memory_10000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_10000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_10000000, reg, 0) \
	fn(DT_N_S_memory_10000000, reg, 1)
#define DT_N_S_memory_10000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_10000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_10000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_10000000_P_reg_EXISTS 1
#define DT_N_S_memory_10000000_P_wakeup_source 0
#define DT_N_S_memory_10000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 4
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 4

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 196608 /* 0x30000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 196608 /* 0x30000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 196608
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, reg, 0) \
	fn(DT_N_S_memory_20000000, reg, 1)
#define DT_N_S_memory_20000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_memory_20000000, reg, 1, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 5
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_clk_hsi) fn(DT_N_S_clocks_S_clk_lse) fn(DT_N_S_clocks_S_clk_lsi) fn(DT_N_S_clocks_S_pll)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_hsi, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lse, __VA_ARGS__) fn(DT_N_S_clocks_S_clk_lsi, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_clk_hse) fn(DT_N_S_clocks_S_pll) 
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__) fn(DT_N_S_clocks_S_pll, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 5

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	6, /* /clocks/clk-hsi */ \
	7, /* /clocks/clk-lse */ \
	8, /* /clocks/clk-lsi */ \
	14, /* /clocks/clk-hse */ \
	15, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /clocks/clk-hsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_hsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hsi_PATH "/clocks/clk-hsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hsi_FULL_NAME "clk-hsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hsi_CHILD_IDX 1
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hsi_ORD 6

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hsi_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_clocks_S_clk_hsi
#define DT_N_NODELABEL_clk_hsi  DT_N_S_clocks_S_clk_hsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_hsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_hsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency 16000000
#define DT_N_S_clocks_S_clk_hsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lse
 *
 * Node identifier: DT_N_S_clocks_S_clk_lse
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lse_PATH "/clocks/clk-lse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lse_FULL_NAME "clk-lse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lse_CHILD_IDX 2
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lse_ORD 7

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lse_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lse_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_clocks_S_clk_lse
#define DT_N_NODELABEL_clk_lse  DT_N_S_clocks_S_clk_lse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lse_REG_NUM 0
#define DT_N_S_clocks_S_clk_lse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lse_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lse_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency 32768
#define DT_N_S_clocks_S_clk_lse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/clk-lsi
 *
 * Node identifier: DT_N_S_clocks_S_clk_lsi
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_lsi_PATH "/clocks/clk-lsi"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_lsi_FULL_NAME "clk-lsi"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_lsi_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_lsi_CHILD_IDX 3
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_lsi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_lsi_ORD 8

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_lsi_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_lsi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_lsi_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_clocks_S_clk_lsi
#define DT_N_NODELABEL_clk_lsi  DT_N_S_clocks_S_clk_lsi

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_lsi_REG_NUM 0
#define DT_N_S_clocks_S_clk_lsi_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_lsi_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_lsi_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_lsi_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_clocks_S_clk_lsi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_lsi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency 32000
#define DT_N_S_clocks_S_clk_lsi_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) 
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 9

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	10, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m4f):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m4f.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 10

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	9, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m4f DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m4f 1
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m4f"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m4f"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, reg, 0)
#define DT_N_S_cpus_S_cpu_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, reg, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys
 *
 * Node identifier: DT_N_S_gpio_keys
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_PATH "/gpio_keys"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_FULL_NAME "gpio_keys"

/* Node parent (/) identifier: */
#define DT_N_S_gpio_keys_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_CHILD_IDX 11
#define DT_N_S_gpio_keys_FOREACH_CHILD(fn) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_gpio_keys_S_mc_button_0) fn(DT_N_S_gpio_keys_S_mc_button_1) fn(DT_N_S_gpio_keys_S_mc_button_2) fn(DT_N_S_gpio_keys_S_mc_button_3) fn(DT_N_S_gpio_keys_S_mc_switch_0) fn(DT_N_S_gpio_keys_S_mc_switch_1) fn(DT_N_S_gpio_keys_S_mc_switch_2) fn(DT_N_S_gpio_keys_S_mc_switch_3)
#define DT_N_S_gpio_keys_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_button_0, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_button_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_button_3, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_switch_0, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_switch_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_switch_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_switch_3, __VA_ARGS__)
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio_keys_S_button) fn(DT_N_S_gpio_keys_S_mc_button_0) fn(DT_N_S_gpio_keys_S_mc_button_1) fn(DT_N_S_gpio_keys_S_mc_button_2) fn(DT_N_S_gpio_keys_S_mc_button_3) fn(DT_N_S_gpio_keys_S_mc_switch_0) fn(DT_N_S_gpio_keys_S_mc_switch_1) fn(DT_N_S_gpio_keys_S_mc_switch_2) fn(DT_N_S_gpio_keys_S_mc_switch_3) 
#define DT_N_S_gpio_keys_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_button_0, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_button_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_button_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_button_3, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_switch_0, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_switch_1, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_switch_2, __VA_ARGS__) fn(DT_N_S_gpio_keys_S_mc_switch_3, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_ORD 11

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_SUPPORTS_ORDS \
	18, /* /gpio_keys/button */ \
	20, /* /gpio_keys/mc_button_0 */ \
	21, /* /gpio_keys/mc_button_1 */ \
	22, /* /gpio_keys/mc_button_2 */ \
	23, /* /gpio_keys/mc_button_3 */ \
	25, /* /gpio_keys/mc_switch_0 */ \
	26, /* /gpio_keys/mc_switch_1 */ \
	27, /* /gpio_keys/mc_switch_2 */ \
	28, /* /gpio_keys/mc_switch_3 */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_gpio_keys

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_REG_NUM 0
#define DT_N_S_gpio_keys_RANGES_NUM 0
#define DT_N_S_gpio_keys_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_IRQ_NUM 0
#define DT_N_S_gpio_keys_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_gpio_keys_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_P_compatible {"gpio-keys"}
#define DT_N_S_gpio_keys_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_gpio_keys_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys, compatible, 0)
#define DT_N_S_gpio_keys_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_P_compatible_LEN 1
#define DT_N_S_gpio_keys_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_watchdog_40003000) fn(DT_N_S_soc_S_watchdog_40002c00) fn(DT_N_S_soc_S_serial_40011000) fn(DT_N_S_soc_S_serial_40004400) fn(DT_N_S_soc_S_serial_40011400) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_spi_40013000) fn(DT_N_S_soc_S_usb_50000000) fn(DT_N_S_soc_S_timers_40010000) fn(DT_N_S_soc_S_timers_40000000) fn(DT_N_S_soc_S_timers_40000400) fn(DT_N_S_soc_S_timers_40000800) fn(DT_N_S_soc_S_timers_40000c00) fn(DT_N_S_soc_S_timers_40014000) fn(DT_N_S_soc_S_timers_40014400) fn(DT_N_S_soc_S_timers_40014800) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_adc_40012000) fn(DT_N_S_soc_S_dma_40026000) fn(DT_N_S_soc_S_dma_40026400) fn(DT_N_S_soc_S_sdmmc_40012c00) fn(DT_N_S_soc_S_spi_40003800) fn(DT_N_S_soc_S_spi_40003c00) fn(DT_N_S_soc_S_spi_40013400) fn(DT_N_S_soc_S_i2s_40003800) fn(DT_N_S_soc_S_i2s_40003c00) fn(DT_N_S_soc_S_serial_40004800) fn(DT_N_S_soc_S_serial_40004c00) fn(DT_N_S_soc_S_serial_40005000) fn(DT_N_S_soc_S_timers_40001000) fn(DT_N_S_soc_S_timers_40001400) fn(DT_N_S_soc_S_timers_40010400) fn(DT_N_S_soc_S_timers_40001800) fn(DT_N_S_soc_S_timers_40001c00) fn(DT_N_S_soc_S_timers_40002000) fn(DT_N_S_soc_S_usb_40040000) fn(DT_N_S_soc_S_can_40006400) fn(DT_N_S_soc_S_can_40006800) fn(DT_N_S_soc_S_rng_50060800) fn(DT_N_S_soc_S_memory_40024000) fn(DT_N_S_soc_S_adc_40012100) fn(DT_N_S_soc_S_adc_40012200) fn(DT_N_S_soc_S_dac_40007400) fn(DT_N_S_soc_S_ethernet_40028000) fn(DT_N_S_soc_S_serial_40007800) fn(DT_N_S_soc_S_serial_40007c00) fn(DT_N_S_soc_S_spi_40015000) fn(DT_N_S_soc_S_spi_40015400) fn(DT_N_S_soc_S_memory_controller_a0000000) fn(DT_N_S_soc_S_display_controller_40016800)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40003000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_40002c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004400, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_50000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40010000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40026400, __VA_ARGS__) fn(DT_N_S_soc_S_sdmmc_40012c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40013400, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003800, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_40003c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40004c00, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40005000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001000, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40010400, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001800, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001c00, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000, __VA_ARGS__) fn(DT_N_S_soc_S_usb_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_can_40006400, __VA_ARGS__) fn(DT_N_S_soc_S_can_40006800, __VA_ARGS__) fn(DT_N_S_soc_S_rng_50060800, __VA_ARGS__) fn(DT_N_S_soc_S_memory_40024000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012100, __VA_ARGS__) fn(DT_N_S_soc_S_adc_40012200, __VA_ARGS__) fn(DT_N_S_soc_S_dac_40007400, __VA_ARGS__) fn(DT_N_S_soc_S_ethernet_40028000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40007800, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40007c00, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40015400, __VA_ARGS__) fn(DT_N_S_soc_S_memory_controller_a0000000, __VA_ARGS__) fn(DT_N_S_soc_S_display_controller_40016800, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_flash_controller_40023c00) fn(DT_N_S_soc_S_rcc_40023800) fn(DT_N_S_soc_S_interrupt_controller_40013c00) fn(DT_N_S_soc_S_pin_controller_40020000) fn(DT_N_S_soc_S_serial_40011000) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00) fn(DT_N_S_soc_S_rtc_40002800) fn(DT_N_S_soc_S_spi_40015000) fn(DT_N_S_soc_S_memory_controller_a0000000) fn(DT_N_S_soc_S_display_controller_40016800) 
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_controller_a0000000, __VA_ARGS__) fn(DT_N_S_soc_S_display_controller_40016800, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 12

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	38, /* /soc/adc@40012000 */ \
	39, /* /soc/adc@40012100 */ \
	40, /* /soc/adc@40012200 */ \
	41, /* /soc/can@40006400 */ \
	42, /* /soc/can@40006800 */ \
	43, /* /soc/dac@40007400 */ \
	67, /* /soc/display-controller@40016800 */ \
	68, /* /soc/dma@40026400 */ \
	69, /* /soc/ethernet@40028000 */ \
	72, /* /soc/i2c@40005400 */ \
	75, /* /soc/i2c@40005800 */ \
	78, /* /soc/i2c@40005c00 */ \
	79, /* /soc/dma@40026000 */ \
	80, /* /soc/i2s@40003800 */ \
	81, /* /soc/i2s@40003c00 */ \
	82, /* /soc/interrupt-controller@40013c00 */ \
	83, /* /soc/memory@40024000 */ \
	84, /* /soc/rng@50060800 */ \
	85, /* /soc/rtc@40002800 */ \
	86, /* /soc/sdmmc@40012c00 */ \
	87, /* /soc/serial@40004400 */ \
	88, /* /soc/serial@40004800 */ \
	89, /* /soc/serial@40004c00 */ \
	90, /* /soc/serial@40005000 */ \
	91, /* /soc/serial@40007800 */ \
	92, /* /soc/serial@40007c00 */ \
	95, /* /soc/serial@40011000 */ \
	96, /* /soc/serial@40011400 */ \
	97, /* /soc/spi@40003800 */ \
	98, /* /soc/spi@40003c00 */ \
	99, /* /soc/spi@40013000 */ \
	100, /* /soc/spi@40013400 */ \
	101, /* /soc/spi@40015400 */ \
	102, /* /soc/timer@e000e010 */ \
	104, /* /soc/usb@40040000 */ \
	106, /* /soc/usb@50000000 */ \
	107, /* /soc/watchdog@40002c00 */ \
	108, /* /soc/watchdog@40003000 */ \
	109, /* /soc/flash-controller@40023c00 */ \
	151, /* /soc/memory-controller@a0000000 */ \
	164, /* /soc/spi@40015000 */ \
	167, /* /soc/timers@40000000 */ \
	170, /* /soc/timers@40000400 */ \
	173, /* /soc/timers@40000800 */ \
	176, /* /soc/timers@40000c00 */ \
	179, /* /soc/timers@40001000 */ \
	181, /* /soc/timers@40001400 */ \
	183, /* /soc/timers@40001800 */ \
	186, /* /soc/timers@40001c00 */ \
	189, /* /soc/timers@40002000 */ \
	192, /* /soc/timers@40010000 */ \
	194, /* /soc/timers@40010400 */ \
	196, /* /soc/timers@40014000 */ \
	199, /* /soc/timers@40014400 */ \
	202, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000
 *
 * Binding (compatible = st,stm32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/st,stm32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_PATH "/soc/pin-controller@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_FULL_NAME "pin-controller@40020000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_CHILD_IDX 5
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9) 
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_ORD 13

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_SUPPORTS_ORDS \
	17, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	19, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	24, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	32, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	45, /* /soc/pin-controller@40020000/ltdc_b2_pd6 */ \
	46, /* /soc/pin-controller@40020000/ltdc_b3_pg11 */ \
	47, /* /soc/pin-controller@40020000/ltdc_b4_pg12 */ \
	48, /* /soc/pin-controller@40020000/ltdc_b5_pa3 */ \
	49, /* /soc/pin-controller@40020000/ltdc_b6_pb8 */ \
	50, /* /soc/pin-controller@40020000/ltdc_b7_pb9 */ \
	51, /* /soc/pin-controller@40020000/ltdc_clk_pg7 */ \
	52, /* /soc/pin-controller@40020000/ltdc_de_pf10 */ \
	53, /* /soc/pin-controller@40020000/ltdc_g2_pa6 */ \
	54, /* /soc/pin-controller@40020000/ltdc_g3_pg10 */ \
	55, /* /soc/pin-controller@40020000/ltdc_g4_pb10 */ \
	56, /* /soc/pin-controller@40020000/ltdc_g5_pb11 */ \
	57, /* /soc/pin-controller@40020000/ltdc_g6_pc7 */ \
	58, /* /soc/pin-controller@40020000/ltdc_g7_pd3 */ \
	59, /* /soc/pin-controller@40020000/ltdc_hsync_pc6 */ \
	60, /* /soc/pin-controller@40020000/ltdc_r2_pc10 */ \
	61, /* /soc/pin-controller@40020000/ltdc_r3_pb0 */ \
	62, /* /soc/pin-controller@40020000/ltdc_r4_pa11 */ \
	63, /* /soc/pin-controller@40020000/ltdc_r5_pa12 */ \
	64, /* /soc/pin-controller@40020000/ltdc_r6_pb1 */ \
	65, /* /soc/pin-controller@40020000/ltdc_r7_pg6 */ \
	66, /* /soc/pin-controller@40020000/ltdc_vsync_pa4 */ \
	70, /* /soc/pin-controller@40020000/i2c1_scl_pb8 */ \
	71, /* /soc/pin-controller@40020000/i2c1_sda_pb9 */ \
	73, /* /soc/pin-controller@40020000/i2c2_scl_pb10 */ \
	74, /* /soc/pin-controller@40020000/i2c2_sda_pb11 */ \
	76, /* /soc/pin-controller@40020000/i2c3_scl_pa8 */ \
	77, /* /soc/pin-controller@40020000/i2c3_sda_pc9 */ \
	93, /* /soc/pin-controller@40020000/usart1_rx_pa10 */ \
	94, /* /soc/pin-controller@40020000/usart1_tx_pa9 */ \
	111, /* /soc/pin-controller@40020000/fmc_a0_pf0 */ \
	112, /* /soc/pin-controller@40020000/fmc_a10_pg0 */ \
	113, /* /soc/pin-controller@40020000/fmc_a11_pg1 */ \
	114, /* /soc/pin-controller@40020000/fmc_a12_pg2 */ \
	115, /* /soc/pin-controller@40020000/fmc_a13_pg3 */ \
	116, /* /soc/pin-controller@40020000/fmc_a14_pg4 */ \
	117, /* /soc/pin-controller@40020000/fmc_a15_pg5 */ \
	118, /* /soc/pin-controller@40020000/fmc_a1_pf1 */ \
	119, /* /soc/pin-controller@40020000/fmc_a2_pf2 */ \
	120, /* /soc/pin-controller@40020000/fmc_a3_pf3 */ \
	121, /* /soc/pin-controller@40020000/fmc_a4_pf4 */ \
	122, /* /soc/pin-controller@40020000/fmc_a5_pf5 */ \
	123, /* /soc/pin-controller@40020000/fmc_a6_pf12 */ \
	124, /* /soc/pin-controller@40020000/fmc_a7_pf13 */ \
	125, /* /soc/pin-controller@40020000/fmc_a8_pf14 */ \
	126, /* /soc/pin-controller@40020000/fmc_a9_pf15 */ \
	127, /* /soc/pin-controller@40020000/fmc_d0_pd14 */ \
	128, /* /soc/pin-controller@40020000/fmc_d10_pe13 */ \
	129, /* /soc/pin-controller@40020000/fmc_d11_pe14 */ \
	130, /* /soc/pin-controller@40020000/fmc_d12_pe15 */ \
	131, /* /soc/pin-controller@40020000/fmc_d13_pd8 */ \
	132, /* /soc/pin-controller@40020000/fmc_d14_pd9 */ \
	133, /* /soc/pin-controller@40020000/fmc_d15_pd10 */ \
	134, /* /soc/pin-controller@40020000/fmc_d1_pd15 */ \
	135, /* /soc/pin-controller@40020000/fmc_d2_pd0 */ \
	136, /* /soc/pin-controller@40020000/fmc_d3_pd1 */ \
	137, /* /soc/pin-controller@40020000/fmc_d4_pe7 */ \
	138, /* /soc/pin-controller@40020000/fmc_d5_pe8 */ \
	139, /* /soc/pin-controller@40020000/fmc_d6_pe9 */ \
	140, /* /soc/pin-controller@40020000/fmc_d7_pe10 */ \
	141, /* /soc/pin-controller@40020000/fmc_d8_pe11 */ \
	142, /* /soc/pin-controller@40020000/fmc_d9_pe12 */ \
	143, /* /soc/pin-controller@40020000/fmc_nbl0_pe0 */ \
	144, /* /soc/pin-controller@40020000/fmc_nbl1_pe1 */ \
	145, /* /soc/pin-controller@40020000/fmc_sdcke1_pb5 */ \
	146, /* /soc/pin-controller@40020000/fmc_sdclk_pg8 */ \
	147, /* /soc/pin-controller@40020000/fmc_sdncas_pg15 */ \
	148, /* /soc/pin-controller@40020000/fmc_sdne1_pb6 */ \
	149, /* /soc/pin-controller@40020000/fmc_sdnras_pf11 */ \
	150, /* /soc/pin-controller@40020000/fmc_sdnwe_pc0 */ \
	154, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	155, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	156, /* /soc/pin-controller@40020000/gpio@40022000 */ \
	157, /* /soc/pin-controller@40020000/gpio@40022400 */ \
	158, /* /soc/pin-controller@40020000/gpio@40022800 */ \
	159, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	160, /* /soc/pin-controller@40020000/spi5_miso_pf8 */ \
	161, /* /soc/pin-controller@40020000/spi5_mosi_pf9 */ \
	162, /* /soc/pin-controller@40020000/spi5_nss_pf6 */ \
	163, /* /soc/pin-controller@40020000/spi5_sck_pf7 */ \
	165, /* /soc/pin-controller@40020000/gpio@40020c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_pinctrl DT_N_S_soc_S_pin_controller_40020000
#define DT_N_NODELABEL_pinctrl       DT_N_S_soc_S_pin_controller_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_REG_IDX_0_VAL_SIZE 11264 /* 0x2c00 */
#define DT_N_S_soc_S_pin_controller_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_COMPAT_MATCHES_st_stm32_pinctrl 1
#define DT_N_S_soc_S_pin_controller_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_P_reg {1073872896 /* 0x40020000 */, 11264 /* 0x2c00 */}
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1 11264
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11 0
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa12 0
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11_pa12 0
#define DT_N_S_soc_S_pin_controller_40020000_P_remap_pa11_pa12_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible {"st,stm32-pinctrl"}
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0 "st,stm32-pinctrl"
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /clocks/clk-hse
 *
 * Node identifier: DT_N_S_clocks_S_clk_hse
 *
 * Binding (compatible = st,stm32-hse-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-hse-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_clk_hse_PATH "/clocks/clk-hse"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_clk_hse_FULL_NAME "clk-hse"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_clk_hse_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_clk_hse_CHILD_IDX 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_clk_hse_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_clk_hse_ORD 14

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_clk_hse_REQUIRES_ORDS \
	5, /* /clocks */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_clk_hse_SUPPORTS_ORDS \
	15, /* /clocks/pll */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_clk_hse_EXISTS 1
#define DT_N_INST_0_st_stm32_hse_clock DT_N_S_clocks_S_clk_hse
#define DT_N_NODELABEL_clk_hse         DT_N_S_clocks_S_clk_hse

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_clk_hse_REG_NUM 0
#define DT_N_S_clocks_S_clk_hse_RANGES_NUM 0
#define DT_N_S_clocks_S_clk_hse_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_clk_hse_IRQ_NUM 0
#define DT_N_S_clocks_S_clk_hse_COMPAT_MATCHES_st_stm32_hse_clock 1
#define DT_N_S_clocks_S_clk_hse_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_clk_hse_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass 0
#define DT_N_S_clocks_S_clk_hse_P_hse_bypass_EXISTS 1
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency 8000000
#define DT_N_S_clocks_S_clk_hse_P_clock_frequency_EXISTS 1

/*
 * Devicetree node: /clocks/pll
 *
 * Node identifier: DT_N_S_clocks_S_pll
 *
 * Binding (compatible = st,stm32f4-pll-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32f4-pll-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pll_PATH "/clocks/pll"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pll_FULL_NAME "pll"

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pll_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pll_CHILD_IDX 4
#define DT_N_S_clocks_S_pll_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pll_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pll_ORD 15

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pll_REQUIRES_ORDS \
	5, /* /clocks */ \
	14, /* /clocks/clk-hse */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pll_SUPPORTS_ORDS \
	16, /* /soc/rcc@40023800 */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pll_EXISTS 1
#define DT_N_INST_0_st_stm32f4_pll_clock DT_N_S_clocks_S_pll
#define DT_N_NODELABEL_pll               DT_N_S_clocks_S_pll

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pll_REG_NUM 0
#define DT_N_S_clocks_S_pll_RANGES_NUM 0
#define DT_N_S_clocks_S_pll_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pll_IRQ_NUM 0
#define DT_N_S_clocks_S_pll_COMPAT_MATCHES_st_stm32f4_pll_clock 1
#define DT_N_S_clocks_S_pll_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pll_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_clocks_IDX_0_PH DT_N_S_clocks_S_clk_hse
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, clocks, 0)
#define DT_N_S_clocks_S_pll_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_clocks_LEN 1
#define DT_N_S_clocks_S_pll_P_clocks_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_m 8
#define DT_N_S_clocks_S_pll_P_div_m_EXISTS 1
#define DT_N_S_clocks_S_pll_P_mul_n 336
#define DT_N_S_clocks_S_pll_P_mul_n_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_p 2
#define DT_N_S_clocks_S_pll_P_div_p_ENUM_IDX 0
#define DT_N_S_clocks_S_pll_P_div_p_EXISTS 1
#define DT_N_S_clocks_S_pll_P_div_q 7
#define DT_N_S_clocks_S_pll_P_div_q_EXISTS 1
#define DT_N_S_clocks_S_pll_P_status "okay"
#define DT_N_S_clocks_S_pll_P_status_STRING_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_ENUM_IDX 1
#define DT_N_S_clocks_S_pll_P_status_ENUM_TOKEN okay
#define DT_N_S_clocks_S_pll_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, status, 0) \
	fn(DT_N_S_clocks_S_pll, status, 1) \
	fn(DT_N_S_clocks_S_pll, status, 2) \
	fn(DT_N_S_clocks_S_pll, status, 3)
#define DT_N_S_clocks_S_pll_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, status, 0, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 1, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 2, __VA_ARGS__) \
	fn(DT_N_S_clocks_S_pll, status, 3, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_status_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible {"st,stm32f4-pll-clock"}
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0 "st,stm32f4-pll-clock"
#define DT_N_S_clocks_S_pll_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pll, compatible, 0)
#define DT_N_S_clocks_S_pll_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pll, compatible, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pll_P_compatible_LEN 1
#define DT_N_S_clocks_S_pll_P_compatible_EXISTS 1
#define DT_N_S_clocks_S_pll_P_wakeup_source 0
#define DT_N_S_clocks_S_pll_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rcc@40023800
 *
 * Node identifier: DT_N_S_soc_S_rcc_40023800
 *
 * Binding (compatible = st,stm32-rcc):
 *   $ZEPHYR_BASE/dts/bindings/clock/st,stm32-rcc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rcc_40023800_PATH "/soc/rcc@40023800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rcc_40023800_FULL_NAME "rcc@40023800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rcc_40023800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rcc_40023800_CHILD_IDX 3
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rcc_40023800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rcc_40023800_ORD 16

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rcc_40023800_REQUIRES_ORDS \
	12, /* /soc */ \
	15, /* /clocks/pll */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rcc_40023800_SUPPORTS_ORDS \
	17, /* /soc/pin-controller@40020000/gpio@40020000 */ \
	19, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	24, /* /soc/pin-controller@40020000/gpio@40021400 */ \
	32, /* /soc/pin-controller@40020000/gpio@40021000 */ \
	38, /* /soc/adc@40012000 */ \
	39, /* /soc/adc@40012100 */ \
	40, /* /soc/adc@40012200 */ \
	41, /* /soc/can@40006400 */ \
	42, /* /soc/can@40006800 */ \
	43, /* /soc/dac@40007400 */ \
	67, /* /soc/display-controller@40016800 */ \
	68, /* /soc/dma@40026400 */ \
	69, /* /soc/ethernet@40028000 */ \
	72, /* /soc/i2c@40005400 */ \
	75, /* /soc/i2c@40005800 */ \
	78, /* /soc/i2c@40005c00 */ \
	79, /* /soc/dma@40026000 */ \
	80, /* /soc/i2s@40003800 */ \
	81, /* /soc/i2s@40003c00 */ \
	83, /* /soc/memory@40024000 */ \
	84, /* /soc/rng@50060800 */ \
	85, /* /soc/rtc@40002800 */ \
	86, /* /soc/sdmmc@40012c00 */ \
	87, /* /soc/serial@40004400 */ \
	88, /* /soc/serial@40004800 */ \
	89, /* /soc/serial@40004c00 */ \
	90, /* /soc/serial@40005000 */ \
	91, /* /soc/serial@40007800 */ \
	92, /* /soc/serial@40007c00 */ \
	95, /* /soc/serial@40011000 */ \
	96, /* /soc/serial@40011400 */ \
	97, /* /soc/spi@40003800 */ \
	98, /* /soc/spi@40003c00 */ \
	99, /* /soc/spi@40013000 */ \
	100, /* /soc/spi@40013400 */ \
	101, /* /soc/spi@40015400 */ \
	104, /* /soc/usb@40040000 */ \
	106, /* /soc/usb@50000000 */ \
	107, /* /soc/watchdog@40002c00 */ \
	151, /* /soc/memory-controller@a0000000 */ \
	154, /* /soc/pin-controller@40020000/gpio@40020400 */ \
	155, /* /soc/pin-controller@40020000/gpio@40021c00 */ \
	156, /* /soc/pin-controller@40020000/gpio@40022000 */ \
	157, /* /soc/pin-controller@40020000/gpio@40022400 */ \
	158, /* /soc/pin-controller@40020000/gpio@40022800 */ \
	159, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	164, /* /soc/spi@40015000 */ \
	165, /* /soc/pin-controller@40020000/gpio@40020c00 */ \
	167, /* /soc/timers@40000000 */ \
	170, /* /soc/timers@40000400 */ \
	173, /* /soc/timers@40000800 */ \
	176, /* /soc/timers@40000c00 */ \
	179, /* /soc/timers@40001000 */ \
	181, /* /soc/timers@40001400 */ \
	183, /* /soc/timers@40001800 */ \
	186, /* /soc/timers@40001c00 */ \
	189, /* /soc/timers@40002000 */ \
	192, /* /soc/timers@40010000 */ \
	194, /* /soc/timers@40010400 */ \
	196, /* /soc/timers@40014000 */ \
	199, /* /soc/timers@40014400 */ \
	202, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rcc_40023800_EXISTS 1
#define DT_N_INST_0_st_stm32_rcc DT_N_S_soc_S_rcc_40023800
#define DT_N_NODELABEL_rcc       DT_N_S_soc_S_rcc_40023800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rcc_40023800_REG_NUM 1
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_VAL_ADDRESS 1073887232 /* 0x40023800 */
#define DT_N_S_soc_S_rcc_40023800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rcc_40023800_RANGES_NUM 0
#define DT_N_S_soc_S_rcc_40023800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rcc_40023800_IRQ_NUM 0
#define DT_N_S_soc_S_rcc_40023800_COMPAT_MATCHES_st_stm32_rcc 1
#define DT_N_S_soc_S_rcc_40023800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rcc_40023800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rcc_40023800_P_reg {1073887232 /* 0x40023800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_0 1073887232
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rcc_40023800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, reg, 0) \
	fn(DT_N_S_soc_S_rcc_40023800, reg, 1)
#define DT_N_S_soc_S_rcc_40023800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rcc_40023800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clock_frequency 168000000
#define DT_N_S_soc_S_rcc_40023800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler 1
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler_ENUM_IDX 0
#define DT_N_S_soc_S_rcc_40023800_P_ahb_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler 4
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler_ENUM_IDX 2
#define DT_N_S_soc_S_rcc_40023800_P_apb1_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler 2
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler_ENUM_IDX 1
#define DT_N_S_soc_S_rcc_40023800_P_apb2_prescaler_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_undershoot_prevention 0
#define DT_N_S_soc_S_rcc_40023800_P_undershoot_prevention_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible {"st,stm32-rcc"}
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0 "st,stm32-rcc"
#define DT_N_S_soc_S_rcc_40023800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, compatible, 0)
#define DT_N_S_soc_S_rcc_40023800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_compatible_LEN 1
#define DT_N_S_soc_S_rcc_40023800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_IDX_0_PH DT_N_S_clocks_S_pll
#define DT_N_S_soc_S_rcc_40023800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rcc_40023800, clocks, 0)
#define DT_N_S_soc_S_rcc_40023800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rcc_40023800_P_clocks_LEN 1
#define DT_N_S_soc_S_rcc_40023800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rcc_40023800_P_wakeup_source 0
#define DT_N_S_soc_S_rcc_40023800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PATH "/soc/pin-controller@40020000/gpio@40020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FULL_NAME "gpio@40020000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_CHILD_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_ORD 17

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_SUPPORTS_ORDS \
	18, /* /gpio_keys/button */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_EXISTS 1
#define DT_N_INST_0_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_NODELABEL_gpioa      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_ADDRESS 1073872896 /* 0x40020000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg {1073872896 /* 0x40020000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0 1073872896
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label "GPIOA"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_STRING_TOKEN GPIOA
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_STRING_UPPER_TOKEN GPIOA
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/button
 *
 * Node identifier: DT_N_S_gpio_keys_S_button
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_button_PATH "/gpio_keys/button"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_button_FULL_NAME "button"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_button_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_button_CHILD_IDX 0
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_button_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_button_ORD 18

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_button_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	17, /* /soc/pin-controller@40020000/gpio@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_button_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_button_EXISTS 1
#define DT_N_ALIAS_sw0             DT_N_S_gpio_keys_S_button
#define DT_N_NODELABEL_user_button DT_N_S_gpio_keys_S_button

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_button_REG_NUM 0
#define DT_N_S_gpio_keys_S_button_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_button_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_button_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_button_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_button_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_button_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, gpios, 0)
#define DT_N_S_gpio_keys_S_button_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_button_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_button_P_label "User"
#define DT_N_S_gpio_keys_S_button_P_label_STRING_TOKEN User
#define DT_N_S_gpio_keys_S_button_P_label_STRING_UPPER_TOKEN USER
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_button, label, 0) \
	fn(DT_N_S_gpio_keys_S_button, label, 1) \
	fn(DT_N_S_gpio_keys_S_button, label, 2) \
	fn(DT_N_S_gpio_keys_S_button, label, 3)
#define DT_N_S_gpio_keys_S_button_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_button, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_button, label, 3, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_button_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PATH "/soc/pin-controller@40020000/gpio@40021800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FULL_NAME "gpio@40021800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_CHILD_IDX 6
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_ORD 19

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_SUPPORTS_ORDS \
	20, /* /gpio_keys/mc_button_0 */ \
	21, /* /gpio_keys/mc_button_1 */ \
	22, /* /gpio_keys/mc_button_2 */ \
	23, /* /gpio_keys/mc_button_3 */ \
	30, /* /leds/led_3 */ \
	31, /* /leds/led_4 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_EXISTS 1
#define DT_N_INST_6_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_NODELABEL_gpiog      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_ADDRESS 1073879040 /* 0x40021800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg {1073879040 /* 0x40021800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0 1073879040
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label "GPIOG"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_STRING_TOKEN GPIOG
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_STRING_UPPER_TOKEN GPIOG
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/mc_button_0
 *
 * Node identifier: DT_N_S_gpio_keys_S_mc_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_mc_button_0_PATH "/gpio_keys/mc_button_0"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_mc_button_0_FULL_NAME "mc_button_0"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_mc_button_0_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_mc_button_0_CHILD_IDX 1
#define DT_N_S_gpio_keys_S_mc_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_mc_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_mc_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_mc_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_mc_button_0_ORD 20

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_mc_button_0_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	19, /* /soc/pin-controller@40020000/gpio@40021800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_mc_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_mc_button_0_EXISTS 1
#define DT_N_NODELABEL_mc_t0 DT_N_S_gpio_keys_S_mc_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_mc_button_0_REG_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_0_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_mc_button_0_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_mc_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_button_0, gpios, 0)
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_mc_button_0_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_0_P_label "MC1-Board button T0"
#define DT_N_S_gpio_keys_S_mc_button_0_P_label_STRING_TOKEN MC1_Board_button_T0
#define DT_N_S_gpio_keys_S_mc_button_0_P_label_STRING_UPPER_TOKEN MC1_BOARD_BUTTON_T0
#define DT_N_S_gpio_keys_S_mc_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_button_0, label, 0) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 1) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 2) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 3) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 4) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 5) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 6) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 7) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 8) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 9) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 10) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 11) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 12) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 13) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 14) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 15) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 16) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 17) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 18)
#define DT_N_S_gpio_keys_S_mc_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_button_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 8, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 9, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 10, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 11, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 12, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 13, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 14, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 15, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 16, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 17, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_0, label, 18, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_button_0_P_label_EXISTS 1

/*
 * Devicetree node: /gpio_keys/mc_button_1
 *
 * Node identifier: DT_N_S_gpio_keys_S_mc_button_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_mc_button_1_PATH "/gpio_keys/mc_button_1"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_mc_button_1_FULL_NAME "mc_button_1"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_mc_button_1_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_mc_button_1_CHILD_IDX 2
#define DT_N_S_gpio_keys_S_mc_button_1_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_mc_button_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_mc_button_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_mc_button_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_mc_button_1_ORD 21

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_mc_button_1_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	19, /* /soc/pin-controller@40020000/gpio@40021800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_mc_button_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_mc_button_1_EXISTS 1
#define DT_N_NODELABEL_mc_t1 DT_N_S_gpio_keys_S_mc_button_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_mc_button_1_REG_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_1_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_1_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_mc_button_1_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_mc_button_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_IDX_0_VAL_pin 1
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_button_1, gpios, 0)
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_mc_button_1_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_1_P_label "MC1-Board button T1"
#define DT_N_S_gpio_keys_S_mc_button_1_P_label_STRING_TOKEN MC1_Board_button_T1
#define DT_N_S_gpio_keys_S_mc_button_1_P_label_STRING_UPPER_TOKEN MC1_BOARD_BUTTON_T1
#define DT_N_S_gpio_keys_S_mc_button_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_button_1, label, 0) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 1) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 2) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 3) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 4) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 5) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 6) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 7) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 8) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 9) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 10) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 11) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 12) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 13) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 14) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 15) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 16) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 17) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 18)
#define DT_N_S_gpio_keys_S_mc_button_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_button_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 7, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 8, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 9, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 10, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 11, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 12, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 13, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 14, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 15, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 16, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 17, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_1, label, 18, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_button_1_P_label_EXISTS 1

/*
 * Devicetree node: /gpio_keys/mc_button_2
 *
 * Node identifier: DT_N_S_gpio_keys_S_mc_button_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_mc_button_2_PATH "/gpio_keys/mc_button_2"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_mc_button_2_FULL_NAME "mc_button_2"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_mc_button_2_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_mc_button_2_CHILD_IDX 3
#define DT_N_S_gpio_keys_S_mc_button_2_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_mc_button_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_mc_button_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_mc_button_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_mc_button_2_ORD 22

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_mc_button_2_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	19, /* /soc/pin-controller@40020000/gpio@40021800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_mc_button_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_mc_button_2_EXISTS 1
#define DT_N_NODELABEL_mc_t2 DT_N_S_gpio_keys_S_mc_button_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_mc_button_2_REG_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_2_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_2_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_mc_button_2_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_mc_button_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_IDX_0_VAL_pin 2
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_button_2, gpios, 0)
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_button_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_mc_button_2_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_2_P_label "MC1-Board button T2"
#define DT_N_S_gpio_keys_S_mc_button_2_P_label_STRING_TOKEN MC1_Board_button_T2
#define DT_N_S_gpio_keys_S_mc_button_2_P_label_STRING_UPPER_TOKEN MC1_BOARD_BUTTON_T2
#define DT_N_S_gpio_keys_S_mc_button_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_button_2, label, 0) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 1) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 2) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 3) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 4) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 5) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 6) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 7) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 8) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 9) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 10) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 11) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 12) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 13) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 14) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 15) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 16) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 17) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 18)
#define DT_N_S_gpio_keys_S_mc_button_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_button_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 7, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 8, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 9, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 10, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 11, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 12, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 13, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 14, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 15, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 16, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 17, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_2, label, 18, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_button_2_P_label_EXISTS 1

/*
 * Devicetree node: /gpio_keys/mc_button_3
 *
 * Node identifier: DT_N_S_gpio_keys_S_mc_button_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_mc_button_3_PATH "/gpio_keys/mc_button_3"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_mc_button_3_FULL_NAME "mc_button_3"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_mc_button_3_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_mc_button_3_CHILD_IDX 4
#define DT_N_S_gpio_keys_S_mc_button_3_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_mc_button_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_mc_button_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_mc_button_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_mc_button_3_ORD 23

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_mc_button_3_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	19, /* /soc/pin-controller@40020000/gpio@40021800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_mc_button_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_mc_button_3_EXISTS 1
#define DT_N_NODELABEL_mc_t3 DT_N_S_gpio_keys_S_mc_button_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_mc_button_3_REG_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_3_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_3_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_mc_button_3_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_mc_button_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_mc_button_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_IDX_0_VAL_pin 3
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_button_3, gpios, 0)
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_button_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_mc_button_3_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_button_3_P_label "MC1-Board button T3"
#define DT_N_S_gpio_keys_S_mc_button_3_P_label_STRING_TOKEN MC1_Board_button_T3
#define DT_N_S_gpio_keys_S_mc_button_3_P_label_STRING_UPPER_TOKEN MC1_BOARD_BUTTON_T3
#define DT_N_S_gpio_keys_S_mc_button_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_button_3, label, 0) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 1) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 2) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 3) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 4) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 5) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 6) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 7) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 8) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 9) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 10) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 11) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 12) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 13) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 14) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 15) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 16) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 17) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 18)
#define DT_N_S_gpio_keys_S_mc_button_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_button_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 7, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 8, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 9, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 10, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 11, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 12, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 13, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 14, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 15, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 16, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 17, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_button_3, label, 18, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_button_3_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PATH "/soc/pin-controller@40020000/gpio@40021400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FULL_NAME "gpio@40021400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_CHILD_IDX 5
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_ORD 24

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_SUPPORTS_ORDS \
	25, /* /gpio_keys/mc_switch_0 */ \
	26, /* /gpio_keys/mc_switch_1 */ \
	27, /* /gpio_keys/mc_switch_2 */ \
	28, /* /gpio_keys/mc_switch_3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_EXISTS 1
#define DT_N_INST_5_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
#define DT_N_NODELABEL_gpiof      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_ADDRESS 1073878016 /* 0x40021400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg {1073878016 /* 0x40021400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0 1073878016
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label "GPIOF"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_STRING_TOKEN GPIOF
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_STRING_UPPER_TOKEN GPIOF
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /gpio_keys/mc_switch_0
 *
 * Node identifier: DT_N_S_gpio_keys_S_mc_switch_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_mc_switch_0_PATH "/gpio_keys/mc_switch_0"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_mc_switch_0_FULL_NAME "mc_switch_0"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_mc_switch_0_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_mc_switch_0_CHILD_IDX 5
#define DT_N_S_gpio_keys_S_mc_switch_0_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_mc_switch_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_mc_switch_0_ORD 25

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_mc_switch_0_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	24, /* /soc/pin-controller@40020000/gpio@40021400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_mc_switch_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_mc_switch_0_EXISTS 1
#define DT_N_NODELABEL_mc_s0 DT_N_S_gpio_keys_S_mc_switch_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_mc_switch_0_REG_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_0_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_0_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_0_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_mc_switch_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_IDX_0_VAL_pin 3
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_switch_0, gpios, 0)
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_switch_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_mc_switch_0_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_0_P_label "MC1-Board switch S0"
#define DT_N_S_gpio_keys_S_mc_switch_0_P_label_STRING_TOKEN MC1_Board_switch_S0
#define DT_N_S_gpio_keys_S_mc_switch_0_P_label_STRING_UPPER_TOKEN MC1_BOARD_SWITCH_S0
#define DT_N_S_gpio_keys_S_mc_switch_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 0) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 1) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 2) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 3) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 4) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 5) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 6) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 7) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 8) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 9) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 10) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 11) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 12) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 13) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 14) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 15) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 16) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 17) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 18)
#define DT_N_S_gpio_keys_S_mc_switch_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 8, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 9, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 10, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 11, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 12, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 13, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 14, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 15, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 16, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 17, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_0, label, 18, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_switch_0_P_label_EXISTS 1

/*
 * Devicetree node: /gpio_keys/mc_switch_1
 *
 * Node identifier: DT_N_S_gpio_keys_S_mc_switch_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_mc_switch_1_PATH "/gpio_keys/mc_switch_1"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_mc_switch_1_FULL_NAME "mc_switch_1"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_mc_switch_1_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_mc_switch_1_CHILD_IDX 6
#define DT_N_S_gpio_keys_S_mc_switch_1_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_mc_switch_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_mc_switch_1_ORD 26

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_mc_switch_1_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	24, /* /soc/pin-controller@40020000/gpio@40021400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_mc_switch_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_mc_switch_1_EXISTS 1
#define DT_N_NODELABEL_mc_s1 DT_N_S_gpio_keys_S_mc_switch_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_mc_switch_1_REG_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_1_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_1_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_1_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_mc_switch_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_IDX_0_VAL_pin 4
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_switch_1, gpios, 0)
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_switch_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_mc_switch_1_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_1_P_label "MC1-Board switch S1"
#define DT_N_S_gpio_keys_S_mc_switch_1_P_label_STRING_TOKEN MC1_Board_switch_S1
#define DT_N_S_gpio_keys_S_mc_switch_1_P_label_STRING_UPPER_TOKEN MC1_BOARD_SWITCH_S1
#define DT_N_S_gpio_keys_S_mc_switch_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 0) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 1) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 2) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 3) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 4) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 5) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 6) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 7) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 8) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 9) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 10) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 11) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 12) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 13) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 14) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 15) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 16) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 17) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 18)
#define DT_N_S_gpio_keys_S_mc_switch_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 7, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 8, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 9, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 10, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 11, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 12, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 13, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 14, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 15, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 16, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 17, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_1, label, 18, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_switch_1_P_label_EXISTS 1

/*
 * Devicetree node: /gpio_keys/mc_switch_2
 *
 * Node identifier: DT_N_S_gpio_keys_S_mc_switch_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_mc_switch_2_PATH "/gpio_keys/mc_switch_2"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_mc_switch_2_FULL_NAME "mc_switch_2"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_mc_switch_2_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_mc_switch_2_CHILD_IDX 7
#define DT_N_S_gpio_keys_S_mc_switch_2_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_mc_switch_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_mc_switch_2_ORD 27

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_mc_switch_2_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	24, /* /soc/pin-controller@40020000/gpio@40021400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_mc_switch_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_mc_switch_2_EXISTS 1
#define DT_N_NODELABEL_mc_s2 DT_N_S_gpio_keys_S_mc_switch_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_mc_switch_2_REG_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_2_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_2_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_2_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_mc_switch_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_IDX_0_VAL_pin 5
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_switch_2, gpios, 0)
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_switch_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_mc_switch_2_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_2_P_label "MC1-Board switch S2"
#define DT_N_S_gpio_keys_S_mc_switch_2_P_label_STRING_TOKEN MC1_Board_switch_S2
#define DT_N_S_gpio_keys_S_mc_switch_2_P_label_STRING_UPPER_TOKEN MC1_BOARD_SWITCH_S2
#define DT_N_S_gpio_keys_S_mc_switch_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 0) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 1) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 2) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 3) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 4) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 5) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 6) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 7) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 8) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 9) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 10) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 11) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 12) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 13) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 14) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 15) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 16) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 17) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 18)
#define DT_N_S_gpio_keys_S_mc_switch_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 7, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 8, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 9, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 10, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 11, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 12, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 13, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 14, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 15, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 16, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 17, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_2, label, 18, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_switch_2_P_label_EXISTS 1

/*
 * Devicetree node: /gpio_keys/mc_switch_3
 *
 * Node identifier: DT_N_S_gpio_keys_S_mc_switch_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio_keys_S_mc_switch_3_PATH "/gpio_keys/mc_switch_3"

/* Node's name with unit-address: */
#define DT_N_S_gpio_keys_S_mc_switch_3_FULL_NAME "mc_switch_3"

/* Node parent (/gpio_keys) identifier: */
#define DT_N_S_gpio_keys_S_mc_switch_3_PARENT DT_N_S_gpio_keys

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio_keys_S_mc_switch_3_CHILD_IDX 8
#define DT_N_S_gpio_keys_S_mc_switch_3_FOREACH_CHILD(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio_keys_S_mc_switch_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio_keys_S_mc_switch_3_ORD 28

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio_keys_S_mc_switch_3_REQUIRES_ORDS \
	11, /* /gpio_keys */ \
	24, /* /soc/pin-controller@40020000/gpio@40021400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio_keys_S_mc_switch_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio_keys_S_mc_switch_3_EXISTS 1
#define DT_N_NODELABEL_mc_s3 DT_N_S_gpio_keys_S_mc_switch_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio_keys_S_mc_switch_3_REG_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_3_RANGES_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_3_FOREACH_RANGE(fn) 
#define DT_N_S_gpio_keys_S_mc_switch_3_IRQ_NUM 0
#define DT_N_S_gpio_keys_S_mc_switch_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio_keys_S_mc_switch_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_IDX_0_VAL_pin 6
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_switch_3, gpios, 0)
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_switch_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_LEN 1
#define DT_N_S_gpio_keys_S_mc_switch_3_P_gpios_EXISTS 1
#define DT_N_S_gpio_keys_S_mc_switch_3_P_label "MC1-Board switch S3"
#define DT_N_S_gpio_keys_S_mc_switch_3_P_label_STRING_TOKEN MC1_Board_switch_S3
#define DT_N_S_gpio_keys_S_mc_switch_3_P_label_STRING_UPPER_TOKEN MC1_BOARD_SWITCH_S3
#define DT_N_S_gpio_keys_S_mc_switch_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 0) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 1) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 2) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 3) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 4) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 5) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 6) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 7) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 8) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 9) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 10) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 11) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 12) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 13) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 14) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 15) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 16) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 17) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 18)
#define DT_N_S_gpio_keys_S_mc_switch_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 7, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 8, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 9, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 10, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 11, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 12, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 13, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 14, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 15, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 16, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 17, __VA_ARGS__) \
	fn(DT_N_S_gpio_keys_S_mc_switch_3, label, 18, __VA_ARGS__)
#define DT_N_S_gpio_keys_S_mc_switch_3_P_label_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/gpio/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 10
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_mc_led_0) fn(DT_N_S_leds_S_mc_led_1) fn(DT_N_S_leds_S_mc_led_2) fn(DT_N_S_leds_S_mc_led_3)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_mc_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_mc_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_mc_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_mc_led_3, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_3) fn(DT_N_S_leds_S_led_4) fn(DT_N_S_leds_S_mc_led_0) fn(DT_N_S_leds_S_mc_led_1) fn(DT_N_S_leds_S_mc_led_2) fn(DT_N_S_leds_S_mc_led_3) 
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, __VA_ARGS__) fn(DT_N_S_leds_S_led_4, __VA_ARGS__) fn(DT_N_S_leds_S_mc_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_mc_led_1, __VA_ARGS__) fn(DT_N_S_leds_S_mc_led_2, __VA_ARGS__) fn(DT_N_S_leds_S_mc_led_3, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 29

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	30, /* /leds/led_3 */ \
	31, /* /leds/led_4 */ \
	33, /* /leds/mc_led_0 */ \
	34, /* /leds/mc_led_1 */ \
	35, /* /leds/mc_led_2 */ \
	36, /* /leds/mc_led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /leds/led_3
 *
 * Node identifier: DT_N_S_leds_S_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_3_PATH "/leds/led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_3_FULL_NAME "led_3"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_3_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_3_CHILD_IDX 0
#define DT_N_S_leds_S_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_3_ORD 30

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_3_REQUIRES_ORDS \
	19, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	29, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_3_EXISTS 1
#define DT_N_NODELABEL_orange_led_3 DT_N_S_leds_S_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_3_REG_NUM 0
#define DT_N_S_leds_S_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin 13
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, gpios, 0)
#define DT_N_S_leds_S_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_3_P_label "User LD3"
#define DT_N_S_leds_S_led_3_P_label_STRING_TOKEN User_LD3
#define DT_N_S_leds_S_led_3_P_label_STRING_UPPER_TOKEN USER_LD3
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_3, label, 0) \
	fn(DT_N_S_leds_S_led_3, label, 1) \
	fn(DT_N_S_leds_S_led_3, label, 2) \
	fn(DT_N_S_leds_S_led_3, label, 3) \
	fn(DT_N_S_leds_S_led_3, label, 4) \
	fn(DT_N_S_leds_S_led_3, label, 5) \
	fn(DT_N_S_leds_S_led_3, label, 6) \
	fn(DT_N_S_leds_S_led_3, label, 7)
#define DT_N_S_leds_S_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_3, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_4
 *
 * Node identifier: DT_N_S_leds_S_led_4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_4_PATH "/leds/led_4"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_4_FULL_NAME "led_4"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_4_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_4_CHILD_IDX 1
#define DT_N_S_leds_S_led_4_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_4_ORD 31

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_4_REQUIRES_ORDS \
	19, /* /soc/pin-controller@40020000/gpio@40021800 */ \
	29, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_4_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_4_EXISTS 1
#define DT_N_ALIAS_led0            DT_N_S_leds_S_led_4
#define DT_N_NODELABEL_green_led_4 DT_N_S_leds_S_led_4

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_4_REG_NUM 0
#define DT_N_S_leds_S_led_4_RANGES_NUM 0
#define DT_N_S_leds_S_led_4_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_4_IRQ_NUM 0
#define DT_N_S_leds_S_led_4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_4_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, gpios, 0)
#define DT_N_S_leds_S_led_4_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_gpios_LEN 1
#define DT_N_S_leds_S_led_4_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_4_P_label "User LD4"
#define DT_N_S_leds_S_led_4_P_label_STRING_TOKEN User_LD4
#define DT_N_S_leds_S_led_4_P_label_STRING_UPPER_TOKEN USER_LD4
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_4, label, 0) \
	fn(DT_N_S_leds_S_led_4, label, 1) \
	fn(DT_N_S_leds_S_led_4, label, 2) \
	fn(DT_N_S_leds_S_led_4, label, 3) \
	fn(DT_N_S_leds_S_led_4, label, 4) \
	fn(DT_N_S_leds_S_led_4, label, 5) \
	fn(DT_N_S_leds_S_led_4, label, 6) \
	fn(DT_N_S_leds_S_led_4, label, 7)
#define DT_N_S_leds_S_led_4_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_4, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_led_4, label, 7, __VA_ARGS__)
#define DT_N_S_leds_S_led_4_P_label_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PATH "/soc/pin-controller@40020000/gpio@40021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FULL_NAME "gpio@40021000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_CHILD_IDX 4
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_ORD 32

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_SUPPORTS_ORDS \
	33, /* /leds/mc_led_0 */ \
	34, /* /leds/mc_led_1 */ \
	35, /* /leds/mc_led_2 */ \
	36, /* /leds/mc_led_3 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_EXISTS 1
#define DT_N_INST_4_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_NODELABEL_gpioe      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_ADDRESS 1073876992 /* 0x40021000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg {1073876992 /* 0x40021000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0 1073876992
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label "GPIOE"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_STRING_TOKEN GPIOE
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_STRING_UPPER_TOKEN GPIOE
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /leds/mc_led_0
 *
 * Node identifier: DT_N_S_leds_S_mc_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_mc_led_0_PATH "/leds/mc_led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_mc_led_0_FULL_NAME "mc_led_0"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_mc_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_mc_led_0_CHILD_IDX 2
#define DT_N_S_leds_S_mc_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_mc_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_mc_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_mc_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_mc_led_0_ORD 33

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_mc_led_0_REQUIRES_ORDS \
	29, /* /leds */ \
	32, /* /soc/pin-controller@40020000/gpio@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_mc_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_mc_led_0_EXISTS 1
#define DT_N_NODELABEL_mc_led0 DT_N_S_leds_S_mc_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_mc_led_0_REG_NUM 0
#define DT_N_S_leds_S_mc_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_mc_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_mc_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_mc_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_mc_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_mc_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_mc_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_leds_S_mc_led_0_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_leds_S_mc_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_mc_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_mc_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_mc_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_mc_led_0, gpios, 0)
#define DT_N_S_leds_S_mc_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_mc_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_mc_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_mc_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_mc_led_0_P_label "MC1-Board LED0"
#define DT_N_S_leds_S_mc_led_0_P_label_STRING_TOKEN MC1_Board_LED0
#define DT_N_S_leds_S_mc_led_0_P_label_STRING_UPPER_TOKEN MC1_BOARD_LED0
#define DT_N_S_leds_S_mc_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_mc_led_0, label, 0) \
	fn(DT_N_S_leds_S_mc_led_0, label, 1) \
	fn(DT_N_S_leds_S_mc_led_0, label, 2) \
	fn(DT_N_S_leds_S_mc_led_0, label, 3) \
	fn(DT_N_S_leds_S_mc_led_0, label, 4) \
	fn(DT_N_S_leds_S_mc_led_0, label, 5) \
	fn(DT_N_S_leds_S_mc_led_0, label, 6) \
	fn(DT_N_S_leds_S_mc_led_0, label, 7) \
	fn(DT_N_S_leds_S_mc_led_0, label, 8) \
	fn(DT_N_S_leds_S_mc_led_0, label, 9) \
	fn(DT_N_S_leds_S_mc_led_0, label, 10) \
	fn(DT_N_S_leds_S_mc_led_0, label, 11) \
	fn(DT_N_S_leds_S_mc_led_0, label, 12) \
	fn(DT_N_S_leds_S_mc_led_0, label, 13)
#define DT_N_S_leds_S_mc_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_mc_led_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_0, label, 13, __VA_ARGS__)
#define DT_N_S_leds_S_mc_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /leds/mc_led_1
 *
 * Node identifier: DT_N_S_leds_S_mc_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_mc_led_1_PATH "/leds/mc_led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_mc_led_1_FULL_NAME "mc_led_1"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_mc_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_mc_led_1_CHILD_IDX 3
#define DT_N_S_leds_S_mc_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_mc_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_mc_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_mc_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_mc_led_1_ORD 34

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_mc_led_1_REQUIRES_ORDS \
	29, /* /leds */ \
	32, /* /soc/pin-controller@40020000/gpio@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_mc_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_mc_led_1_EXISTS 1
#define DT_N_NODELABEL_mc_led1 DT_N_S_leds_S_mc_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_mc_led_1_REG_NUM 0
#define DT_N_S_leds_S_mc_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_mc_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_mc_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_mc_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_mc_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_mc_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_mc_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_leds_S_mc_led_1_P_gpios_IDX_0_VAL_pin 1
#define DT_N_S_leds_S_mc_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_mc_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_mc_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_mc_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_mc_led_1, gpios, 0)
#define DT_N_S_leds_S_mc_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_mc_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_mc_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_mc_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_mc_led_1_P_label "MC1-Board LED1"
#define DT_N_S_leds_S_mc_led_1_P_label_STRING_TOKEN MC1_Board_LED1
#define DT_N_S_leds_S_mc_led_1_P_label_STRING_UPPER_TOKEN MC1_BOARD_LED1
#define DT_N_S_leds_S_mc_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_mc_led_1, label, 0) \
	fn(DT_N_S_leds_S_mc_led_1, label, 1) \
	fn(DT_N_S_leds_S_mc_led_1, label, 2) \
	fn(DT_N_S_leds_S_mc_led_1, label, 3) \
	fn(DT_N_S_leds_S_mc_led_1, label, 4) \
	fn(DT_N_S_leds_S_mc_led_1, label, 5) \
	fn(DT_N_S_leds_S_mc_led_1, label, 6) \
	fn(DT_N_S_leds_S_mc_led_1, label, 7) \
	fn(DT_N_S_leds_S_mc_led_1, label, 8) \
	fn(DT_N_S_leds_S_mc_led_1, label, 9) \
	fn(DT_N_S_leds_S_mc_led_1, label, 10) \
	fn(DT_N_S_leds_S_mc_led_1, label, 11) \
	fn(DT_N_S_leds_S_mc_led_1, label, 12) \
	fn(DT_N_S_leds_S_mc_led_1, label, 13)
#define DT_N_S_leds_S_mc_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_mc_led_1, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_1, label, 13, __VA_ARGS__)
#define DT_N_S_leds_S_mc_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /leds/mc_led_2
 *
 * Node identifier: DT_N_S_leds_S_mc_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_mc_led_2_PATH "/leds/mc_led_2"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_mc_led_2_FULL_NAME "mc_led_2"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_mc_led_2_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_mc_led_2_CHILD_IDX 4
#define DT_N_S_leds_S_mc_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_mc_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_mc_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_mc_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_mc_led_2_ORD 35

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_mc_led_2_REQUIRES_ORDS \
	29, /* /leds */ \
	32, /* /soc/pin-controller@40020000/gpio@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_mc_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_mc_led_2_EXISTS 1
#define DT_N_NODELABEL_mc_led2 DT_N_S_leds_S_mc_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_mc_led_2_REG_NUM 0
#define DT_N_S_leds_S_mc_led_2_RANGES_NUM 0
#define DT_N_S_leds_S_mc_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_mc_led_2_IRQ_NUM 0
#define DT_N_S_leds_S_mc_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_mc_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_mc_led_2_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_mc_led_2_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_leds_S_mc_led_2_P_gpios_IDX_0_VAL_pin 2
#define DT_N_S_leds_S_mc_led_2_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_mc_led_2_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_mc_led_2_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_mc_led_2_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_mc_led_2, gpios, 0)
#define DT_N_S_leds_S_mc_led_2_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_mc_led_2, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_mc_led_2_P_gpios_LEN 1
#define DT_N_S_leds_S_mc_led_2_P_gpios_EXISTS 1
#define DT_N_S_leds_S_mc_led_2_P_label "MC1-Board LED2"
#define DT_N_S_leds_S_mc_led_2_P_label_STRING_TOKEN MC1_Board_LED2
#define DT_N_S_leds_S_mc_led_2_P_label_STRING_UPPER_TOKEN MC1_BOARD_LED2
#define DT_N_S_leds_S_mc_led_2_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_mc_led_2, label, 0) \
	fn(DT_N_S_leds_S_mc_led_2, label, 1) \
	fn(DT_N_S_leds_S_mc_led_2, label, 2) \
	fn(DT_N_S_leds_S_mc_led_2, label, 3) \
	fn(DT_N_S_leds_S_mc_led_2, label, 4) \
	fn(DT_N_S_leds_S_mc_led_2, label, 5) \
	fn(DT_N_S_leds_S_mc_led_2, label, 6) \
	fn(DT_N_S_leds_S_mc_led_2, label, 7) \
	fn(DT_N_S_leds_S_mc_led_2, label, 8) \
	fn(DT_N_S_leds_S_mc_led_2, label, 9) \
	fn(DT_N_S_leds_S_mc_led_2, label, 10) \
	fn(DT_N_S_leds_S_mc_led_2, label, 11) \
	fn(DT_N_S_leds_S_mc_led_2, label, 12) \
	fn(DT_N_S_leds_S_mc_led_2, label, 13)
#define DT_N_S_leds_S_mc_led_2_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_mc_led_2, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_2, label, 13, __VA_ARGS__)
#define DT_N_S_leds_S_mc_led_2_P_label_EXISTS 1

/*
 * Devicetree node: /leds/mc_led_3
 *
 * Node identifier: DT_N_S_leds_S_mc_led_3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_mc_led_3_PATH "/leds/mc_led_3"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_mc_led_3_FULL_NAME "mc_led_3"

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_mc_led_3_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_mc_led_3_CHILD_IDX 5
#define DT_N_S_leds_S_mc_led_3_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_mc_led_3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_mc_led_3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_mc_led_3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_mc_led_3_ORD 36

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_mc_led_3_REQUIRES_ORDS \
	29, /* /leds */ \
	32, /* /soc/pin-controller@40020000/gpio@40021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_mc_led_3_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_mc_led_3_EXISTS 1
#define DT_N_NODELABEL_mc_led3 DT_N_S_leds_S_mc_led_3

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_mc_led_3_REG_NUM 0
#define DT_N_S_leds_S_mc_led_3_RANGES_NUM 0
#define DT_N_S_leds_S_mc_led_3_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_mc_led_3_IRQ_NUM 0
#define DT_N_S_leds_S_mc_led_3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_mc_led_3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_mc_led_3_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_mc_led_3_P_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000
#define DT_N_S_leds_S_mc_led_3_P_gpios_IDX_0_VAL_pin 3
#define DT_N_S_leds_S_mc_led_3_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_mc_led_3_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_mc_led_3_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_mc_led_3_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_mc_led_3, gpios, 0)
#define DT_N_S_leds_S_mc_led_3_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_mc_led_3, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_mc_led_3_P_gpios_LEN 1
#define DT_N_S_leds_S_mc_led_3_P_gpios_EXISTS 1
#define DT_N_S_leds_S_mc_led_3_P_label "MC1-Board LED3"
#define DT_N_S_leds_S_mc_led_3_P_label_STRING_TOKEN MC1_Board_LED3
#define DT_N_S_leds_S_mc_led_3_P_label_STRING_UPPER_TOKEN MC1_BOARD_LED3
#define DT_N_S_leds_S_mc_led_3_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_mc_led_3, label, 0) \
	fn(DT_N_S_leds_S_mc_led_3, label, 1) \
	fn(DT_N_S_leds_S_mc_led_3, label, 2) \
	fn(DT_N_S_leds_S_mc_led_3, label, 3) \
	fn(DT_N_S_leds_S_mc_led_3, label, 4) \
	fn(DT_N_S_leds_S_mc_led_3, label, 5) \
	fn(DT_N_S_leds_S_mc_led_3, label, 6) \
	fn(DT_N_S_leds_S_mc_led_3, label, 7) \
	fn(DT_N_S_leds_S_mc_led_3, label, 8) \
	fn(DT_N_S_leds_S_mc_led_3, label, 9) \
	fn(DT_N_S_leds_S_mc_led_3, label, 10) \
	fn(DT_N_S_leds_S_mc_led_3, label, 11) \
	fn(DT_N_S_leds_S_mc_led_3, label, 12) \
	fn(DT_N_S_leds_S_mc_led_3, label, 13)
#define DT_N_S_leds_S_mc_led_3_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_mc_led_3, label, 0, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 1, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 2, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 3, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 4, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 5, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 6, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 7, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 8, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 9, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 10, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 11, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 12, __VA_ARGS__) \
	fn(DT_N_S_leds_S_mc_led_3, label, 13, __VA_ARGS__)
#define DT_N_S_leds_S_mc_led_3_P_label_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v7m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v7m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 37

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	38, /* /soc/adc@40012000 */ \
	39, /* /soc/adc@40012100 */ \
	40, /* /soc/adc@40012200 */ \
	41, /* /soc/can@40006400 */ \
	42, /* /soc/can@40006800 */ \
	67, /* /soc/display-controller@40016800 */ \
	68, /* /soc/dma@40026400 */ \
	69, /* /soc/ethernet@40028000 */ \
	72, /* /soc/i2c@40005400 */ \
	75, /* /soc/i2c@40005800 */ \
	78, /* /soc/i2c@40005c00 */ \
	79, /* /soc/dma@40026000 */ \
	80, /* /soc/i2s@40003800 */ \
	81, /* /soc/i2s@40003c00 */ \
	84, /* /soc/rng@50060800 */ \
	85, /* /soc/rtc@40002800 */ \
	86, /* /soc/sdmmc@40012c00 */ \
	87, /* /soc/serial@40004400 */ \
	88, /* /soc/serial@40004800 */ \
	89, /* /soc/serial@40004c00 */ \
	90, /* /soc/serial@40005000 */ \
	91, /* /soc/serial@40007800 */ \
	92, /* /soc/serial@40007c00 */ \
	95, /* /soc/serial@40011000 */ \
	96, /* /soc/serial@40011400 */ \
	97, /* /soc/spi@40003800 */ \
	98, /* /soc/spi@40003c00 */ \
	99, /* /soc/spi@40013000 */ \
	100, /* /soc/spi@40013400 */ \
	101, /* /soc/spi@40015400 */ \
	104, /* /soc/usb@40040000 */ \
	106, /* /soc/usb@50000000 */ \
	107, /* /soc/watchdog@40002c00 */ \
	109, /* /soc/flash-controller@40023c00 */ \
	164, /* /soc/spi@40015000 */ \
	167, /* /soc/timers@40000000 */ \
	170, /* /soc/timers@40000400 */ \
	173, /* /soc/timers@40000800 */ \
	176, /* /soc/timers@40000c00 */ \
	179, /* /soc/timers@40001000 */ \
	181, /* /soc/timers@40001400 */ \
	183, /* /soc/timers@40001800 */ \
	186, /* /soc/timers@40001c00 */ \
	189, /* /soc/timers@40002000 */ \
	192, /* /soc/timers@40010000 */ \
	194, /* /soc/timers@40010400 */ \
	196, /* /soc/timers@40014000 */ \
	199, /* /soc/timers@40014400 */ \
	202, /* /soc/timers@40014800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v7m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v7m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_e000e100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v7m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v7m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012000
 *
 * Node identifier: DT_N_S_soc_S_adc_40012000
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012000_PATH "/soc/adc@40012000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012000_FULL_NAME "adc@40012000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40012000_CHILD_IDX 25
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40012000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012000_ORD 38

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012000_EXISTS 1
#define DT_N_INST_0_st_stm32_adc DT_N_S_soc_S_adc_40012000
#define DT_N_NODELABEL_adc1      DT_N_S_soc_S_adc_40012000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40012000_REG_NUM 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_ADDRESS 1073815552 /* 0x40012000 */
#define DT_N_S_soc_S_adc_40012000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_adc_40012000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40012000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40012000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_40012000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40012000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012000_P_reg {1073815552 /* 0x40012000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0 1073815552
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_adc_40012000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, reg, 0) \
	fn(DT_N_S_soc_S_adc_40012000, reg, 1)
#define DT_N_S_soc_S_adc_40012000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_adc_40012000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, clocks, 0)
#define DT_N_S_soc_S_adc_40012000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_40012000, interrupts, 1)
#define DT_N_S_soc_S_adc_40012000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_vref_mv 3300
#define DT_N_S_soc_S_adc_40012000_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_has_temp_channel 1
#define DT_N_S_soc_S_adc_40012000_P_has_temp_channel_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_has_vref_channel 1
#define DT_N_S_soc_S_adc_40012000_P_has_vref_channel_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_label "ADC_1"
#define DT_N_S_soc_S_adc_40012000_P_label_STRING_TOKEN ADC_1
#define DT_N_S_soc_S_adc_40012000_P_label_STRING_UPPER_TOKEN ADC_1
#define DT_N_S_soc_S_adc_40012000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, label, 0) \
	fn(DT_N_S_soc_S_adc_40012000, label, 1) \
	fn(DT_N_S_soc_S_adc_40012000, label, 2) \
	fn(DT_N_S_soc_S_adc_40012000, label, 3) \
	fn(DT_N_S_soc_S_adc_40012000, label, 4)
#define DT_N_S_soc_S_adc_40012000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_status "disabled"
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_40012000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, status, 0) \
	fn(DT_N_S_soc_S_adc_40012000, status, 1) \
	fn(DT_N_S_soc_S_adc_40012000, status, 2) \
	fn(DT_N_S_soc_S_adc_40012000, status, 3) \
	fn(DT_N_S_soc_S_adc_40012000, status, 4) \
	fn(DT_N_S_soc_S_adc_40012000, status, 5) \
	fn(DT_N_S_soc_S_adc_40012000, status, 6) \
	fn(DT_N_S_soc_S_adc_40012000, status, 7)
#define DT_N_S_soc_S_adc_40012000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_40012000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012000, compatible, 0)
#define DT_N_S_soc_S_adc_40012000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40012000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40012000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40012000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012100
 *
 * Node identifier: DT_N_S_soc_S_adc_40012100
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012100_PATH "/soc/adc@40012100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012100_FULL_NAME "adc@40012100"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40012100_CHILD_IDX 48
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40012100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012100_ORD 39

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012100_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012100_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012100_EXISTS 1
#define DT_N_INST_1_st_stm32_adc DT_N_S_soc_S_adc_40012100
#define DT_N_NODELABEL_adc2      DT_N_S_soc_S_adc_40012100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40012100_REG_NUM 1
#define DT_N_S_soc_S_adc_40012100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_REG_IDX_0_VAL_ADDRESS 1073815808 /* 0x40012100 */
#define DT_N_S_soc_S_adc_40012100_REG_IDX_0_VAL_SIZE 80 /* 0x50 */
#define DT_N_S_soc_S_adc_40012100_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40012100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40012100_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012100_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_40012100_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40012100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012100_P_reg {1073815808 /* 0x40012100 */, 80 /* 0x50 */}
#define DT_N_S_soc_S_adc_40012100_P_reg_IDX_0 1073815808
#define DT_N_S_soc_S_adc_40012100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_reg_IDX_1 80
#define DT_N_S_soc_S_adc_40012100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, reg, 0) \
	fn(DT_N_S_soc_S_adc_40012100, reg, 1)
#define DT_N_S_soc_S_adc_40012100_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_VAL_bits 512
#define DT_N_S_soc_S_adc_40012100_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, clocks, 0)
#define DT_N_S_soc_S_adc_40012100_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012100_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012100_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_40012100_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012100_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_40012100, interrupts, 1)
#define DT_N_S_soc_S_adc_40012100_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_vref_mv 3300
#define DT_N_S_soc_S_adc_40012100_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_has_temp_channel 0
#define DT_N_S_soc_S_adc_40012100_P_has_temp_channel_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_has_vref_channel 0
#define DT_N_S_soc_S_adc_40012100_P_has_vref_channel_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_label "ADC_2"
#define DT_N_S_soc_S_adc_40012100_P_label_STRING_TOKEN ADC_2
#define DT_N_S_soc_S_adc_40012100_P_label_STRING_UPPER_TOKEN ADC_2
#define DT_N_S_soc_S_adc_40012100_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, label, 0) \
	fn(DT_N_S_soc_S_adc_40012100, label, 1) \
	fn(DT_N_S_soc_S_adc_40012100, label, 2) \
	fn(DT_N_S_soc_S_adc_40012100, label, 3) \
	fn(DT_N_S_soc_S_adc_40012100, label, 4)
#define DT_N_S_soc_S_adc_40012100_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_status "disabled"
#define DT_N_S_soc_S_adc_40012100_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_40012100_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012100_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012100_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012100_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012100_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, status, 0) \
	fn(DT_N_S_soc_S_adc_40012100, status, 1) \
	fn(DT_N_S_soc_S_adc_40012100, status, 2) \
	fn(DT_N_S_soc_S_adc_40012100, status, 3) \
	fn(DT_N_S_soc_S_adc_40012100, status, 4) \
	fn(DT_N_S_soc_S_adc_40012100, status, 5) \
	fn(DT_N_S_soc_S_adc_40012100, status, 6) \
	fn(DT_N_S_soc_S_adc_40012100, status, 7)
#define DT_N_S_soc_S_adc_40012100_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012100, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_40012100_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_40012100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012100, compatible, 0)
#define DT_N_S_soc_S_adc_40012100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012100_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40012100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40012100_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40012100_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/adc@40012200
 *
 * Node identifier: DT_N_S_soc_S_adc_40012200
 *
 * Binding (compatible = st,stm32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/st,stm32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_40012200_PATH "/soc/adc@40012200"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_40012200_FULL_NAME "adc@40012200"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_40012200_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_40012200_CHILD_IDX 49
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_40012200_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_40012200_ORD 40

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_40012200_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_40012200_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_40012200_EXISTS 1
#define DT_N_INST_2_st_stm32_adc DT_N_S_soc_S_adc_40012200
#define DT_N_NODELABEL_adc3      DT_N_S_soc_S_adc_40012200

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_40012200_REG_NUM 1
#define DT_N_S_soc_S_adc_40012200_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_REG_IDX_0_VAL_ADDRESS 1073816064 /* 0x40012200 */
#define DT_N_S_soc_S_adc_40012200_REG_IDX_0_VAL_SIZE 80 /* 0x50 */
#define DT_N_S_soc_S_adc_40012200_RANGES_NUM 0
#define DT_N_S_soc_S_adc_40012200_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_40012200_IRQ_NUM 1
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_VAL_irq 18
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_40012200_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_COMPAT_MATCHES_st_stm32_adc 1
#define DT_N_S_soc_S_adc_40012200_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_40012200_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_40012200_P_reg {1073816064 /* 0x40012200 */, 80 /* 0x50 */}
#define DT_N_S_soc_S_adc_40012200_P_reg_IDX_0 1073816064
#define DT_N_S_soc_S_adc_40012200_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_reg_IDX_1 80
#define DT_N_S_soc_S_adc_40012200_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, reg, 0) \
	fn(DT_N_S_soc_S_adc_40012200, reg, 1)
#define DT_N_S_soc_S_adc_40012200_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_adc_40012200_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, clocks, 0)
#define DT_N_S_soc_S_adc_40012200_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_40012200_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_interrupts {18 /* 0x12 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_40012200_P_interrupts_IDX_0 18
#define DT_N_S_soc_S_adc_40012200_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_40012200_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, interrupts, 0) \
	fn(DT_N_S_soc_S_adc_40012200, interrupts, 1)
#define DT_N_S_soc_S_adc_40012200_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_vref_mv 3300
#define DT_N_S_soc_S_adc_40012200_P_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_has_temp_channel 0
#define DT_N_S_soc_S_adc_40012200_P_has_temp_channel_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_has_vref_channel 0
#define DT_N_S_soc_S_adc_40012200_P_has_vref_channel_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_label "ADC_3"
#define DT_N_S_soc_S_adc_40012200_P_label_STRING_TOKEN ADC_3
#define DT_N_S_soc_S_adc_40012200_P_label_STRING_UPPER_TOKEN ADC_3
#define DT_N_S_soc_S_adc_40012200_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, label, 0) \
	fn(DT_N_S_soc_S_adc_40012200, label, 1) \
	fn(DT_N_S_soc_S_adc_40012200, label, 2) \
	fn(DT_N_S_soc_S_adc_40012200, label, 3) \
	fn(DT_N_S_soc_S_adc_40012200, label, 4)
#define DT_N_S_soc_S_adc_40012200_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_label_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_status "disabled"
#define DT_N_S_soc_S_adc_40012200_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_40012200_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012200_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_adc_40012200_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_40012200_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_40012200_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, status, 0) \
	fn(DT_N_S_soc_S_adc_40012200, status, 1) \
	fn(DT_N_S_soc_S_adc_40012200, status, 2) \
	fn(DT_N_S_soc_S_adc_40012200, status, 3) \
	fn(DT_N_S_soc_S_adc_40012200, status, 4) \
	fn(DT_N_S_soc_S_adc_40012200, status, 5) \
	fn(DT_N_S_soc_S_adc_40012200, status, 6) \
	fn(DT_N_S_soc_S_adc_40012200, status, 7)
#define DT_N_S_soc_S_adc_40012200_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_adc_40012200, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_compatible {"st,stm32-adc"}
#define DT_N_S_soc_S_adc_40012200_P_compatible_IDX_0 "st,stm32-adc"
#define DT_N_S_soc_S_adc_40012200_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_40012200, compatible, 0)
#define DT_N_S_soc_S_adc_40012200_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_40012200, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_40012200_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_40012200_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_40012200_P_wakeup_source 0
#define DT_N_S_soc_S_adc_40012200_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/can@40006400
 *
 * Node identifier: DT_N_S_soc_S_can_40006400
 *
 * Binding (compatible = st,stm32-can):
 *   $ZEPHYR_BASE/dts/bindings/can/st,stm32-can.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_40006400_PATH "/soc/can@40006400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_40006400_FULL_NAME "can@40006400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_40006400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_40006400_CHILD_IDX 44
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_40006400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_40006400_ORD 41

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_40006400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_40006400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_40006400_EXISTS 1
#define DT_N_INST_0_st_stm32_can DT_N_S_soc_S_can_40006400
#define DT_N_NODELABEL_can1      DT_N_S_soc_S_can_40006400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_40006400_REG_NUM 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_ADDRESS 1073767424 /* 0x40006400 */
#define DT_N_S_soc_S_can_40006400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_40006400_RANGES_NUM 0
#define DT_N_S_soc_S_can_40006400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_40006400_IRQ_NUM 4
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq 19
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq 20
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq 21
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq 22
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_rx1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority DT_N_S_soc_S_can_40006400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_can_40006400_IRQ_NAME_sce_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006400_COMPAT_MATCHES_st_stm32_can 1
#define DT_N_S_soc_S_can_40006400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_40006400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_40006400_P_reg {1073767424 /* 0x40006400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_0 1073767424
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_40006400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, reg, 0) \
	fn(DT_N_S_soc_S_can_40006400, reg, 1)
#define DT_N_S_soc_S_can_40006400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts {19 /* 0x13 */, 0 /* 0x0 */, 20 /* 0x14 */, 0 /* 0x0 */, 21 /* 0x15 */, 0 /* 0x0 */, 22 /* 0x16 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_0 19
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_2 20
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_4 21
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_6 22
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_can_40006400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, interrupts, 0) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 1) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 2) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 3) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 4) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 5) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 6) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 7)
#define DT_N_S_soc_S_can_40006400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits 33554432
#define DT_N_S_soc_S_can_40006400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, clocks, 0)
#define DT_N_S_soc_S_can_40006400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_clocks_LEN 1
#define DT_N_S_soc_S_can_40006400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_one_shot 0
#define DT_N_S_soc_S_can_40006400_P_one_shot_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_sjw 1
#define DT_N_S_soc_S_can_40006400_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_sample_point 875
#define DT_N_S_soc_S_can_40006400_P_sample_point_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_status "disabled"
#define DT_N_S_soc_S_can_40006400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_40006400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_40006400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, status, 0) \
	fn(DT_N_S_soc_S_can_40006400, status, 1) \
	fn(DT_N_S_soc_S_can_40006400, status, 2) \
	fn(DT_N_S_soc_S_can_40006400, status, 3) \
	fn(DT_N_S_soc_S_can_40006400, status, 4) \
	fn(DT_N_S_soc_S_can_40006400, status, 5) \
	fn(DT_N_S_soc_S_can_40006400, status, 6) \
	fn(DT_N_S_soc_S_can_40006400, status, 7)
#define DT_N_S_soc_S_can_40006400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_status_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_compatible {"st,stm32-can"}
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0 "st,stm32-can"
#define DT_N_S_soc_S_can_40006400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, compatible, 0)
#define DT_N_S_soc_S_can_40006400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_compatible_LEN 1
#define DT_N_S_soc_S_can_40006400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names {"TX", "RX0", "RX1", "SCE"}
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0 "TX"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1 "RX0"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2 "RX1"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3 "SCE"
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_can_40006400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_label "CAN_1"
#define DT_N_S_soc_S_can_40006400_P_label_STRING_TOKEN CAN_1
#define DT_N_S_soc_S_can_40006400_P_label_STRING_UPPER_TOKEN CAN_1
#define DT_N_S_soc_S_can_40006400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006400, label, 0) \
	fn(DT_N_S_soc_S_can_40006400, label, 1) \
	fn(DT_N_S_soc_S_can_40006400, label, 2) \
	fn(DT_N_S_soc_S_can_40006400, label, 3) \
	fn(DT_N_S_soc_S_can_40006400, label, 4)
#define DT_N_S_soc_S_can_40006400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006400_P_label_EXISTS 1
#define DT_N_S_soc_S_can_40006400_P_wakeup_source 0
#define DT_N_S_soc_S_can_40006400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/can@40006800
 *
 * Node identifier: DT_N_S_soc_S_can_40006800
 *
 * Binding (compatible = st,stm32-can):
 *   $ZEPHYR_BASE/dts/bindings/can/st,stm32-can.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_40006800_PATH "/soc/can@40006800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_40006800_FULL_NAME "can@40006800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_40006800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_40006800_CHILD_IDX 45
#define DT_N_S_soc_S_can_40006800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_40006800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_40006800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_40006800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_40006800_ORD 42

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_40006800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_40006800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_40006800_EXISTS 1
#define DT_N_INST_1_st_stm32_can DT_N_S_soc_S_can_40006800
#define DT_N_NODELABEL_can2      DT_N_S_soc_S_can_40006800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_40006800_REG_NUM 1
#define DT_N_S_soc_S_can_40006800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_REG_IDX_0_VAL_ADDRESS 1073768448 /* 0x40006800 */
#define DT_N_S_soc_S_can_40006800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_can_40006800_RANGES_NUM 0
#define DT_N_S_soc_S_can_40006800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_40006800_IRQ_NUM 4
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_irq 63
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_irq 64
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_irq 65
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_irq 66
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_can_40006800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx0_VAL_irq DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx0_VAL_priority DT_N_S_soc_S_can_40006800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx1_VAL_irq DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx1_VAL_priority DT_N_S_soc_S_can_40006800_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_rx1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_sce_VAL_irq DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_sce_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_sce_VAL_priority DT_N_S_soc_S_can_40006800_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_can_40006800_IRQ_NAME_sce_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_40006800_COMPAT_MATCHES_st_stm32_can 1
#define DT_N_S_soc_S_can_40006800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_40006800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_can_40006800_P_reg {1073768448 /* 0x40006800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_can_40006800_P_reg_IDX_0 1073768448
#define DT_N_S_soc_S_can_40006800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_can_40006800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, reg, 0) \
	fn(DT_N_S_soc_S_can_40006800, reg, 1)
#define DT_N_S_soc_S_can_40006800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006800_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts {63 /* 0x3f */, 0 /* 0x0 */, 64 /* 0x40 */, 0 /* 0x0 */, 65 /* 0x41 */, 0 /* 0x0 */, 66 /* 0x42 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_0 63
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_2 64
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_4 65
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_6 66
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_can_40006800_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, interrupts, 0) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 1) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 2) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 3) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 4) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 5) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 6) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 7)
#define DT_N_S_soc_S_can_40006800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_VAL_bits 100663296
#define DT_N_S_soc_S_can_40006800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, clocks, 0)
#define DT_N_S_soc_S_can_40006800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006800_P_clocks_LEN 1
#define DT_N_S_soc_S_can_40006800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_one_shot 0
#define DT_N_S_soc_S_can_40006800_P_one_shot_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_master_can_reg 1073767424
#define DT_N_S_soc_S_can_40006800_P_master_can_reg_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_sjw 1
#define DT_N_S_soc_S_can_40006800_P_sjw_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_sample_point 875
#define DT_N_S_soc_S_can_40006800_P_sample_point_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_status "disabled"
#define DT_N_S_soc_S_can_40006800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_40006800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_40006800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_can_40006800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_40006800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_40006800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, status, 0) \
	fn(DT_N_S_soc_S_can_40006800, status, 1) \
	fn(DT_N_S_soc_S_can_40006800, status, 2) \
	fn(DT_N_S_soc_S_can_40006800, status, 3) \
	fn(DT_N_S_soc_S_can_40006800, status, 4) \
	fn(DT_N_S_soc_S_can_40006800, status, 5) \
	fn(DT_N_S_soc_S_can_40006800, status, 6) \
	fn(DT_N_S_soc_S_can_40006800, status, 7)
#define DT_N_S_soc_S_can_40006800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006800_P_status_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_compatible {"st,stm32-can"}
#define DT_N_S_soc_S_can_40006800_P_compatible_IDX_0 "st,stm32-can"
#define DT_N_S_soc_S_can_40006800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, compatible, 0)
#define DT_N_S_soc_S_can_40006800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006800_P_compatible_LEN 1
#define DT_N_S_soc_S_can_40006800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names {"TX", "RX0", "RX1", "SCE"}
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_0 "TX"
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_1 "RX0"
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_2 "RX1"
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_3 "SCE"
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_can_40006800, interrupt_names, 1) \
	fn(DT_N_S_soc_S_can_40006800, interrupt_names, 2) \
	fn(DT_N_S_soc_S_can_40006800, interrupt_names, 3)
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_can_40006800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_label "CAN_2"
#define DT_N_S_soc_S_can_40006800_P_label_STRING_TOKEN CAN_2
#define DT_N_S_soc_S_can_40006800_P_label_STRING_UPPER_TOKEN CAN_2
#define DT_N_S_soc_S_can_40006800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_40006800, label, 0) \
	fn(DT_N_S_soc_S_can_40006800, label, 1) \
	fn(DT_N_S_soc_S_can_40006800, label, 2) \
	fn(DT_N_S_soc_S_can_40006800, label, 3) \
	fn(DT_N_S_soc_S_can_40006800, label, 4)
#define DT_N_S_soc_S_can_40006800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_40006800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_can_40006800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_can_40006800_P_label_EXISTS 1
#define DT_N_S_soc_S_can_40006800_P_wakeup_source 0
#define DT_N_S_soc_S_can_40006800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dac@40007400
 *
 * Node identifier: DT_N_S_soc_S_dac_40007400
 *
 * Binding (compatible = st,stm32-dac):
 *   $ZEPHYR_BASE/dts/bindings/dac/st,stm32-dac.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dac_40007400_PATH "/soc/dac@40007400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dac_40007400_FULL_NAME "dac@40007400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dac_40007400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dac_40007400_CHILD_IDX 50
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dac_40007400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dac_40007400_ORD 43

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dac_40007400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dac_40007400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dac_40007400_EXISTS 1
#define DT_N_INST_0_st_stm32_dac DT_N_S_soc_S_dac_40007400
#define DT_N_NODELABEL_dac1      DT_N_S_soc_S_dac_40007400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dac_40007400_REG_NUM 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_ADDRESS 1073771520 /* 0x40007400 */
#define DT_N_S_soc_S_dac_40007400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dac_40007400_RANGES_NUM 0
#define DT_N_S_soc_S_dac_40007400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dac_40007400_IRQ_NUM 0
#define DT_N_S_soc_S_dac_40007400_COMPAT_MATCHES_st_stm32_dac 1
#define DT_N_S_soc_S_dac_40007400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dac_40007400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dac_40007400_P_reg {1073771520 /* 0x40007400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0 1073771520
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dac_40007400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, reg, 0) \
	fn(DT_N_S_soc_S_dac_40007400, reg, 1)
#define DT_N_S_soc_S_dac_40007400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bits 536870912
#define DT_N_S_soc_S_dac_40007400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, clocks, 0)
#define DT_N_S_soc_S_dac_40007400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_clocks_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_label "DAC_1"
#define DT_N_S_soc_S_dac_40007400_P_label_STRING_TOKEN DAC_1
#define DT_N_S_soc_S_dac_40007400_P_label_STRING_UPPER_TOKEN DAC_1
#define DT_N_S_soc_S_dac_40007400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, label, 0) \
	fn(DT_N_S_soc_S_dac_40007400, label, 1) \
	fn(DT_N_S_soc_S_dac_40007400, label, 2) \
	fn(DT_N_S_soc_S_dac_40007400, label, 3) \
	fn(DT_N_S_soc_S_dac_40007400, label, 4)
#define DT_N_S_soc_S_dac_40007400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_label_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_status "disabled"
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dac_40007400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dac_40007400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, status, 0) \
	fn(DT_N_S_soc_S_dac_40007400, status, 1) \
	fn(DT_N_S_soc_S_dac_40007400, status, 2) \
	fn(DT_N_S_soc_S_dac_40007400, status, 3) \
	fn(DT_N_S_soc_S_dac_40007400, status, 4) \
	fn(DT_N_S_soc_S_dac_40007400, status, 5) \
	fn(DT_N_S_soc_S_dac_40007400, status, 6) \
	fn(DT_N_S_soc_S_dac_40007400, status, 7)
#define DT_N_S_soc_S_dac_40007400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dac_40007400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_status_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible {"st,stm32-dac"}
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0 "st,stm32-dac"
#define DT_N_S_soc_S_dac_40007400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dac_40007400, compatible, 0)
#define DT_N_S_soc_S_dac_40007400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dac_40007400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dac_40007400_P_compatible_LEN 1
#define DT_N_S_soc_S_dac_40007400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dac_40007400_P_wakeup_source 0
#define DT_N_S_soc_S_dac_40007400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /sdram@d0000000
 *
 * Node identifier: DT_N_S_sdram_d0000000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_sdram_d0000000_PATH "/sdram@d0000000"

/* Node's name with unit-address: */
#define DT_N_S_sdram_d0000000_FULL_NAME "sdram@d0000000"

/* Node parent (/) identifier: */
#define DT_N_S_sdram_d0000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_sdram_d0000000_CHILD_IDX 9
#define DT_N_S_sdram_d0000000_FOREACH_CHILD(fn) 
#define DT_N_S_sdram_d0000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_sdram_d0000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_sdram_d0000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_sdram_d0000000_ORD 44

/* Ordinals for what this node depends on directly: */
#define DT_N_S_sdram_d0000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_sdram_d0000000_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_sdram_d0000000_EXISTS 1
#define DT_N_INST_1_zephyr_memory_region DT_N_S_sdram_d0000000
#define DT_N_INST_1_mmio_sram            DT_N_S_sdram_d0000000
#define DT_N_NODELABEL_sdram2            DT_N_S_sdram_d0000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_sdram_d0000000_REG_NUM 1
#define DT_N_S_sdram_d0000000_REG_IDX_0_EXISTS 1
#define DT_N_S_sdram_d0000000_REG_IDX_0_VAL_ADDRESS 3489660928 /* 0xd0000000 */
#define DT_N_S_sdram_d0000000_REG_IDX_0_VAL_SIZE 8388608 /* 0x800000 */
#define DT_N_S_sdram_d0000000_RANGES_NUM 0
#define DT_N_S_sdram_d0000000_FOREACH_RANGE(fn) 
#define DT_N_S_sdram_d0000000_IRQ_NUM 0
#define DT_N_S_sdram_d0000000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_sdram_d0000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_sdram_d0000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_sdram_d0000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_sdram_d0000000_P_zephyr_memory_region "SDRAM2"
#define DT_N_S_sdram_d0000000_P_zephyr_memory_region_STRING_TOKEN SDRAM2
#define DT_N_S_sdram_d0000000_P_zephyr_memory_region_STRING_UPPER_TOKEN SDRAM2
#define DT_N_S_sdram_d0000000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 0) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 1) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 2) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 3) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 4) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 5)
#define DT_N_S_sdram_d0000000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 0, __VA_ARGS__) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 1, __VA_ARGS__) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 2, __VA_ARGS__) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 3, __VA_ARGS__) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 4, __VA_ARGS__) \
	fn(DT_N_S_sdram_d0000000, zephyr_memory_region, 5, __VA_ARGS__)
#define DT_N_S_sdram_d0000000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_sdram_d0000000_P_compatible {"zephyr,memory-region", "mmio-sram"}
#define DT_N_S_sdram_d0000000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_sdram_d0000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_sdram_d0000000_P_compatible_IDX_1 "mmio-sram"
#define DT_N_S_sdram_d0000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_sdram_d0000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sdram_d0000000, compatible, 0) \
	fn(DT_N_S_sdram_d0000000, compatible, 1)
#define DT_N_S_sdram_d0000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sdram_d0000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_sdram_d0000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_sdram_d0000000_P_compatible_LEN 2
#define DT_N_S_sdram_d0000000_P_compatible_EXISTS 1
#define DT_N_S_sdram_d0000000_P_reg {3489660928 /* 0xd0000000 */, 8388608 /* 0x800000 */}
#define DT_N_S_sdram_d0000000_P_reg_IDX_0 3489660928
#define DT_N_S_sdram_d0000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_sdram_d0000000_P_reg_IDX_1 8388608
#define DT_N_S_sdram_d0000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_sdram_d0000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_sdram_d0000000, reg, 0) \
	fn(DT_N_S_sdram_d0000000, reg, 1)
#define DT_N_S_sdram_d0000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_sdram_d0000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_sdram_d0000000, reg, 1, __VA_ARGS__)
#define DT_N_S_sdram_d0000000_P_reg_EXISTS 1
#define DT_N_S_sdram_d0000000_P_wakeup_source 0
#define DT_N_S_sdram_d0000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_b2_pd6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_PATH "/soc/pin-controller@40020000/ltdc_b2_pd6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_FULL_NAME "ltdc_b2_pd6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_CHILD_IDX 72
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_ORD 45

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_EXISTS 1
#define DT_N_NODELABEL_ltdc_b2_pd6 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_pinmux 1742
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_b3_pg11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_PATH "/soc/pin-controller@40020000/ltdc_b3_pg11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_FULL_NAME "ltdc_b3_pg11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_CHILD_IDX 77
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_ORD 46

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_EXISTS 1
#define DT_N_NODELABEL_ltdc_b3_pg11 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_pinmux 3438
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_b4_pg12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_PATH "/soc/pin-controller@40020000/ltdc_b4_pg12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_FULL_NAME "ltdc_b4_pg12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_CHILD_IDX 78
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_ORD 47

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_EXISTS 1
#define DT_N_NODELABEL_ltdc_b4_pg12 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_pinmux 3465
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_b5_pa3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_PATH "/soc/pin-controller@40020000/ltdc_b5_pa3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_FULL_NAME "ltdc_b5_pa3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_CHILD_IDX 57
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_ORD 48

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_EXISTS 1
#define DT_N_NODELABEL_ltdc_b5_pa3 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_pinmux 110
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_b6_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_PATH "/soc/pin-controller@40020000/ltdc_b6_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_FULL_NAME "ltdc_b6_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_CHILD_IDX 64
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_ORD 49

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_EXISTS 1
#define DT_N_NODELABEL_ltdc_b6_pb8 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_pinmux 782
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_b7_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_PATH "/soc/pin-controller@40020000/ltdc_b7_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_FULL_NAME "ltdc_b7_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_CHILD_IDX 65
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_ORD 50

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_EXISTS 1
#define DT_N_NODELABEL_ltdc_b7_pb9 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_pinmux 814
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_clk_pg7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_PATH "/soc/pin-controller@40020000/ltdc_clk_pg7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_FULL_NAME "ltdc_clk_pg7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_CHILD_IDX 75
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_ORD 51

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_EXISTS 1
#define DT_N_NODELABEL_ltdc_clk_pg7 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_pinmux 3310
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_de_pf10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_PATH "/soc/pin-controller@40020000/ltdc_de_pf10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_FULL_NAME "ltdc_de_pf10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_CHILD_IDX 73
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_ORD 52

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_EXISTS 1
#define DT_N_NODELABEL_ltdc_de_pf10 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_pinmux 2894
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_g2_pa6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_PATH "/soc/pin-controller@40020000/ltdc_g2_pa6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_FULL_NAME "ltdc_g2_pa6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_CHILD_IDX 59
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_ORD 53

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_EXISTS 1
#define DT_N_NODELABEL_ltdc_g2_pa6 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_pinmux 206
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_g3_pg10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_PATH "/soc/pin-controller@40020000/ltdc_g3_pg10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_FULL_NAME "ltdc_g3_pg10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_CHILD_IDX 76
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_ORD 54

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_EXISTS 1
#define DT_N_NODELABEL_ltdc_g3_pg10 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_pinmux 3401
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_g4_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_PATH "/soc/pin-controller@40020000/ltdc_g4_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_FULL_NAME "ltdc_g4_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_CHILD_IDX 66
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_ORD 55

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_EXISTS 1
#define DT_N_NODELABEL_ltdc_g4_pb10 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_pinmux 846
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_g5_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_PATH "/soc/pin-controller@40020000/ltdc_g5_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_FULL_NAME "ltdc_g5_pb11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_CHILD_IDX 67
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_ORD 56

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_EXISTS 1
#define DT_N_NODELABEL_ltdc_g5_pb11 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_pinmux 878
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_g6_pc7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_PATH "/soc/pin-controller@40020000/ltdc_g6_pc7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_FULL_NAME "ltdc_g6_pc7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_CHILD_IDX 69
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_ORD 57

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_EXISTS 1
#define DT_N_NODELABEL_ltdc_g6_pc7 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_pinmux 1262
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_g7_pd3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_PATH "/soc/pin-controller@40020000/ltdc_g7_pd3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_FULL_NAME "ltdc_g7_pd3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_CHILD_IDX 71
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_ORD 58

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_EXISTS 1
#define DT_N_NODELABEL_ltdc_g7_pd3 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_pinmux 1646
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_hsync_pc6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_PATH "/soc/pin-controller@40020000/ltdc_hsync_pc6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_FULL_NAME "ltdc_hsync_pc6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_CHILD_IDX 68
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_ORD 59

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_EXISTS 1
#define DT_N_NODELABEL_ltdc_hsync_pc6 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_pinmux 1230
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_r2_pc10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_PATH "/soc/pin-controller@40020000/ltdc_r2_pc10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_FULL_NAME "ltdc_r2_pc10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_CHILD_IDX 70
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_ORD 60

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_EXISTS 1
#define DT_N_NODELABEL_ltdc_r2_pc10 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_pinmux 1358
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_r3_pb0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_PATH "/soc/pin-controller@40020000/ltdc_r3_pb0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_FULL_NAME "ltdc_r3_pb0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_CHILD_IDX 62
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_ORD 61

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_EXISTS 1
#define DT_N_NODELABEL_ltdc_r3_pb0 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_pinmux 521
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_r4_pa11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_PATH "/soc/pin-controller@40020000/ltdc_r4_pa11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_FULL_NAME "ltdc_r4_pa11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_CHILD_IDX 60
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_ORD 62

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_EXISTS 1
#define DT_N_NODELABEL_ltdc_r4_pa11 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_pinmux 366
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_r5_pa12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_PATH "/soc/pin-controller@40020000/ltdc_r5_pa12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_FULL_NAME "ltdc_r5_pa12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_CHILD_IDX 61
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_ORD 63

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_EXISTS 1
#define DT_N_NODELABEL_ltdc_r5_pa12 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_pinmux 398
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_r6_pb1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_PATH "/soc/pin-controller@40020000/ltdc_r6_pb1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_FULL_NAME "ltdc_r6_pb1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_CHILD_IDX 63
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_ORD 64

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_EXISTS 1
#define DT_N_NODELABEL_ltdc_r6_pb1 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_pinmux 553
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_r7_pg6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_PATH "/soc/pin-controller@40020000/ltdc_r7_pg6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_FULL_NAME "ltdc_r7_pg6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_CHILD_IDX 74
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_ORD 65

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_EXISTS 1
#define DT_N_NODELABEL_ltdc_r7_pg6 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_pinmux 3278
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/ltdc_vsync_pa4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_PATH "/soc/pin-controller@40020000/ltdc_vsync_pa4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_FULL_NAME "ltdc_vsync_pa4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_CHILD_IDX 58
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_ORD 66

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_SUPPORTS_ORDS \
	67, /* /soc/display-controller@40016800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_EXISTS 1
#define DT_N_NODELABEL_ltdc_vsync_pa4 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_pinmux 142
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/display-controller@40016800
 *
 * Node identifier: DT_N_S_soc_S_display_controller_40016800
 *
 * Binding (compatible = st,stm32-ltdc):
 *   $ZEPHYR_BASE/dts/bindings/display/st,stm32-ltdc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_display_controller_40016800_PATH "/soc/display-controller@40016800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_display_controller_40016800_FULL_NAME "display-controller@40016800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_display_controller_40016800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_display_controller_40016800_CHILD_IDX 57
#define DT_N_S_soc_S_display_controller_40016800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_display_controller_40016800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_display_controller_40016800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_display_controller_40016800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_display_controller_40016800_ORD 67

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_display_controller_40016800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	44, /* /sdram@d0000000 */ \
	45, /* /soc/pin-controller@40020000/ltdc_b2_pd6 */ \
	46, /* /soc/pin-controller@40020000/ltdc_b3_pg11 */ \
	47, /* /soc/pin-controller@40020000/ltdc_b4_pg12 */ \
	48, /* /soc/pin-controller@40020000/ltdc_b5_pa3 */ \
	49, /* /soc/pin-controller@40020000/ltdc_b6_pb8 */ \
	50, /* /soc/pin-controller@40020000/ltdc_b7_pb9 */ \
	51, /* /soc/pin-controller@40020000/ltdc_clk_pg7 */ \
	52, /* /soc/pin-controller@40020000/ltdc_de_pf10 */ \
	53, /* /soc/pin-controller@40020000/ltdc_g2_pa6 */ \
	54, /* /soc/pin-controller@40020000/ltdc_g3_pg10 */ \
	55, /* /soc/pin-controller@40020000/ltdc_g4_pb10 */ \
	56, /* /soc/pin-controller@40020000/ltdc_g5_pb11 */ \
	57, /* /soc/pin-controller@40020000/ltdc_g6_pc7 */ \
	58, /* /soc/pin-controller@40020000/ltdc_g7_pd3 */ \
	59, /* /soc/pin-controller@40020000/ltdc_hsync_pc6 */ \
	60, /* /soc/pin-controller@40020000/ltdc_r2_pc10 */ \
	61, /* /soc/pin-controller@40020000/ltdc_r3_pb0 */ \
	62, /* /soc/pin-controller@40020000/ltdc_r4_pa11 */ \
	63, /* /soc/pin-controller@40020000/ltdc_r5_pa12 */ \
	64, /* /soc/pin-controller@40020000/ltdc_r6_pb1 */ \
	65, /* /soc/pin-controller@40020000/ltdc_r7_pg6 */ \
	66, /* /soc/pin-controller@40020000/ltdc_vsync_pa4 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_display_controller_40016800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_display_controller_40016800_EXISTS 1
#define DT_N_INST_0_st_stm32_ltdc DT_N_S_soc_S_display_controller_40016800
#define DT_N_NODELABEL_ltdc       DT_N_S_soc_S_display_controller_40016800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_display_controller_40016800_REG_NUM 1
#define DT_N_S_soc_S_display_controller_40016800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_REG_IDX_0_VAL_ADDRESS 1073833984 /* 0x40016800 */
#define DT_N_S_soc_S_display_controller_40016800_REG_IDX_0_VAL_SIZE 512 /* 0x200 */
#define DT_N_S_soc_S_display_controller_40016800_RANGES_NUM 0
#define DT_N_S_soc_S_display_controller_40016800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_display_controller_40016800_IRQ_NUM 2
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_0_VAL_irq 88
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_1_VAL_irq 89
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_NAME_ltdc_VAL_irq DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_display_controller_40016800_IRQ_NAME_ltdc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_NAME_ltdc_VAL_priority DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_display_controller_40016800_IRQ_NAME_ltdc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_NAME_ltdc_er_VAL_irq DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_display_controller_40016800_IRQ_NAME_ltdc_er_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_IRQ_NAME_ltdc_er_VAL_priority DT_N_S_soc_S_display_controller_40016800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_display_controller_40016800_IRQ_NAME_ltdc_er_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_COMPAT_MATCHES_st_stm32_ltdc 1
#define DT_N_S_soc_S_display_controller_40016800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NUM 1
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_5_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_6_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_7_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_8_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_9_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_10_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_11_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_12_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_13_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_14_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_15_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_16_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_17_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_18_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_19_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_20_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6
#define DT_N_S_soc_S_display_controller_40016800_PINCTRL_NAME_default_IDX_21_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4

/* Generic property macros: */
#define DT_N_S_soc_S_display_controller_40016800_P_ext_sdram DT_N_S_sdram_d0000000
#define DT_N_S_soc_S_display_controller_40016800_P_ext_sdram_IDX_0 DT_N_S_sdram_d0000000
#define DT_N_S_soc_S_display_controller_40016800_P_ext_sdram_IDX_0_PH DT_N_S_sdram_d0000000
#define DT_N_S_soc_S_display_controller_40016800_P_ext_sdram_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_ext_sdram_LEN 1
#define DT_N_S_soc_S_display_controller_40016800_P_ext_sdram_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_IDX_0_VAL_bits 67108864
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_40016800, clocks, 0)
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_LEN 1
#define DT_N_S_soc_S_display_controller_40016800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts {88 /* 0x58 */, 0 /* 0x0 */, 89 /* 0x59 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_IDX_0 88
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_IDX_2 89
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_40016800, interrupts, 0) \
	fn(DT_N_S_soc_S_display_controller_40016800, interrupts, 1) \
	fn(DT_N_S_soc_S_display_controller_40016800, interrupts, 2) \
	fn(DT_N_S_soc_S_display_controller_40016800, interrupts, 3)
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_40016800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r2_pc10
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r3_pb0
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r4_pa11
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r5_pa12
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r6_pb1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_5 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_5_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_r7_pg6
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_5_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_6 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_6_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g2_pa6
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_6_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_7 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_7_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g3_pg10
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_7_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_8 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_8_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g4_pb10
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_8_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_9 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_9_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g5_pb11
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_9_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_10 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_10_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g6_pc7
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_10_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_11 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_11_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_g7_pd3
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_11_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_12 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_12_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b2_pd6
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_12_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_13 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_13_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b3_pg11
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_13_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_14 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_14_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b4_pg12
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_14_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_15 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_15_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b5_pa3
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_15_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_16 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_16_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b6_pb8
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_16_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_17 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_17_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_b7_pb9
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_17_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_18 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_18_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_de_pf10
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_18_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_19 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_19_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_clk_pg7
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_19_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_20 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_20_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_hsync_pc6
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_20_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_21 DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_21_PH DT_N_S_soc_S_pin_controller_40020000_S_ltdc_vsync_pa4
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_IDX_21_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 4) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 5) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 6) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 7) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 8) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 9) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 10) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 11) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 12) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 13) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 14) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 15) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 16) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 17) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 18) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 19) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 20) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 21)
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_0, 21, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_LEN 22
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_hsync_pol 0
#define DT_N_S_soc_S_display_controller_40016800_P_hsync_pol_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_vsync_pol 0
#define DT_N_S_soc_S_display_controller_40016800_P_vsync_pol_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_de_pol 0
#define DT_N_S_soc_S_display_controller_40016800_P_de_pol_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pclk_pol 0
#define DT_N_S_soc_S_display_controller_40016800_P_pclk_pol_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_hsync_duration 10
#define DT_N_S_soc_S_display_controller_40016800_P_hsync_duration_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_vsync_duration 2
#define DT_N_S_soc_S_display_controller_40016800_P_vsync_duration_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_hbp_duration 20
#define DT_N_S_soc_S_display_controller_40016800_P_hbp_duration_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_vbp_duration 2
#define DT_N_S_soc_S_display_controller_40016800_P_vbp_duration_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_hfp_duration 10
#define DT_N_S_soc_S_display_controller_40016800_P_hfp_duration_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_vfp_duration 4
#define DT_N_S_soc_S_display_controller_40016800_P_vfp_duration_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_def_back_color_red 255
#define DT_N_S_soc_S_display_controller_40016800_P_def_back_color_red_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_def_back_color_green 255
#define DT_N_S_soc_S_display_controller_40016800_P_def_back_color_green_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_def_back_color_blue 255
#define DT_N_S_soc_S_display_controller_40016800_P_def_back_color_blue_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_height 320
#define DT_N_S_soc_S_display_controller_40016800_P_height_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_width 240
#define DT_N_S_soc_S_display_controller_40016800_P_width_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_label "LTDC"
#define DT_N_S_soc_S_display_controller_40016800_P_label_STRING_TOKEN LTDC
#define DT_N_S_soc_S_display_controller_40016800_P_label_STRING_UPPER_TOKEN LTDC
#define DT_N_S_soc_S_display_controller_40016800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_40016800, label, 0) \
	fn(DT_N_S_soc_S_display_controller_40016800, label, 1) \
	fn(DT_N_S_soc_S_display_controller_40016800, label, 2) \
	fn(DT_N_S_soc_S_display_controller_40016800, label, 3)
#define DT_N_S_soc_S_display_controller_40016800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_40016800_P_label_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_status "okay"
#define DT_N_S_soc_S_display_controller_40016800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_display_controller_40016800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_display_controller_40016800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_display_controller_40016800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_display_controller_40016800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_display_controller_40016800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_40016800, status, 0) \
	fn(DT_N_S_soc_S_display_controller_40016800, status, 1) \
	fn(DT_N_S_soc_S_display_controller_40016800, status, 2) \
	fn(DT_N_S_soc_S_display_controller_40016800, status, 3)
#define DT_N_S_soc_S_display_controller_40016800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_40016800_P_status_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_compatible {"st,stm32-ltdc"}
#define DT_N_S_soc_S_display_controller_40016800_P_compatible_IDX_0 "st,stm32-ltdc"
#define DT_N_S_soc_S_display_controller_40016800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_40016800, compatible, 0)
#define DT_N_S_soc_S_display_controller_40016800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_40016800_P_compatible_LEN 1
#define DT_N_S_soc_S_display_controller_40016800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_reg {1073833984 /* 0x40016800 */, 512 /* 0x200 */}
#define DT_N_S_soc_S_display_controller_40016800_P_reg_IDX_0 1073833984
#define DT_N_S_soc_S_display_controller_40016800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_reg_IDX_1 512
#define DT_N_S_soc_S_display_controller_40016800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_40016800, reg, 0) \
	fn(DT_N_S_soc_S_display_controller_40016800, reg, 1)
#define DT_N_S_soc_S_display_controller_40016800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_40016800_P_reg_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_interrupt_names {"ltdc", "ltdc_er"}
#define DT_N_S_soc_S_display_controller_40016800_P_interrupt_names_IDX_0 "ltdc"
#define DT_N_S_soc_S_display_controller_40016800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_interrupt_names_IDX_1 "ltdc_er"
#define DT_N_S_soc_S_display_controller_40016800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_40016800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_display_controller_40016800, interrupt_names, 1)
#define DT_N_S_soc_S_display_controller_40016800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_display_controller_40016800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_40016800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_display_controller_40016800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_wakeup_source 0
#define DT_N_S_soc_S_display_controller_40016800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_names, 0)
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_display_controller_40016800_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026400
 *
 * Node identifier: DT_N_S_soc_S_dma_40026400
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026400_PATH "/soc/dma@40026400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026400_FULL_NAME "dma@40026400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40026400_CHILD_IDX 27
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40026400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026400_ORD 68

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026400_EXISTS 1
#define DT_N_INST_1_st_stm32_dma_v1 DT_N_S_soc_S_dma_40026400
#define DT_N_NODELABEL_dma2         DT_N_S_soc_S_dma_40026400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40026400_REG_NUM 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_ADDRESS 1073898496 /* 0x40026400 */
#define DT_N_S_soc_S_dma_40026400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026400_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40026400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40026400_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq 56
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq 57
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq 58
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq 59
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq 60
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq 68
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq 69
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq 70
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026400_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_40026400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40026400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026400_P_reg {1073898496 /* 0x40026400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0 1073898496
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, reg, 0) \
	fn(DT_N_S_soc_S_dma_40026400, reg, 1)
#define DT_N_S_soc_S_dma_40026400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts {56 /* 0x38 */, 0 /* 0x0 */, 57 /* 0x39 */, 0 /* 0x0 */, 58 /* 0x3a */, 0 /* 0x0 */, 59 /* 0x3b */, 0 /* 0x0 */, 60 /* 0x3c */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */, 69 /* 0x45 */, 0 /* 0x0 */, 70 /* 0x46 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0 56
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2 57
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4 58
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6 59
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8 60
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10 68
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12 69
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14 70
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026400_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 13) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 14) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 15)
#define DT_N_S_soc_S_dma_40026400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, interrupts, 15, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_st_mem2mem 1
#define DT_N_S_soc_S_dma_40026400_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_label "DMA_2"
#define DT_N_S_soc_S_dma_40026400_P_label_STRING_TOKEN DMA_2
#define DT_N_S_soc_S_dma_40026400_P_label_STRING_UPPER_TOKEN DMA_2
#define DT_N_S_soc_S_dma_40026400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, label, 0) \
	fn(DT_N_S_soc_S_dma_40026400, label, 1) \
	fn(DT_N_S_soc_S_dma_40026400, label, 2) \
	fn(DT_N_S_soc_S_dma_40026400, label, 3) \
	fn(DT_N_S_soc_S_dma_40026400, label, 4)
#define DT_N_S_soc_S_dma_40026400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_status "disabled"
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40026400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, status, 0) \
	fn(DT_N_S_soc_S_dma_40026400, status, 1) \
	fn(DT_N_S_soc_S_dma_40026400, status, 2) \
	fn(DT_N_S_soc_S_dma_40026400, status, 3) \
	fn(DT_N_S_soc_S_dma_40026400, status, 4) \
	fn(DT_N_S_soc_S_dma_40026400, status, 5) \
	fn(DT_N_S_soc_S_dma_40026400, status, 6) \
	fn(DT_N_S_soc_S_dma_40026400, status, 7)
#define DT_N_S_soc_S_dma_40026400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, compatible, 0)
#define DT_N_S_soc_S_dma_40026400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_dma_40026400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026400, clocks, 0)
#define DT_N_S_soc_S_dma_40026400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026400_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40026400_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40026400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/ethernet@40028000
 *
 * Node identifier: DT_N_S_soc_S_ethernet_40028000
 *
 * Binding (compatible = st,stm32-ethernet):
 *   $ZEPHYR_BASE/dts/bindings/ethernet/st,stm32-ethernet.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ethernet_40028000_PATH "/soc/ethernet@40028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ethernet_40028000_FULL_NAME "ethernet@40028000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ethernet_40028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ethernet_40028000_CHILD_IDX 51
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ethernet_40028000_ORD 69

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ethernet_40028000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ethernet_40028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ethernet_40028000_EXISTS 1
#define DT_N_INST_0_st_stm32_ethernet DT_N_S_soc_S_ethernet_40028000
#define DT_N_NODELABEL_mac            DT_N_S_soc_S_ethernet_40028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ethernet_40028000_REG_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_REG_IDX_0_VAL_ADDRESS 1073905664 /* 0x40028000 */
#define DT_N_S_soc_S_ethernet_40028000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_ethernet_40028000_RANGES_NUM 0
#define DT_N_S_soc_S_ethernet_40028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ethernet_40028000_IRQ_NUM 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_irq 61
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ethernet_40028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_COMPAT_MATCHES_st_stm32_ethernet 1
#define DT_N_S_soc_S_ethernet_40028000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ethernet_40028000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ethernet_40028000_P_reg {1073905664 /* 0x40028000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_0 1073905664
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_ethernet_40028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, reg, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, reg, 1)
#define DT_N_S_soc_S_ethernet_40028000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts {61 /* 0x3d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_0 61
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, interrupts, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, interrupts, 1)
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bits 33554432
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_NAME "stmmaceth"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_0_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_stmmaceth_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bus 48
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bits 67108864
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_NAME "mac-clk-tx"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_1_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_tx_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bus 48
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bits 134217728
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_NAME "mac-clk-rx"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_2_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_rx_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bus 48
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bits 268435456
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_NAME "mac-clk-ptp"
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_VAL_bus DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bus
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_VAL_bits DT_N_S_soc_S_ethernet_40028000_P_clocks_IDX_3_VAL_bits
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_NAME_mac_clk_ptp_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, clocks, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 3)
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, clocks, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clocks, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_LEN 4
#define DT_N_S_soc_S_ethernet_40028000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names {"stmmaceth", "mac-clk-tx", "mac-clk-rx", "mac-clk-ptp"}
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_0 "stmmaceth"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_1 "mac-clk-tx"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_2 "mac-clk-rx"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_3 "mac-clk-ptp"
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 3)
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, clock_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_LEN 4
#define DT_N_S_soc_S_ethernet_40028000_P_clock_names_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_label "ETH_0"
#define DT_N_S_soc_S_ethernet_40028000_P_label_STRING_TOKEN ETH_0
#define DT_N_S_soc_S_ethernet_40028000_P_label_STRING_UPPER_TOKEN ETH_0
#define DT_N_S_soc_S_ethernet_40028000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, label, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 3) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 4)
#define DT_N_S_soc_S_ethernet_40028000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_label_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_random_mac_address 0
#define DT_N_S_soc_S_ethernet_40028000_P_zephyr_random_mac_address_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_status "disabled"
#define DT_N_S_soc_S_ethernet_40028000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_ethernet_40028000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ethernet_40028000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_ethernet_40028000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_ethernet_40028000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ethernet_40028000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, status, 0) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 1) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 2) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 3) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 4) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 5) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 6) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 7)
#define DT_N_S_soc_S_ethernet_40028000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ethernet_40028000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_status_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_compatible {"st,stm32-ethernet"}
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_0 "st,stm32-ethernet"
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ethernet_40028000, compatible, 0)
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ethernet_40028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_LEN 1
#define DT_N_S_soc_S_ethernet_40028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ethernet_40028000_P_wakeup_source 0
#define DT_N_S_soc_S_ethernet_40028000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_scl_pb8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_PATH "/soc/pin-controller@40020000/i2c1_scl_pb8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FULL_NAME "i2c1_scl_pb8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_CHILD_IDX 51
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_ORD 70

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_SUPPORTS_ORDS \
	72, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_EXISTS 1
#define DT_N_NODELABEL_i2c1_scl_pb8 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_pinmux 772
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c1_sda_pb9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PATH "/soc/pin-controller@40020000/i2c1_sda_pb9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FULL_NAME "i2c1_sda_pb9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_CHILD_IDX 54
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_ORD 71

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_SUPPORTS_ORDS \
	72, /* /soc/i2c@40005400 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_EXISTS 1
#define DT_N_NODELABEL_i2c1_sda_pb9 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_pinmux 804
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005400
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005400
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005400_PATH "/soc/i2c@40005400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005400_FULL_NAME "i2c@40005400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005400_CHILD_IDX 11
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005400_ORD 72

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	70, /* /soc/pin-controller@40020000/i2c1_scl_pb8 */ \
	71, /* /soc/pin-controller@40020000/i2c1_sda_pb9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005400_EXISTS 1
#define DT_N_INST_0_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005400
#define DT_N_NODELABEL_i2c1         DT_N_S_soc_S_i2c_40005400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005400_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_ADDRESS 1073763328 /* 0x40005400 */
#define DT_N_S_soc_S_i2c_40005400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005400_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005400_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq 32
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005400_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005400_P_reg {1073763328 /* 0x40005400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0 1073763328
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1)
#define DT_N_S_soc_S_i2c_40005400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 32 /* 0x20 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2 32
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_scl_pb8
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c1_sda_pb9
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005400_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_label "I2C_1"
#define DT_N_S_soc_S_i2c_40005400_P_label_STRING_TOKEN I2C_1
#define DT_N_S_soc_S_i2c_40005400_P_label_STRING_UPPER_TOKEN I2C_1
#define DT_N_S_soc_S_i2c_40005400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 4)
#define DT_N_S_soc_S_i2c_40005400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_status "okay"
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005400_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3)
#define DT_N_S_soc_S_i2c_40005400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005400, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_i2c_40005400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005400_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c2_scl_pb10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_PATH "/soc/pin-controller@40020000/i2c2_scl_pb10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FULL_NAME "i2c2_scl_pb10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_CHILD_IDX 52
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_ORD 73

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_SUPPORTS_ORDS \
	75, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_EXISTS 1
#define DT_N_NODELABEL_i2c2_scl_pb10 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_pinmux 836
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c2_sda_pb11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_PATH "/soc/pin-controller@40020000/i2c2_sda_pb11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_FULL_NAME "i2c2_sda_pb11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_CHILD_IDX 55
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_ORD 74

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_SUPPORTS_ORDS \
	75, /* /soc/i2c@40005800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_EXISTS 1
#define DT_N_NODELABEL_i2c2_sda_pb11 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_pinmux 868
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005800
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005800
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005800_PATH "/soc/i2c@40005800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005800_FULL_NAME "i2c@40005800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005800_CHILD_IDX 12
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005800_ORD 75

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	73, /* /soc/pin-controller@40020000/i2c2_scl_pb10 */ \
	74, /* /soc/pin-controller@40020000/i2c2_sda_pb11 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005800_EXISTS 1
#define DT_N_INST_1_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005800
#define DT_N_NODELABEL_i2c2         DT_N_S_soc_S_i2c_40005800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005800_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_ADDRESS 1073764352 /* 0x40005800 */
#define DT_N_S_soc_S_i2c_40005800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005800_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005800_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq 33
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq 34
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005800_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005800_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10
#define DT_N_S_soc_S_i2c_40005800_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005800_P_reg {1073764352 /* 0x40005800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0 1073764352
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1)
#define DT_N_S_soc_S_i2c_40005800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts {33 /* 0x21 */, 0 /* 0x0 */, 34 /* 0x22 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0 33
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2 34
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c2_scl_pb10
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c2_sda_pb11
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005800_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_label "I2C_2"
#define DT_N_S_soc_S_i2c_40005800_P_label_STRING_TOKEN I2C_2
#define DT_N_S_soc_S_i2c_40005800_P_label_STRING_UPPER_TOKEN I2C_2
#define DT_N_S_soc_S_i2c_40005800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 4)
#define DT_N_S_soc_S_i2c_40005800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_status "okay"
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3)
#define DT_N_S_soc_S_i2c_40005800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005800, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits 4194304
#define DT_N_S_soc_S_i2c_40005800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c3_scl_pa8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_PATH "/soc/pin-controller@40020000/i2c3_scl_pa8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FULL_NAME "i2c3_scl_pa8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_CHILD_IDX 53
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_ORD 76

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_SUPPORTS_ORDS \
	78, /* /soc/i2c@40005c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_EXISTS 1
#define DT_N_NODELABEL_i2c3_scl_pa8 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_pinmux 260
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/i2c3_sda_pc9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_PATH "/soc/pin-controller@40020000/i2c3_sda_pc9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FULL_NAME "i2c3_sda_pc9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_CHILD_IDX 56
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_ORD 77

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_SUPPORTS_ORDS \
	78, /* /soc/i2c@40005c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_EXISTS 1
#define DT_N_NODELABEL_i2c3_sda_pc9 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_pinmux 1316
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/i2c@40005c00
 *
 * Node identifier: DT_N_S_soc_S_i2c_40005c00
 *
 * Binding (compatible = st,stm32-i2c-v1):
 *   $ZEPHYR_BASE/dts/bindings/i2c/st,stm32-i2c-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_40005c00_PATH "/soc/i2c@40005c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_40005c00_FULL_NAME "i2c@40005c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_40005c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_40005c00_CHILD_IDX 13
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_40005c00_ORD 78

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_40005c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	76, /* /soc/pin-controller@40020000/i2c3_scl_pa8 */ \
	77, /* /soc/pin-controller@40020000/i2c3_sda_pc9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_40005c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_40005c00_EXISTS 1
#define DT_N_INST_2_st_stm32_i2c_v1 DT_N_S_soc_S_i2c_40005c00
#define DT_N_NODELABEL_i2c3         DT_N_S_soc_S_i2c_40005c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_40005c00_REG_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_ADDRESS 1073765376 /* 0x40005c00 */
#define DT_N_S_soc_S_i2c_40005c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2c_40005c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_40005c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NUM 2
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq 72
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq 73
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_event_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority DT_N_S_soc_S_i2c_40005c00_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_i2c_40005c00_IRQ_NAME_error_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_COMPAT_MATCHES_st_stm32_i2c_v1 1
#define DT_N_S_soc_S_i2c_40005c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8
#define DT_N_S_soc_S_i2c_40005c00_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_40005c00_P_reg {1073765376 /* 0x40005c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0 1073765376
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2c_40005c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts {72 /* 0x48 */, 0 /* 0x0 */, 73 /* 0x49 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0 72
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2 73
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupts, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c3_scl_pa8
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_i2c3_sda_pc9
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency 400000
#define DT_N_S_soc_S_i2c_40005c00_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_label "I2C_3"
#define DT_N_S_soc_S_i2c_40005c00_P_label_STRING_TOKEN I2C_3
#define DT_N_S_soc_S_i2c_40005c00_P_label_STRING_UPPER_TOKEN I2C_3
#define DT_N_S_soc_S_i2c_40005c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, label, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 3) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 4)
#define DT_N_S_soc_S_i2c_40005c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_label_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_status "okay"
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_40005c00_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_i2c_40005c00_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, status, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3)
#define DT_N_S_soc_S_i2c_40005c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible {"st,stm32-i2c-v1"}
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0 "st,stm32-i2c-v1"
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names {"event", "error"}
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0 "event"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1 "error"
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2c_40005c00, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_i2c_40005c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits 8388608
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_40005c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_40005c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_40005c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/dma@40026000
 *
 * Node identifier: DT_N_S_soc_S_dma_40026000
 *
 * Binding (compatible = st,stm32-dma-v1):
 *   $ZEPHYR_BASE/dts/bindings/dma/st,stm32-dma-v1.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40026000_PATH "/soc/dma@40026000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40026000_FULL_NAME "dma@40026000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40026000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40026000_CHILD_IDX 26
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40026000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40026000_ORD 79

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40026000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40026000_SUPPORTS_ORDS \
	80, /* /soc/i2s@40003800 */ \
	81, /* /soc/i2s@40003c00 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40026000_EXISTS 1
#define DT_N_INST_0_st_stm32_dma_v1 DT_N_S_soc_S_dma_40026000
#define DT_N_NODELABEL_dma1         DT_N_S_soc_S_dma_40026000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40026000_REG_NUM 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_ADDRESS 1073897472 /* 0x40026000 */
#define DT_N_S_soc_S_dma_40026000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_dma_40026000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40026000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40026000_IRQ_NUM 8
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq 13
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq 14
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq 15
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq 16
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq 17
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq 47
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_40026000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_COMPAT_MATCHES_st_stm32_dma_v1 1
#define DT_N_S_soc_S_dma_40026000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40026000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40026000_P_reg {1073897472 /* 0x40026000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0 1073897472
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_dma_40026000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, reg, 0) \
	fn(DT_N_S_soc_S_dma_40026000, reg, 1)
#define DT_N_S_soc_S_dma_40026000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */, 13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */, 15 /* 0xf */, 0 /* 0x0 */, 16 /* 0x10 */, 0 /* 0x0 */, 17 /* 0x11 */, 0 /* 0x0 */, 47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4 13
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6 14
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8 15
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10 16
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12 17
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14 47
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15 0
#define DT_N_S_soc_S_dma_40026000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, interrupts, 0) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 1) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 2) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 3) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 4) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 5) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 6) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 7) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 8) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 9) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 10) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 11) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 12) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 13) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 14) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 15)
#define DT_N_S_soc_S_dma_40026000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, interrupts, 15, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_st_mem2mem 0
#define DT_N_S_soc_S_dma_40026000_P_st_mem2mem_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_label "DMA_1"
#define DT_N_S_soc_S_dma_40026000_P_label_STRING_TOKEN DMA_1
#define DT_N_S_soc_S_dma_40026000_P_label_STRING_UPPER_TOKEN DMA_1
#define DT_N_S_soc_S_dma_40026000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, label, 0) \
	fn(DT_N_S_soc_S_dma_40026000, label, 1) \
	fn(DT_N_S_soc_S_dma_40026000, label, 2) \
	fn(DT_N_S_soc_S_dma_40026000, label, 3) \
	fn(DT_N_S_soc_S_dma_40026000, label, 4)
#define DT_N_S_soc_S_dma_40026000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_label_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_status "disabled"
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40026000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_40026000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, status, 0) \
	fn(DT_N_S_soc_S_dma_40026000, status, 1) \
	fn(DT_N_S_soc_S_dma_40026000, status, 2) \
	fn(DT_N_S_soc_S_dma_40026000, status, 3) \
	fn(DT_N_S_soc_S_dma_40026000, status, 4) \
	fn(DT_N_S_soc_S_dma_40026000, status, 5) \
	fn(DT_N_S_soc_S_dma_40026000, status, 6) \
	fn(DT_N_S_soc_S_dma_40026000, status, 7)
#define DT_N_S_soc_S_dma_40026000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_dma_40026000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible {"st,stm32-dma-v1"}
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0 "st,stm32-dma-v1"
#define DT_N_S_soc_S_dma_40026000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, compatible, 0)
#define DT_N_S_soc_S_dma_40026000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_dma_40026000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40026000, clocks, 0)
#define DT_N_S_soc_S_dma_40026000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40026000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40026000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_40026000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_40026000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40026000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003800
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003800
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003800_PATH "/soc/i2s@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003800_FULL_NAME "i2s@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40003800_CHILD_IDX 32
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003800_ORD 80

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	79, /* /soc/dma@40026000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003800_EXISTS 1
#define DT_N_INST_0_st_stm32_i2s DT_N_S_soc_S_i2s_40003800
#define DT_N_NODELABEL_i2s2      DT_N_S_soc_S_i2s_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40003800_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_i2s_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, reg, 1)
#define DT_N_S_soc_S_i2s_40003800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, interrupts, 1)
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel 4
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40003800_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40003800_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003800_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_label "I2S_2"
#define DT_N_S_soc_S_i2s_40003800_P_label_STRING_TOKEN I2S_2
#define DT_N_S_soc_S_i2s_40003800_P_label_STRING_UPPER_TOKEN I2S_2
#define DT_N_S_soc_S_i2s_40003800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, label, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 1) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 2) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 3) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 4)
#define DT_N_S_soc_S_i2s_40003800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, status, 0) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 1) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 2) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 3) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 4) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 5) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 6) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 7)
#define DT_N_S_soc_S_i2s_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_i2s_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40003800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/i2s@40003c00
 *
 * Node identifier: DT_N_S_soc_S_i2s_40003c00
 *
 * Binding (compatible = st,stm32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/st,stm32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_40003c00_PATH "/soc/i2s@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_40003c00_FULL_NAME "i2s@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_40003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_40003c00_CHILD_IDX 33
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_40003c00_ORD 81

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_40003c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	79, /* /soc/dma@40026000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_40003c00_EXISTS 1
#define DT_N_INST_1_st_stm32_i2s DT_N_S_soc_S_i2s_40003c00
#define DT_N_NODELABEL_i2s3      DT_N_S_soc_S_i2s_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_40003c00_REG_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_i2s_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_i2s_40003c00_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_40003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_i2s_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_COMPAT_MATCHES_st_stm32_i2s 1
#define DT_N_S_soc_S_i2s_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_i2s_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, reg, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, reg, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel 5
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features 3
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_NAME "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_features DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_0_VAL_features
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_tx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot 0
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config 1024
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features 3
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_NAME "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_40026000
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_slot
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_slot_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_channel_config
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_channel_config_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_features DT_N_S_soc_S_i2s_40003c00_P_dmas_IDX_1_VAL_features
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_NAME_rx_VAL_features_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names {"tx", "rx"}
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0 "tx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1 "rx"
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_40003c00_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_label "I2S_3"
#define DT_N_S_soc_S_i2s_40003c00_P_label_STRING_TOKEN I2S_3
#define DT_N_S_soc_S_i2s_40003c00_P_label_STRING_UPPER_TOKEN I2S_3
#define DT_N_S_soc_S_i2s_40003c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, label, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 1) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 2) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 3) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 4)
#define DT_N_S_soc_S_i2s_40003c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_label_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_status "disabled"
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_40003c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, status, 0) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 1) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 2) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 3) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 4) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 5) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 6) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 7)
#define DT_N_S_soc_S_i2s_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_40003c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible {"st,stm32-i2s"}
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0 "st,stm32-i2s"
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_40003c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@40013c00
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_40013c00
 *
 * Binding (compatible = st,stm32-exti):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/st,stm32-exti.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PATH "/soc/interrupt-controller@40013c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_FULL_NAME "interrupt-controller@40013c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_CHILD_IDX 4
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_ORD 82

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_EXISTS 1
#define DT_N_INST_0_st_stm32_exti DT_N_S_soc_S_interrupt_controller_40013c00
#define DT_N_NODELABEL_exti       DT_N_S_soc_S_interrupt_controller_40013c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_ADDRESS 1073822720 /* 0x40013c00 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_interrupt_controller_40013c00_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_40013c00_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_COMPAT_MATCHES_st_stm32_exti 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg {1073822720 /* 0x40013c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0 1073822720
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 0) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 1)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_interrupt_controller_40013c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible {"st,stm32-exti"}
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0 "st,stm32-exti"
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_40013c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/memory@40024000
 *
 * Node identifier: DT_N_S_soc_S_memory_40024000
 *
 * Binding (compatible = zephyr,memory-region):
 *   $ZEPHYR_BASE/dts/bindings/base/zephyr,memory-region.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_40024000_PATH "/soc/memory@40024000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_40024000_FULL_NAME "memory@40024000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_40024000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_40024000_CHILD_IDX 47
#define DT_N_S_soc_S_memory_40024000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_40024000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_40024000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_40024000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_40024000_ORD 83

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_40024000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_40024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_40024000_EXISTS 1
#define DT_N_INST_2_zephyr_memory_region DT_N_S_soc_S_memory_40024000
#define DT_N_INST_0_st_stm32_backup_sram DT_N_S_soc_S_memory_40024000
#define DT_N_NODELABEL_backup_sram       DT_N_S_soc_S_memory_40024000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_40024000_REG_NUM 1
#define DT_N_S_soc_S_memory_40024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_REG_IDX_0_VAL_ADDRESS 1073889280 /* 0x40024000 */
#define DT_N_S_soc_S_memory_40024000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_memory_40024000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_40024000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_40024000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_40024000_COMPAT_MATCHES_zephyr_memory_region 1
#define DT_N_S_soc_S_memory_40024000_COMPAT_MATCHES_st_stm32_backup_sram 1
#define DT_N_S_soc_S_memory_40024000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_40024000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_40024000_P_zephyr_memory_region "BACKUP_SRAM"
#define DT_N_S_soc_S_memory_40024000_P_zephyr_memory_region_STRING_TOKEN BACKUP_SRAM
#define DT_N_S_soc_S_memory_40024000_P_zephyr_memory_region_STRING_UPPER_TOKEN BACKUP_SRAM
#define DT_N_S_soc_S_memory_40024000_P_zephyr_memory_region_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 0) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 1) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 2) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 3) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 4) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 5) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 6) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 7) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 8) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 9) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 10)
#define DT_N_S_soc_S_memory_40024000_P_zephyr_memory_region_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, zephyr_memory_region, 10, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40024000_P_zephyr_memory_region_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_status "disabled"
#define DT_N_S_soc_S_memory_40024000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_memory_40024000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_40024000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_memory_40024000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_memory_40024000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_memory_40024000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, status, 0) \
	fn(DT_N_S_soc_S_memory_40024000, status, 1) \
	fn(DT_N_S_soc_S_memory_40024000, status, 2) \
	fn(DT_N_S_soc_S_memory_40024000, status, 3) \
	fn(DT_N_S_soc_S_memory_40024000, status, 4) \
	fn(DT_N_S_soc_S_memory_40024000, status, 5) \
	fn(DT_N_S_soc_S_memory_40024000, status, 6) \
	fn(DT_N_S_soc_S_memory_40024000, status, 7)
#define DT_N_S_soc_S_memory_40024000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40024000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40024000_P_status_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_compatible {"zephyr,memory-region", "st,stm32-backup-sram"}
#define DT_N_S_soc_S_memory_40024000_P_compatible_IDX_0 "zephyr,memory-region"
#define DT_N_S_soc_S_memory_40024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_compatible_IDX_1 "st,stm32-backup-sram"
#define DT_N_S_soc_S_memory_40024000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, compatible, 0) \
	fn(DT_N_S_soc_S_memory_40024000, compatible, 1)
#define DT_N_S_soc_S_memory_40024000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40024000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40024000_P_compatible_LEN 2
#define DT_N_S_soc_S_memory_40024000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_reg {1073889280 /* 0x40024000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_memory_40024000_P_reg_IDX_0 1073889280
#define DT_N_S_soc_S_memory_40024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_memory_40024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, reg, 0) \
	fn(DT_N_S_soc_S_memory_40024000, reg, 1)
#define DT_N_S_soc_S_memory_40024000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40024000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_label "BACKUP_SRAM"
#define DT_N_S_soc_S_memory_40024000_P_label_STRING_TOKEN BACKUP_SRAM
#define DT_N_S_soc_S_memory_40024000_P_label_STRING_UPPER_TOKEN BACKUP_SRAM
#define DT_N_S_soc_S_memory_40024000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, label, 0) \
	fn(DT_N_S_soc_S_memory_40024000, label, 1) \
	fn(DT_N_S_soc_S_memory_40024000, label, 2) \
	fn(DT_N_S_soc_S_memory_40024000, label, 3) \
	fn(DT_N_S_soc_S_memory_40024000, label, 4) \
	fn(DT_N_S_soc_S_memory_40024000, label, 5) \
	fn(DT_N_S_soc_S_memory_40024000, label, 6) \
	fn(DT_N_S_soc_S_memory_40024000, label, 7) \
	fn(DT_N_S_soc_S_memory_40024000, label, 8) \
	fn(DT_N_S_soc_S_memory_40024000, label, 9) \
	fn(DT_N_S_soc_S_memory_40024000, label, 10)
#define DT_N_S_soc_S_memory_40024000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40024000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_40024000, label, 10, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40024000_P_label_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_memory_40024000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_40024000, clocks, 0)
#define DT_N_S_soc_S_memory_40024000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_40024000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_40024000_P_clocks_LEN 1
#define DT_N_S_soc_S_memory_40024000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_memory_40024000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_40024000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rng@50060800
 *
 * Node identifier: DT_N_S_soc_S_rng_50060800
 *
 * Binding (compatible = st,stm32-rng):
 *   $ZEPHYR_BASE/dts/bindings/rng/st,stm32-rng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rng_50060800_PATH "/soc/rng@50060800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rng_50060800_FULL_NAME "rng@50060800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rng_50060800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rng_50060800_CHILD_IDX 46
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rng_50060800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rng_50060800_ORD 84

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rng_50060800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rng_50060800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rng_50060800_EXISTS 1
#define DT_N_INST_0_st_stm32_rng DT_N_S_soc_S_rng_50060800
#define DT_N_NODELABEL_rng       DT_N_S_soc_S_rng_50060800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rng_50060800_REG_NUM 1
#define DT_N_S_soc_S_rng_50060800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_REG_IDX_0_VAL_ADDRESS 1342572544 /* 0x50060800 */
#define DT_N_S_soc_S_rng_50060800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rng_50060800_RANGES_NUM 0
#define DT_N_S_soc_S_rng_50060800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rng_50060800_IRQ_NUM 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_irq 80
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rng_50060800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_COMPAT_MATCHES_st_stm32_rng 1
#define DT_N_S_soc_S_rng_50060800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rng_50060800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rng_50060800_P_reg {1342572544 /* 0x50060800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_0 1342572544
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rng_50060800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, reg, 0) \
	fn(DT_N_S_soc_S_rng_50060800, reg, 1)
#define DT_N_S_soc_S_rng_50060800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_label "RNG"
#define DT_N_S_soc_S_rng_50060800_P_label_STRING_TOKEN RNG
#define DT_N_S_soc_S_rng_50060800_P_label_STRING_UPPER_TOKEN RNG
#define DT_N_S_soc_S_rng_50060800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, label, 0) \
	fn(DT_N_S_soc_S_rng_50060800, label, 1) \
	fn(DT_N_S_soc_S_rng_50060800, label, 2)
#define DT_N_S_soc_S_rng_50060800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, label, 2, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_label_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bus 52
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_rng_50060800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, clocks, 0)
#define DT_N_S_soc_S_rng_50060800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_clocks_LEN 1
#define DT_N_S_soc_S_rng_50060800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_status "disabled"
#define DT_N_S_soc_S_rng_50060800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rng_50060800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rng_50060800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_rng_50060800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rng_50060800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rng_50060800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, status, 0) \
	fn(DT_N_S_soc_S_rng_50060800, status, 1) \
	fn(DT_N_S_soc_S_rng_50060800, status, 2) \
	fn(DT_N_S_soc_S_rng_50060800, status, 3) \
	fn(DT_N_S_soc_S_rng_50060800, status, 4) \
	fn(DT_N_S_soc_S_rng_50060800, status, 5) \
	fn(DT_N_S_soc_S_rng_50060800, status, 6) \
	fn(DT_N_S_soc_S_rng_50060800, status, 7)
#define DT_N_S_soc_S_rng_50060800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_status_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_compatible {"st,stm32-rng"}
#define DT_N_S_soc_S_rng_50060800_P_compatible_IDX_0 "st,stm32-rng"
#define DT_N_S_soc_S_rng_50060800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, compatible, 0)
#define DT_N_S_soc_S_rng_50060800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_compatible_LEN 1
#define DT_N_S_soc_S_rng_50060800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_interrupts {80 /* 0x50 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_0 80
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rng_50060800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rng_50060800, interrupts, 0) \
	fn(DT_N_S_soc_S_rng_50060800, interrupts, 1)
#define DT_N_S_soc_S_rng_50060800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rng_50060800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rng_50060800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rng_50060800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rng_50060800_P_wakeup_source 0
#define DT_N_S_soc_S_rng_50060800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/rtc@40002800
 *
 * Node identifier: DT_N_S_soc_S_rtc_40002800
 *
 * Binding (compatible = st,stm32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/rtc/st,stm32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_40002800_PATH "/soc/rtc@40002800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_40002800_FULL_NAME "rtc@40002800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_40002800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_40002800_CHILD_IDX 24
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_40002800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_40002800_ORD 85

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_40002800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_40002800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_40002800_EXISTS 1
#define DT_N_INST_0_st_stm32_rtc DT_N_S_soc_S_rtc_40002800
#define DT_N_NODELABEL_rtc       DT_N_S_soc_S_rtc_40002800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_40002800_REG_NUM 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_ADDRESS 1073752064 /* 0x40002800 */
#define DT_N_S_soc_S_rtc_40002800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_rtc_40002800_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_40002800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_40002800_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_40002800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_COMPAT_MATCHES_st_stm32_rtc 1
#define DT_N_S_soc_S_rtc_40002800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_40002800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_40002800_P_reg {1073752064 /* 0x40002800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0 1073752064
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_rtc_40002800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, reg, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1)
#define DT_N_S_soc_S_rtc_40002800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_label "RTC_0"
#define DT_N_S_soc_S_rtc_40002800_P_label_STRING_TOKEN RTC_0
#define DT_N_S_soc_S_rtc_40002800_P_label_STRING_UPPER_TOKEN RTC_0
#define DT_N_S_soc_S_rtc_40002800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, label, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 3) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 4)
#define DT_N_S_soc_S_rtc_40002800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_label_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_prescaler 32768
#define DT_N_S_soc_S_rtc_40002800_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_status "okay"
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_40002800_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, status, 0) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3)
#define DT_N_S_soc_S_rtc_40002800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_rtc_40002800, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible {"st,stm32-rtc"}
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0 "st,stm32-rtc"
#define DT_N_S_soc_S_rtc_40002800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits 268435456
#define DT_N_S_soc_S_rtc_40002800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_40002800_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_40002800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_40002800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/sdmmc@40012c00
 *
 * Node identifier: DT_N_S_soc_S_sdmmc_40012c00
 *
 * Binding (compatible = st,stm32-sdmmc):
 *   $ZEPHYR_BASE/dts/bindings/mmc/st,stm32-sdmmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdmmc_40012c00_PATH "/soc/sdmmc@40012c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdmmc_40012c00_FULL_NAME "sdmmc@40012c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdmmc_40012c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdmmc_40012c00_CHILD_IDX 28
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdmmc_40012c00_ORD 86

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdmmc_40012c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdmmc_40012c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdmmc_40012c00_EXISTS 1
#define DT_N_INST_0_st_stm32_sdmmc DT_N_S_soc_S_sdmmc_40012c00
#define DT_N_NODELABEL_sdmmc1      DT_N_S_soc_S_sdmmc_40012c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdmmc_40012c00_REG_NUM 1
#define DT_N_S_soc_S_sdmmc_40012c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_REG_IDX_0_VAL_ADDRESS 1073818624 /* 0x40012c00 */
#define DT_N_S_soc_S_sdmmc_40012c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_sdmmc_40012c00_RANGES_NUM 0
#define DT_N_S_soc_S_sdmmc_40012c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_NUM 1
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdmmc_40012c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_COMPAT_MATCHES_st_stm32_sdmmc 1
#define DT_N_S_soc_S_sdmmc_40012c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdmmc_40012c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 0)
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_LEN 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_label "SDMMC_1"
#define DT_N_S_soc_S_sdmmc_40012c00_P_label_STRING_TOKEN SDMMC_1
#define DT_N_S_soc_S_sdmmc_40012c00_P_label_STRING_UPPER_TOKEN SDMMC_1
#define DT_N_S_soc_S_sdmmc_40012c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, label, 0) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 1) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 2) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 3) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 4) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 5) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 6)
#define DT_N_S_soc_S_sdmmc_40012c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_label_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg {1073818624 /* 0x40012c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_IDX_0 1073818624
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, reg, 0) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, reg, 1)
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_status "disabled"
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, status, 0) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 1) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 2) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 3) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 4) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 5) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 6) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 7)
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_status_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible {"st,stm32-sdmmc"}
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_IDX_0 "st,stm32-sdmmc"
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, compatible, 0)
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_LEN 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts {49 /* 0x31 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_IDX_0 49
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdmmc_40012c00, interrupts, 0) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, interrupts, 1)
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdmmc_40012c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sdmmc_40012c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sdmmc_40012c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdmmc_40012c00_P_wakeup_source 0
#define DT_N_S_soc_S_sdmmc_40012c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004400
 *
 * Node identifier: DT_N_S_soc_S_serial_40004400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004400_PATH "/soc/serial@40004400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004400_FULL_NAME "serial@40004400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004400_CHILD_IDX 9
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004400_ORD 87

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004400_EXISTS 1
#define DT_N_INST_1_st_stm32_usart DT_N_S_soc_S_serial_40004400
#define DT_N_INST_1_st_stm32_uart  DT_N_S_soc_S_serial_40004400
#define DT_N_NODELABEL_usart2      DT_N_S_soc_S_serial_40004400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004400_REG_NUM 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_ADDRESS 1073759232 /* 0x40004400 */
#define DT_N_S_soc_S_serial_40004400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq 38
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004400_P_reg {1073759232 /* 0x40004400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0 1073759232
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004400, reg, 1)
#define DT_N_S_soc_S_serial_40004400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts {38 /* 0x26 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0 38
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004400, interrupts, 1)
#define DT_N_S_soc_S_serial_40004400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_single_wire 0
#define DT_N_S_soc_S_serial_40004400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004400_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_label "UART_2"
#define DT_N_S_soc_S_serial_40004400_P_label_STRING_TOKEN UART_2
#define DT_N_S_soc_S_serial_40004400_P_label_STRING_UPPER_TOKEN UART_2
#define DT_N_S_soc_S_serial_40004400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, label, 0) \
	fn(DT_N_S_soc_S_serial_40004400, label, 1) \
	fn(DT_N_S_soc_S_serial_40004400, label, 2) \
	fn(DT_N_S_soc_S_serial_40004400, label, 3) \
	fn(DT_N_S_soc_S_serial_40004400, label, 4) \
	fn(DT_N_S_soc_S_serial_40004400, label, 5)
#define DT_N_S_soc_S_serial_40004400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_status "disabled"
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40004400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, status, 0) \
	fn(DT_N_S_soc_S_serial_40004400, status, 1) \
	fn(DT_N_S_soc_S_serial_40004400, status, 2) \
	fn(DT_N_S_soc_S_serial_40004400, status, 3) \
	fn(DT_N_S_soc_S_serial_40004400, status, 4) \
	fn(DT_N_S_soc_S_serial_40004400, status, 5) \
	fn(DT_N_S_soc_S_serial_40004400, status, 6) \
	fn(DT_N_S_soc_S_serial_40004400, status, 7)
#define DT_N_S_soc_S_serial_40004400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1)
#define DT_N_S_soc_S_serial_40004400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_serial_40004400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004400, clocks, 0)
#define DT_N_S_soc_S_serial_40004400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004800
 *
 * Node identifier: DT_N_S_soc_S_serial_40004800
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004800_PATH "/soc/serial@40004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004800_FULL_NAME "serial@40004800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004800_CHILD_IDX 34
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004800_ORD 88

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004800_EXISTS 1
#define DT_N_INST_3_st_stm32_usart DT_N_S_soc_S_serial_40004800
#define DT_N_INST_3_st_stm32_uart  DT_N_S_soc_S_serial_40004800
#define DT_N_NODELABEL_usart3      DT_N_S_soc_S_serial_40004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004800_REG_NUM 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_ADDRESS 1073760256 /* 0x40004800 */
#define DT_N_S_soc_S_serial_40004800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40004800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004800_P_reg {1073760256 /* 0x40004800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0 1073760256
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004800, reg, 1)
#define DT_N_S_soc_S_serial_40004800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004800, interrupts, 1)
#define DT_N_S_soc_S_serial_40004800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_single_wire 0
#define DT_N_S_soc_S_serial_40004800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40004800_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004800_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_label "UART_3"
#define DT_N_S_soc_S_serial_40004800_P_label_STRING_TOKEN UART_3
#define DT_N_S_soc_S_serial_40004800_P_label_STRING_UPPER_TOKEN UART_3
#define DT_N_S_soc_S_serial_40004800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, label, 0) \
	fn(DT_N_S_soc_S_serial_40004800, label, 1) \
	fn(DT_N_S_soc_S_serial_40004800, label, 2) \
	fn(DT_N_S_soc_S_serial_40004800, label, 3) \
	fn(DT_N_S_soc_S_serial_40004800, label, 4) \
	fn(DT_N_S_soc_S_serial_40004800, label, 5)
#define DT_N_S_soc_S_serial_40004800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_status "disabled"
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40004800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, status, 0) \
	fn(DT_N_S_soc_S_serial_40004800, status, 1) \
	fn(DT_N_S_soc_S_serial_40004800, status, 2) \
	fn(DT_N_S_soc_S_serial_40004800, status, 3) \
	fn(DT_N_S_soc_S_serial_40004800, status, 4) \
	fn(DT_N_S_soc_S_serial_40004800, status, 5) \
	fn(DT_N_S_soc_S_serial_40004800, status, 6) \
	fn(DT_N_S_soc_S_serial_40004800, status, 7)
#define DT_N_S_soc_S_serial_40004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004800_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1)
#define DT_N_S_soc_S_serial_40004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004800, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_serial_40004800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004800, clocks, 0)
#define DT_N_S_soc_S_serial_40004800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40004c00
 *
 * Node identifier: DT_N_S_soc_S_serial_40004c00
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40004c00_PATH "/soc/serial@40004c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40004c00_FULL_NAME "serial@40004c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40004c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40004c00_CHILD_IDX 35
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40004c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40004c00_ORD 89

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40004c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40004c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40004c00_EXISTS 1
#define DT_N_INST_4_st_stm32_uart DT_N_S_soc_S_serial_40004c00
#define DT_N_NODELABEL_uart4      DT_N_S_soc_S_serial_40004c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40004c00_REG_NUM 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_ADDRESS 1073761280 /* 0x40004c00 */
#define DT_N_S_soc_S_serial_40004c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40004c00_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40004c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40004c00_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40004c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40004c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40004c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40004c00_P_reg {1073761280 /* 0x40004c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0 1073761280
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40004c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, reg, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, reg, 1)
#define DT_N_S_soc_S_serial_40004c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts {52 /* 0x34 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0 52
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, interrupts, 1)
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_single_wire 0
#define DT_N_S_soc_S_serial_40004c00_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert 0
#define DT_N_S_soc_S_serial_40004c00_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_label "UART_4"
#define DT_N_S_soc_S_serial_40004c00_P_label_STRING_TOKEN UART_4
#define DT_N_S_soc_S_serial_40004c00_P_label_STRING_UPPER_TOKEN UART_4
#define DT_N_S_soc_S_serial_40004c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, label, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 1) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 2) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 3) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 4) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 5)
#define DT_N_S_soc_S_serial_40004c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40004c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_status "disabled"
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40004c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40004c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, status, 0) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 1) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 2) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 3) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 4) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 5) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 6) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 7)
#define DT_N_S_soc_S_serial_40004c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40004c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40004c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits 524288
#define DT_N_S_soc_S_serial_40004c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40004c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40004c00_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40004c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40004c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40005000
 *
 * Node identifier: DT_N_S_soc_S_serial_40005000
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40005000_PATH "/soc/serial@40005000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40005000_FULL_NAME "serial@40005000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40005000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40005000_CHILD_IDX 36
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40005000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40005000_ORD 90

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40005000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40005000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40005000_EXISTS 1
#define DT_N_INST_5_st_stm32_uart DT_N_S_soc_S_serial_40005000
#define DT_N_NODELABEL_uart5      DT_N_S_soc_S_serial_40005000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40005000_REG_NUM 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_ADDRESS 1073762304 /* 0x40005000 */
#define DT_N_S_soc_S_serial_40005000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40005000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40005000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40005000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40005000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40005000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40005000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40005000_P_reg {1073762304 /* 0x40005000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0 1073762304
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40005000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, reg, 0) \
	fn(DT_N_S_soc_S_serial_40005000, reg, 1)
#define DT_N_S_soc_S_serial_40005000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40005000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40005000, interrupts, 1)
#define DT_N_S_soc_S_serial_40005000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_single_wire 0
#define DT_N_S_soc_S_serial_40005000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40005000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_label "UART_5"
#define DT_N_S_soc_S_serial_40005000_P_label_STRING_TOKEN UART_5
#define DT_N_S_soc_S_serial_40005000_P_label_STRING_UPPER_TOKEN UART_5
#define DT_N_S_soc_S_serial_40005000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, label, 0) \
	fn(DT_N_S_soc_S_serial_40005000, label, 1) \
	fn(DT_N_S_soc_S_serial_40005000, label, 2) \
	fn(DT_N_S_soc_S_serial_40005000, label, 3) \
	fn(DT_N_S_soc_S_serial_40005000, label, 4) \
	fn(DT_N_S_soc_S_serial_40005000, label, 5)
#define DT_N_S_soc_S_serial_40005000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40005000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_status "disabled"
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40005000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40005000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, status, 0) \
	fn(DT_N_S_soc_S_serial_40005000, status, 1) \
	fn(DT_N_S_soc_S_serial_40005000, status, 2) \
	fn(DT_N_S_soc_S_serial_40005000, status, 3) \
	fn(DT_N_S_soc_S_serial_40005000, status, 4) \
	fn(DT_N_S_soc_S_serial_40005000, status, 5) \
	fn(DT_N_S_soc_S_serial_40005000, status, 6) \
	fn(DT_N_S_soc_S_serial_40005000, status, 7)
#define DT_N_S_soc_S_serial_40005000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40005000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40005000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, compatible, 0)
#define DT_N_S_soc_S_serial_40005000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_serial_40005000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40005000, clocks, 0)
#define DT_N_S_soc_S_serial_40005000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40005000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40005000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40005000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40005000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40007800
 *
 * Node identifier: DT_N_S_soc_S_serial_40007800
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40007800_PATH "/soc/serial@40007800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40007800_FULL_NAME "serial@40007800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40007800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40007800_CHILD_IDX 52
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40007800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40007800_ORD 91

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40007800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40007800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40007800_EXISTS 1
#define DT_N_INST_6_st_stm32_uart DT_N_S_soc_S_serial_40007800
#define DT_N_NODELABEL_uart7      DT_N_S_soc_S_serial_40007800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40007800_REG_NUM 1
#define DT_N_S_soc_S_serial_40007800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_REG_IDX_0_VAL_ADDRESS 1073772544 /* 0x40007800 */
#define DT_N_S_soc_S_serial_40007800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40007800_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40007800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40007800_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_VAL_irq 82
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40007800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40007800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40007800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40007800_P_reg {1073772544 /* 0x40007800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40007800_P_reg_IDX_0 1073772544
#define DT_N_S_soc_S_serial_40007800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40007800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, reg, 0) \
	fn(DT_N_S_soc_S_serial_40007800, reg, 1)
#define DT_N_S_soc_S_serial_40007800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_interrupts {82 /* 0x52 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40007800_P_interrupts_IDX_0 82
#define DT_N_S_soc_S_serial_40007800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40007800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40007800, interrupts, 1)
#define DT_N_S_soc_S_serial_40007800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_single_wire 0
#define DT_N_S_soc_S_serial_40007800_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_tx_invert 0
#define DT_N_S_soc_S_serial_40007800_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_rx_invert 0
#define DT_N_S_soc_S_serial_40007800_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_label "UART_7"
#define DT_N_S_soc_S_serial_40007800_P_label_STRING_TOKEN UART_7
#define DT_N_S_soc_S_serial_40007800_P_label_STRING_UPPER_TOKEN UART_7
#define DT_N_S_soc_S_serial_40007800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, label, 0) \
	fn(DT_N_S_soc_S_serial_40007800, label, 1) \
	fn(DT_N_S_soc_S_serial_40007800, label, 2) \
	fn(DT_N_S_soc_S_serial_40007800, label, 3) \
	fn(DT_N_S_soc_S_serial_40007800, label, 4) \
	fn(DT_N_S_soc_S_serial_40007800, label, 5)
#define DT_N_S_soc_S_serial_40007800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40007800_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_status "disabled"
#define DT_N_S_soc_S_serial_40007800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40007800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40007800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40007800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40007800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40007800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, status, 0) \
	fn(DT_N_S_soc_S_serial_40007800, status, 1) \
	fn(DT_N_S_soc_S_serial_40007800, status, 2) \
	fn(DT_N_S_soc_S_serial_40007800, status, 3) \
	fn(DT_N_S_soc_S_serial_40007800, status, 4) \
	fn(DT_N_S_soc_S_serial_40007800, status, 5) \
	fn(DT_N_S_soc_S_serial_40007800, status, 6) \
	fn(DT_N_S_soc_S_serial_40007800, status, 7)
#define DT_N_S_soc_S_serial_40007800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40007800_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40007800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, compatible, 0)
#define DT_N_S_soc_S_serial_40007800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40007800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_VAL_bits 1073741824
#define DT_N_S_soc_S_serial_40007800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007800, clocks, 0)
#define DT_N_S_soc_S_serial_40007800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007800_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40007800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40007800_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40007800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40007c00
 *
 * Node identifier: DT_N_S_soc_S_serial_40007c00
 *
 * Binding (compatible = st,stm32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40007c00_PATH "/soc/serial@40007c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40007c00_FULL_NAME "serial@40007c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40007c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40007c00_CHILD_IDX 53
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40007c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40007c00_ORD 92

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40007c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40007c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40007c00_EXISTS 1
#define DT_N_INST_7_st_stm32_uart DT_N_S_soc_S_serial_40007c00
#define DT_N_NODELABEL_uart8      DT_N_S_soc_S_serial_40007c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40007c00_REG_NUM 1
#define DT_N_S_soc_S_serial_40007c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_REG_IDX_0_VAL_ADDRESS 1073773568 /* 0x40007c00 */
#define DT_N_S_soc_S_serial_40007c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40007c00_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40007c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40007c00_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_VAL_irq 83
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40007c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40007c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40007c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40007c00_P_reg {1073773568 /* 0x40007c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40007c00_P_reg_IDX_0 1073773568
#define DT_N_S_soc_S_serial_40007c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40007c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, reg, 0) \
	fn(DT_N_S_soc_S_serial_40007c00, reg, 1)
#define DT_N_S_soc_S_serial_40007c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_interrupts {83 /* 0x53 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_IDX_0 83
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40007c00, interrupts, 1)
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_single_wire 0
#define DT_N_S_soc_S_serial_40007c00_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_tx_invert 0
#define DT_N_S_soc_S_serial_40007c00_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_rx_invert 0
#define DT_N_S_soc_S_serial_40007c00_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_label "UART_8"
#define DT_N_S_soc_S_serial_40007c00_P_label_STRING_TOKEN UART_8
#define DT_N_S_soc_S_serial_40007c00_P_label_STRING_UPPER_TOKEN UART_8
#define DT_N_S_soc_S_serial_40007c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, label, 0) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 1) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 2) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 3) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 4) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 5)
#define DT_N_S_soc_S_serial_40007c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40007c00_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_status "disabled"
#define DT_N_S_soc_S_serial_40007c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40007c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40007c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40007c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40007c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40007c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, status, 0) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 1) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 2) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 3) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 4) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 5) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 6) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 7)
#define DT_N_S_soc_S_serial_40007c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40007c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_compatible {"st,stm32-uart"}
#define DT_N_S_soc_S_serial_40007c00_P_compatible_IDX_0 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40007c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, compatible, 0)
#define DT_N_S_soc_S_serial_40007c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_compatible_LEN 1
#define DT_N_S_soc_S_serial_40007c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_VAL_bits 2147483648
#define DT_N_S_soc_S_serial_40007c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40007c00, clocks, 0)
#define DT_N_S_soc_S_serial_40007c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40007c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40007c00_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40007c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40007c00_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40007c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_rx_pa10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_PATH "/soc/pin-controller@40020000/usart1_rx_pa10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FULL_NAME "usart1_rx_pa10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_CHILD_IDX 83
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_ORD 93

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_SUPPORTS_ORDS \
	95, /* /soc/serial@40011000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_EXISTS 1
#define DT_N_NODELABEL_usart1_rx_pa10 DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_pinmux 327
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/usart1_tx_pa9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_PATH "/soc/pin-controller@40020000/usart1_tx_pa9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FULL_NAME "usart1_tx_pa9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_CHILD_IDX 84
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_ORD 94

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_SUPPORTS_ORDS \
	95, /* /soc/serial@40011000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_EXISTS 1
#define DT_N_NODELABEL_usart1_tx_pa9 DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_pinmux 295
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/serial@40011000
 *
 * Node identifier: DT_N_S_soc_S_serial_40011000
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40011000_PATH "/soc/serial@40011000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40011000_FULL_NAME "serial@40011000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40011000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40011000_CHILD_IDX 8
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40011000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40011000_ORD 95

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40011000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	93, /* /soc/pin-controller@40020000/usart1_rx_pa10 */ \
	94, /* /soc/pin-controller@40020000/usart1_tx_pa9 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40011000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40011000_EXISTS 1
#define DT_N_INST_0_st_stm32_usart DT_N_S_soc_S_serial_40011000
#define DT_N_INST_0_st_stm32_uart  DT_N_S_soc_S_serial_40011000
#define DT_N_NODELABEL_usart1      DT_N_S_soc_S_serial_40011000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40011000_REG_NUM 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_ADDRESS 1073811456 /* 0x40011000 */
#define DT_N_S_soc_S_serial_40011000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40011000_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40011000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40011000_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40011000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40011000_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40011000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40011000_PINCTRL_NUM 1
#define DT_N_S_soc_S_serial_40011000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_serial_40011000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_serial_40011000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_serial_40011000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9
#define DT_N_S_soc_S_serial_40011000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40011000_P_reg {1073811456 /* 0x40011000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0 1073811456
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40011000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, reg, 0) \
	fn(DT_N_S_soc_S_serial_40011000, reg, 1)
#define DT_N_S_soc_S_serial_40011000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40011000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40011000, interrupts, 1)
#define DT_N_S_soc_S_serial_40011000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_single_wire 0
#define DT_N_S_soc_S_serial_40011000_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40011000_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_tx_invert 0
#define DT_N_S_soc_S_serial_40011000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_rx_invert 0
#define DT_N_S_soc_S_serial_40011000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_usart1_tx_pa9
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_usart1_rx_pa10
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_serial_40011000, pinctrl_0, 1)
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, pinctrl_0, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_LEN 2
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, pinctrl_names, 0)
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_current_speed 115200
#define DT_N_S_soc_S_serial_40011000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_label "UART_1"
#define DT_N_S_soc_S_serial_40011000_P_label_STRING_TOKEN UART_1
#define DT_N_S_soc_S_serial_40011000_P_label_STRING_UPPER_TOKEN UART_1
#define DT_N_S_soc_S_serial_40011000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, label, 0) \
	fn(DT_N_S_soc_S_serial_40011000, label, 1) \
	fn(DT_N_S_soc_S_serial_40011000, label, 2) \
	fn(DT_N_S_soc_S_serial_40011000, label, 3) \
	fn(DT_N_S_soc_S_serial_40011000, label, 4) \
	fn(DT_N_S_soc_S_serial_40011000, label, 5)
#define DT_N_S_soc_S_serial_40011000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40011000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_status "okay"
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_serial_40011000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_serial_40011000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, status, 0) \
	fn(DT_N_S_soc_S_serial_40011000, status, 1) \
	fn(DT_N_S_soc_S_serial_40011000, status, 2) \
	fn(DT_N_S_soc_S_serial_40011000, status, 3)
#define DT_N_S_soc_S_serial_40011000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40011000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40011000, compatible, 1)
#define DT_N_S_soc_S_serial_40011000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40011000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_serial_40011000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011000, clocks, 0)
#define DT_N_S_soc_S_serial_40011000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011000_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40011000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40011000_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40011000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/serial@40011400
 *
 * Node identifier: DT_N_S_soc_S_serial_40011400
 *
 * Binding (compatible = st,stm32-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/st,stm32-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_serial_40011400_PATH "/soc/serial@40011400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_serial_40011400_FULL_NAME "serial@40011400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_serial_40011400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_serial_40011400_CHILD_IDX 10
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_serial_40011400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_serial_40011400_ORD 96

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_serial_40011400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_serial_40011400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_serial_40011400_EXISTS 1
#define DT_N_INST_2_st_stm32_usart DT_N_S_soc_S_serial_40011400
#define DT_N_INST_2_st_stm32_uart  DT_N_S_soc_S_serial_40011400
#define DT_N_NODELABEL_usart6      DT_N_S_soc_S_serial_40011400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_serial_40011400_REG_NUM 1
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_VAL_ADDRESS 1073812480 /* 0x40011400 */
#define DT_N_S_soc_S_serial_40011400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_serial_40011400_RANGES_NUM 0
#define DT_N_S_soc_S_serial_40011400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_serial_40011400_IRQ_NUM 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_irq 71
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_serial_40011400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_MATCHES_st_stm32_usart 1
#define DT_N_S_soc_S_serial_40011400_COMPAT_MATCHES_st_stm32_uart 1
#define DT_N_S_soc_S_serial_40011400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_serial_40011400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_serial_40011400_P_reg {1073812480 /* 0x40011400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_0 1073812480
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_serial_40011400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, reg, 0) \
	fn(DT_N_S_soc_S_serial_40011400, reg, 1)
#define DT_N_S_soc_S_serial_40011400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_reg_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts {71 /* 0x47 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_0 71
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_serial_40011400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, interrupts, 0) \
	fn(DT_N_S_soc_S_serial_40011400, interrupts, 1)
#define DT_N_S_soc_S_serial_40011400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_single_wire 0
#define DT_N_S_soc_S_serial_40011400_P_single_wire_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_tx_rx_swap 0
#define DT_N_S_soc_S_serial_40011400_P_tx_rx_swap_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_tx_invert 0
#define DT_N_S_soc_S_serial_40011400_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_rx_invert 0
#define DT_N_S_soc_S_serial_40011400_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_label "UART_6"
#define DT_N_S_soc_S_serial_40011400_P_label_STRING_TOKEN UART_6
#define DT_N_S_soc_S_serial_40011400_P_label_STRING_UPPER_TOKEN UART_6
#define DT_N_S_soc_S_serial_40011400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, label, 0) \
	fn(DT_N_S_soc_S_serial_40011400, label, 1) \
	fn(DT_N_S_soc_S_serial_40011400, label, 2) \
	fn(DT_N_S_soc_S_serial_40011400, label, 3) \
	fn(DT_N_S_soc_S_serial_40011400, label, 4) \
	fn(DT_N_S_soc_S_serial_40011400, label, 5)
#define DT_N_S_soc_S_serial_40011400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_label_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_hw_flow_control 0
#define DT_N_S_soc_S_serial_40011400_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_status "disabled"
#define DT_N_S_soc_S_serial_40011400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_serial_40011400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_serial_40011400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_serial_40011400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, status, 0) \
	fn(DT_N_S_soc_S_serial_40011400, status, 1) \
	fn(DT_N_S_soc_S_serial_40011400, status, 2) \
	fn(DT_N_S_soc_S_serial_40011400, status, 3) \
	fn(DT_N_S_soc_S_serial_40011400, status, 4) \
	fn(DT_N_S_soc_S_serial_40011400, status, 5) \
	fn(DT_N_S_soc_S_serial_40011400, status, 6) \
	fn(DT_N_S_soc_S_serial_40011400, status, 7)
#define DT_N_S_soc_S_serial_40011400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_status_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible {"st,stm32-usart", "st,stm32-uart"}
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0 "st,stm32-usart"
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1 "st,stm32-uart"
#define DT_N_S_soc_S_serial_40011400_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, compatible, 0) \
	fn(DT_N_S_soc_S_serial_40011400, compatible, 1)
#define DT_N_S_soc_S_serial_40011400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_serial_40011400, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_compatible_LEN 2
#define DT_N_S_soc_S_serial_40011400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_serial_40011400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_serial_40011400, clocks, 0)
#define DT_N_S_soc_S_serial_40011400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_serial_40011400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_serial_40011400_P_clocks_LEN 1
#define DT_N_S_soc_S_serial_40011400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_serial_40011400_P_wakeup_source 0
#define DT_N_S_soc_S_serial_40011400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003800
 *
 * Node identifier: DT_N_S_soc_S_spi_40003800
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003800_PATH "/soc/spi@40003800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003800_FULL_NAME "spi@40003800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003800_CHILD_IDX 29
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003800_ORD 97

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003800_EXISTS 1
#define DT_N_INST_2_st_stm32_spi DT_N_S_soc_S_spi_40003800
#define DT_N_NODELABEL_spi2      DT_N_S_soc_S_spi_40003800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003800_REG_NUM 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_ADDRESS 1073756160 /* 0x40003800 */
#define DT_N_S_soc_S_spi_40003800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003800_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003800_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq 36
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003800_P_reg {1073756160 /* 0x40003800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0 1073756160
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1)
#define DT_N_S_soc_S_spi_40003800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts {36 /* 0x24 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0 36
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_label "SPI_2"
#define DT_N_S_soc_S_spi_40003800_P_label_STRING_TOKEN SPI_2
#define DT_N_S_soc_S_spi_40003800_P_label_STRING_UPPER_TOKEN SPI_2
#define DT_N_S_soc_S_spi_40003800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, label, 0) \
	fn(DT_N_S_soc_S_spi_40003800, label, 1) \
	fn(DT_N_S_soc_S_spi_40003800, label, 2) \
	fn(DT_N_S_soc_S_spi_40003800, label, 3) \
	fn(DT_N_S_soc_S_spi_40003800, label, 4)
#define DT_N_S_soc_S_spi_40003800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_status "disabled"
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, status, 0) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7)
#define DT_N_S_soc_S_spi_40003800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, compatible, 0)
#define DT_N_S_soc_S_spi_40003800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits 16384
#define DT_N_S_soc_S_spi_40003800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003800, clocks, 0)
#define DT_N_S_soc_S_spi_40003800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003800_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40003c00
 *
 * Node identifier: DT_N_S_soc_S_spi_40003c00
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40003c00_PATH "/soc/spi@40003c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40003c00_FULL_NAME "spi@40003c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40003c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40003c00_CHILD_IDX 30
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40003c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40003c00_ORD 98

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40003c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40003c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40003c00_EXISTS 1
#define DT_N_INST_3_st_stm32_spi DT_N_S_soc_S_spi_40003c00
#define DT_N_NODELABEL_spi3      DT_N_S_soc_S_spi_40003c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40003c00_REG_NUM 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_ADDRESS 1073757184 /* 0x40003c00 */
#define DT_N_S_soc_S_spi_40003c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40003c00_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40003c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40003c00_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40003c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40003c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40003c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40003c00_P_reg {1073757184 /* 0x40003c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0 1073757184
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40003c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, reg, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, reg, 1)
#define DT_N_S_soc_S_spi_40003c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts {51 /* 0x33 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, interrupts, 1)
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_label "SPI_3"
#define DT_N_S_soc_S_spi_40003c00_P_label_STRING_TOKEN SPI_3
#define DT_N_S_soc_S_spi_40003c00_P_label_STRING_UPPER_TOKEN SPI_3
#define DT_N_S_soc_S_spi_40003c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, label, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 1) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 2) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 3) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 4)
#define DT_N_S_soc_S_spi_40003c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_status "disabled"
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40003c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, status, 0) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 1) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 2) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 3) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 4) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 5) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 6) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 7)
#define DT_N_S_soc_S_spi_40003c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40003c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40003c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits 32768
#define DT_N_S_soc_S_spi_40003c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40003c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40003c00_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40003c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40003c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013000
 *
 * Node identifier: DT_N_S_soc_S_spi_40013000
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013000_PATH "/soc/spi@40013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013000_FULL_NAME "spi@40013000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013000_CHILD_IDX 14
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013000_ORD 99

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013000_EXISTS 1
#define DT_N_INST_1_st_stm32_spi DT_N_S_soc_S_spi_40013000
#define DT_N_NODELABEL_spi1      DT_N_S_soc_S_spi_40013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013000_REG_NUM 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_ADDRESS 1073819648 /* 0x40013000 */
#define DT_N_S_soc_S_spi_40013000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq 35
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013000_P_reg {1073819648 /* 0x40013000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0 1073819648
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1)
#define DT_N_S_soc_S_spi_40013000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts {35 /* 0x23 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0 35
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_label "SPI_1"
#define DT_N_S_soc_S_spi_40013000_P_label_STRING_TOKEN SPI_1
#define DT_N_S_soc_S_spi_40013000_P_label_STRING_UPPER_TOKEN SPI_1
#define DT_N_S_soc_S_spi_40013000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, label, 0) \
	fn(DT_N_S_soc_S_spi_40013000, label, 1) \
	fn(DT_N_S_soc_S_spi_40013000, label, 2) \
	fn(DT_N_S_soc_S_spi_40013000, label, 3) \
	fn(DT_N_S_soc_S_spi_40013000, label, 4)
#define DT_N_S_soc_S_spi_40013000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_status "disabled"
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, status, 0) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3) \
	fn(DT_N_S_soc_S_spi_40013000, status, 4) \
	fn(DT_N_S_soc_S_spi_40013000, status, 5) \
	fn(DT_N_S_soc_S_spi_40013000, status, 6) \
	fn(DT_N_S_soc_S_spi_40013000, status, 7)
#define DT_N_S_soc_S_spi_40013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, compatible, 0)
#define DT_N_S_soc_S_spi_40013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits 4096
#define DT_N_S_soc_S_spi_40013000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013000, clocks, 0)
#define DT_N_S_soc_S_spi_40013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40013400
 *
 * Node identifier: DT_N_S_soc_S_spi_40013400
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40013400_PATH "/soc/spi@40013400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40013400_FULL_NAME "spi@40013400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40013400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40013400_CHILD_IDX 31
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40013400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40013400_ORD 100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40013400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40013400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40013400_EXISTS 1
#define DT_N_INST_4_st_stm32_spi DT_N_S_soc_S_spi_40013400
#define DT_N_NODELABEL_spi4      DT_N_S_soc_S_spi_40013400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40013400_REG_NUM 1
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_VAL_ADDRESS 1073820672 /* 0x40013400 */
#define DT_N_S_soc_S_spi_40013400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40013400_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40013400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40013400_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_irq 84
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40013400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40013400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40013400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40013400_P_reg {1073820672 /* 0x40013400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_0 1073820672
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40013400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, reg, 0) \
	fn(DT_N_S_soc_S_spi_40013400, reg, 1)
#define DT_N_S_soc_S_spi_40013400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts {84 /* 0x54 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_0 84
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40013400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40013400, interrupts, 1)
#define DT_N_S_soc_S_spi_40013400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_label "SPI_4"
#define DT_N_S_soc_S_spi_40013400_P_label_STRING_TOKEN SPI_4
#define DT_N_S_soc_S_spi_40013400_P_label_STRING_UPPER_TOKEN SPI_4
#define DT_N_S_soc_S_spi_40013400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, label, 0) \
	fn(DT_N_S_soc_S_spi_40013400, label, 1) \
	fn(DT_N_S_soc_S_spi_40013400, label, 2) \
	fn(DT_N_S_soc_S_spi_40013400, label, 3) \
	fn(DT_N_S_soc_S_spi_40013400, label, 4)
#define DT_N_S_soc_S_spi_40013400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_status "disabled"
#define DT_N_S_soc_S_spi_40013400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40013400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40013400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40013400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, status, 0) \
	fn(DT_N_S_soc_S_spi_40013400, status, 1) \
	fn(DT_N_S_soc_S_spi_40013400, status, 2) \
	fn(DT_N_S_soc_S_spi_40013400, status, 3) \
	fn(DT_N_S_soc_S_spi_40013400, status, 4) \
	fn(DT_N_S_soc_S_spi_40013400, status, 5) \
	fn(DT_N_S_soc_S_spi_40013400, status, 6) \
	fn(DT_N_S_soc_S_spi_40013400, status, 7)
#define DT_N_S_soc_S_spi_40013400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40013400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40013400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, compatible, 0)
#define DT_N_S_soc_S_spi_40013400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40013400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bits 8192
#define DT_N_S_soc_S_spi_40013400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40013400, clocks, 0)
#define DT_N_S_soc_S_spi_40013400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40013400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40013400_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40013400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40013400_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40013400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40015400
 *
 * Node identifier: DT_N_S_soc_S_spi_40015400
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40015400_PATH "/soc/spi@40015400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40015400_FULL_NAME "spi@40015400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40015400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40015400_CHILD_IDX 55
#define DT_N_S_soc_S_spi_40015400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40015400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40015400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40015400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40015400_ORD 101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40015400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40015400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40015400_EXISTS 1
#define DT_N_INST_5_st_stm32_spi DT_N_S_soc_S_spi_40015400
#define DT_N_NODELABEL_spi6      DT_N_S_soc_S_spi_40015400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40015400_REG_NUM 1
#define DT_N_S_soc_S_spi_40015400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_REG_IDX_0_VAL_ADDRESS 1073828864 /* 0x40015400 */
#define DT_N_S_soc_S_spi_40015400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40015400_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40015400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40015400_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40015400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_IRQ_IDX_0_VAL_irq 86
#define DT_N_S_soc_S_spi_40015400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40015400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40015400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40015400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40015400_P_reg {1073828864 /* 0x40015400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40015400_P_reg_IDX_0 1073828864
#define DT_N_S_soc_S_spi_40015400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40015400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015400, reg, 0) \
	fn(DT_N_S_soc_S_spi_40015400, reg, 1)
#define DT_N_S_soc_S_spi_40015400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015400_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_interrupts {86 /* 0x56 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40015400_P_interrupts_IDX_0 86
#define DT_N_S_soc_S_spi_40015400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40015400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015400, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40015400, interrupts, 1)
#define DT_N_S_soc_S_spi_40015400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_label "SPI_6"
#define DT_N_S_soc_S_spi_40015400_P_label_STRING_TOKEN SPI_6
#define DT_N_S_soc_S_spi_40015400_P_label_STRING_UPPER_TOKEN SPI_6
#define DT_N_S_soc_S_spi_40015400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015400, label, 0) \
	fn(DT_N_S_soc_S_spi_40015400, label, 1) \
	fn(DT_N_S_soc_S_spi_40015400, label, 2) \
	fn(DT_N_S_soc_S_spi_40015400, label, 3) \
	fn(DT_N_S_soc_S_spi_40015400, label, 4)
#define DT_N_S_soc_S_spi_40015400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015400_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_status "disabled"
#define DT_N_S_soc_S_spi_40015400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_spi_40015400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40015400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40015400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_spi_40015400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_spi_40015400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015400, status, 0) \
	fn(DT_N_S_soc_S_spi_40015400, status, 1) \
	fn(DT_N_S_soc_S_spi_40015400, status, 2) \
	fn(DT_N_S_soc_S_spi_40015400, status, 3) \
	fn(DT_N_S_soc_S_spi_40015400, status, 4) \
	fn(DT_N_S_soc_S_spi_40015400, status, 5) \
	fn(DT_N_S_soc_S_spi_40015400, status, 6) \
	fn(DT_N_S_soc_S_spi_40015400, status, 7)
#define DT_N_S_soc_S_spi_40015400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015400_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40015400_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40015400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015400, compatible, 0)
#define DT_N_S_soc_S_spi_40015400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015400_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40015400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40015400_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_spi_40015400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_clocks_IDX_0_VAL_bits 2097152
#define DT_N_S_soc_S_spi_40015400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015400, clocks, 0)
#define DT_N_S_soc_S_spi_40015400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015400_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40015400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40015400_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40015400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv7m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv7m_systick 1
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv7m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv7m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, reg, 0) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1)
#define DT_N_S_soc_S_timer_e000e010_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timer_e000e010, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1

/*
 * Devicetree node: /otghs_fs_phy
 *
 * Node identifier: DT_N_S_otghs_fs_phy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_otghs_fs_phy_PATH "/otghs_fs_phy"

/* Node's name with unit-address: */
#define DT_N_S_otghs_fs_phy_FULL_NAME "otghs_fs_phy"

/* Node parent (/) identifier: */
#define DT_N_S_otghs_fs_phy_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_otghs_fs_phy_CHILD_IDX 7
#define DT_N_S_otghs_fs_phy_FOREACH_CHILD(fn) 
#define DT_N_S_otghs_fs_phy_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_otghs_fs_phy_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_otghs_fs_phy_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_otghs_fs_phy_ORD 103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_otghs_fs_phy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_otghs_fs_phy_SUPPORTS_ORDS \
	104, /* /soc/usb@40040000 */

/* Existence and alternate IDs: */
#define DT_N_S_otghs_fs_phy_EXISTS 1
#define DT_N_INST_1_usb_nop_xceiv   DT_N_S_otghs_fs_phy
#define DT_N_NODELABEL_otghs_fs_phy DT_N_S_otghs_fs_phy

/* Macros for properties that are special in the specification: */
#define DT_N_S_otghs_fs_phy_REG_NUM 0
#define DT_N_S_otghs_fs_phy_RANGES_NUM 0
#define DT_N_S_otghs_fs_phy_FOREACH_RANGE(fn) 
#define DT_N_S_otghs_fs_phy_IRQ_NUM 0
#define DT_N_S_otghs_fs_phy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_otghs_fs_phy_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_otghs_fs_phy_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_otghs_fs_phy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_otghs_fs_phy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_otghs_fs_phy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_otghs_fs_phy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otghs_fs_phy, compatible, 0)
#define DT_N_S_otghs_fs_phy_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_otghs_fs_phy, compatible, 0, __VA_ARGS__)
#define DT_N_S_otghs_fs_phy_P_compatible_LEN 1
#define DT_N_S_otghs_fs_phy_P_compatible_EXISTS 1
#define DT_N_S_otghs_fs_phy_P_label "OTGHS_FS_PHY"
#define DT_N_S_otghs_fs_phy_P_label_STRING_TOKEN OTGHS_FS_PHY
#define DT_N_S_otghs_fs_phy_P_label_STRING_UPPER_TOKEN OTGHS_FS_PHY
#define DT_N_S_otghs_fs_phy_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otghs_fs_phy, label, 0) \
	fn(DT_N_S_otghs_fs_phy, label, 1) \
	fn(DT_N_S_otghs_fs_phy, label, 2) \
	fn(DT_N_S_otghs_fs_phy, label, 3) \
	fn(DT_N_S_otghs_fs_phy, label, 4) \
	fn(DT_N_S_otghs_fs_phy, label, 5) \
	fn(DT_N_S_otghs_fs_phy, label, 6) \
	fn(DT_N_S_otghs_fs_phy, label, 7) \
	fn(DT_N_S_otghs_fs_phy, label, 8) \
	fn(DT_N_S_otghs_fs_phy, label, 9) \
	fn(DT_N_S_otghs_fs_phy, label, 10) \
	fn(DT_N_S_otghs_fs_phy, label, 11)
#define DT_N_S_otghs_fs_phy_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_otghs_fs_phy, label, 0, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 1, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 2, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 3, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 4, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 5, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 6, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 7, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 8, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 9, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 10, __VA_ARGS__) \
	fn(DT_N_S_otghs_fs_phy, label, 11, __VA_ARGS__)
#define DT_N_S_otghs_fs_phy_P_label_EXISTS 1
#define DT_N_S_otghs_fs_phy_P_wakeup_source 0
#define DT_N_S_otghs_fs_phy_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/usb@40040000
 *
 * Node identifier: DT_N_S_soc_S_usb_40040000
 *
 * Binding (compatible = st,stm32-otghs):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-otghs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_40040000_PATH "/soc/usb@40040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_40040000_FULL_NAME "usb@40040000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_40040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usb_40040000_CHILD_IDX 43
#define DT_N_S_soc_S_usb_40040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_40040000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_40040000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usb_40040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_40040000_ORD 104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_40040000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	103, /* /otghs_fs_phy */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_40040000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_40040000_EXISTS 1
#define DT_N_INST_0_st_stm32_otghs DT_N_S_soc_S_usb_40040000
#define DT_N_NODELABEL_usbotg_hs   DT_N_S_soc_S_usb_40040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usb_40040000_REG_NUM 1
#define DT_N_S_soc_S_usb_40040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_REG_IDX_0_VAL_ADDRESS 1074003968 /* 0x40040000 */
#define DT_N_S_soc_S_usb_40040000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_usb_40040000_RANGES_NUM 0
#define DT_N_S_soc_S_usb_40040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usb_40040000_IRQ_NUM 3
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_irq 77
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_irq 74
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_irq 75
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_otghs_VAL_irq DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_otghs_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_otghs_VAL_priority DT_N_S_soc_S_usb_40040000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_otghs_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_out_VAL_irq DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_out_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_out_VAL_priority DT_N_S_soc_S_usb_40040000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_out_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_in_VAL_irq DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_in_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_in_VAL_priority DT_N_S_soc_S_usb_40040000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_usb_40040000_IRQ_NAME_ep1_in_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_COMPAT_MATCHES_st_stm32_otghs 1
#define DT_N_S_soc_S_usb_40040000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usb_40040000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usb_40040000_P_reg {1074003968 /* 0x40040000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_usb_40040000_P_reg_IDX_0 1074003968
#define DT_N_S_soc_S_usb_40040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_usb_40040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, reg, 0) \
	fn(DT_N_S_soc_S_usb_40040000, reg, 1)
#define DT_N_S_soc_S_usb_40040000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40040000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts {77 /* 0x4d */, 0 /* 0x0 */, 74 /* 0x4a */, 0 /* 0x0 */, 75 /* 0x4b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_0 77
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_2 74
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_4 75
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_usb_40040000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, interrupts, 0) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 1) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 2) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 3) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 4) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 5)
#define DT_N_S_soc_S_usb_40040000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40040000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, interrupts, 5, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40040000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_ram_size 4096
#define DT_N_S_soc_S_usb_40040000_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_phys DT_N_S_otghs_fs_phy
#define DT_N_S_soc_S_usb_40040000_P_phys_IDX_0 DT_N_S_otghs_fs_phy
#define DT_N_S_soc_S_usb_40040000_P_phys_IDX_0_PH DT_N_S_otghs_fs_phy
#define DT_N_S_soc_S_usb_40040000_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_phys_LEN 1
#define DT_N_S_soc_S_usb_40040000_P_phys_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_VAL_bits 536870912
#define DT_N_S_soc_S_usb_40040000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, clocks, 0)
#define DT_N_S_soc_S_usb_40040000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40040000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40040000_P_clocks_LEN 1
#define DT_N_S_soc_S_usb_40040000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_num_bidir_endpoints 6
#define DT_N_S_soc_S_usb_40040000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_STRING_TOKEN full_speed
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_STRING_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 0) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 1) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 2) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 3) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 4) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 5) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 6) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 7) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 8) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 9)
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, maximum_speed, 9, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40040000_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_label "OTGHS"
#define DT_N_S_soc_S_usb_40040000_P_label_STRING_TOKEN OTGHS
#define DT_N_S_soc_S_usb_40040000_P_label_STRING_UPPER_TOKEN OTGHS
#define DT_N_S_soc_S_usb_40040000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, label, 0) \
	fn(DT_N_S_soc_S_usb_40040000, label, 1) \
	fn(DT_N_S_soc_S_usb_40040000, label, 2) \
	fn(DT_N_S_soc_S_usb_40040000, label, 3) \
	fn(DT_N_S_soc_S_usb_40040000, label, 4)
#define DT_N_S_soc_S_usb_40040000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40040000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40040000_P_label_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_status "disabled"
#define DT_N_S_soc_S_usb_40040000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usb_40040000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usb_40040000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usb_40040000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usb_40040000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usb_40040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, status, 0) \
	fn(DT_N_S_soc_S_usb_40040000, status, 1) \
	fn(DT_N_S_soc_S_usb_40040000, status, 2) \
	fn(DT_N_S_soc_S_usb_40040000, status, 3) \
	fn(DT_N_S_soc_S_usb_40040000, status, 4) \
	fn(DT_N_S_soc_S_usb_40040000, status, 5) \
	fn(DT_N_S_soc_S_usb_40040000, status, 6) \
	fn(DT_N_S_soc_S_usb_40040000, status, 7)
#define DT_N_S_soc_S_usb_40040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40040000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40040000_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_compatible {"st,stm32-otghs"}
#define DT_N_S_soc_S_usb_40040000_P_compatible_IDX_0 "st,stm32-otghs"
#define DT_N_S_soc_S_usb_40040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, compatible, 0)
#define DT_N_S_soc_S_usb_40040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40040000_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_40040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names {"otghs", "ep1_out", "ep1_in"}
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_0 "otghs"
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_1 "ep1_out"
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_2 "ep1_in"
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_40040000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_usb_40040000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_usb_40040000, interrupt_names, 2)
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_40040000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_40040000, interrupt_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_LEN 3
#define DT_N_S_soc_S_usb_40040000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usb_40040000_P_wakeup_source 0
#define DT_N_S_soc_S_usb_40040000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /otgfs_phy
 *
 * Node identifier: DT_N_S_otgfs_phy
 *
 * Binding (compatible = usb-nop-xceiv):
 *   $ZEPHYR_BASE/dts/bindings/phy/usb-nop-xceiv.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_otgfs_phy_PATH "/otgfs_phy"

/* Node's name with unit-address: */
#define DT_N_S_otgfs_phy_FULL_NAME "otgfs_phy"

/* Node parent (/) identifier: */
#define DT_N_S_otgfs_phy_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_otgfs_phy_CHILD_IDX 6
#define DT_N_S_otgfs_phy_FOREACH_CHILD(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_otgfs_phy_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_otgfs_phy_ORD 105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_otgfs_phy_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_otgfs_phy_SUPPORTS_ORDS \
	106, /* /soc/usb@50000000 */

/* Existence and alternate IDs: */
#define DT_N_S_otgfs_phy_EXISTS 1
#define DT_N_INST_0_usb_nop_xceiv DT_N_S_otgfs_phy
#define DT_N_NODELABEL_otgfs_phy  DT_N_S_otgfs_phy

/* Macros for properties that are special in the specification: */
#define DT_N_S_otgfs_phy_REG_NUM 0
#define DT_N_S_otgfs_phy_RANGES_NUM 0
#define DT_N_S_otgfs_phy_FOREACH_RANGE(fn) 
#define DT_N_S_otgfs_phy_IRQ_NUM 0
#define DT_N_S_otgfs_phy_COMPAT_MATCHES_usb_nop_xceiv 1
#define DT_N_S_otgfs_phy_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_otgfs_phy_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_otgfs_phy_P_compatible {"usb-nop-xceiv"}
#define DT_N_S_otgfs_phy_P_compatible_IDX_0 "usb-nop-xceiv"
#define DT_N_S_otgfs_phy_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otgfs_phy, compatible, 0)
#define DT_N_S_otgfs_phy_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_otgfs_phy, compatible, 0, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_compatible_LEN 1
#define DT_N_S_otgfs_phy_P_compatible_EXISTS 1
#define DT_N_S_otgfs_phy_P_label "OTGFS_PHY"
#define DT_N_S_otgfs_phy_P_label_STRING_TOKEN OTGFS_PHY
#define DT_N_S_otgfs_phy_P_label_STRING_UPPER_TOKEN OTGFS_PHY
#define DT_N_S_otgfs_phy_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_otgfs_phy, label, 0) \
	fn(DT_N_S_otgfs_phy, label, 1) \
	fn(DT_N_S_otgfs_phy, label, 2) \
	fn(DT_N_S_otgfs_phy, label, 3) \
	fn(DT_N_S_otgfs_phy, label, 4) \
	fn(DT_N_S_otgfs_phy, label, 5) \
	fn(DT_N_S_otgfs_phy, label, 6) \
	fn(DT_N_S_otgfs_phy, label, 7) \
	fn(DT_N_S_otgfs_phy, label, 8)
#define DT_N_S_otgfs_phy_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_otgfs_phy, label, 0, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 1, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 2, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 3, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 4, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 5, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 6, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 7, __VA_ARGS__) \
	fn(DT_N_S_otgfs_phy, label, 8, __VA_ARGS__)
#define DT_N_S_otgfs_phy_P_label_EXISTS 1
#define DT_N_S_otgfs_phy_P_wakeup_source 0
#define DT_N_S_otgfs_phy_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/usb@50000000
 *
 * Node identifier: DT_N_S_soc_S_usb_50000000
 *
 * Binding (compatible = st,stm32-otgfs):
 *   $ZEPHYR_BASE/dts/bindings/usb/st,stm32-otgfs.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usb_50000000_PATH "/soc/usb@50000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usb_50000000_FULL_NAME "usb@50000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usb_50000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usb_50000000_CHILD_IDX 15
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usb_50000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usb_50000000_ORD 106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usb_50000000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	105, /* /otgfs_phy */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usb_50000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usb_50000000_EXISTS 1
#define DT_N_INST_0_st_stm32_otgfs DT_N_S_soc_S_usb_50000000
#define DT_N_NODELABEL_usbotg_fs   DT_N_S_soc_S_usb_50000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usb_50000000_REG_NUM 1
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_VAL_ADDRESS 1342177280 /* 0x50000000 */
#define DT_N_S_soc_S_usb_50000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_soc_S_usb_50000000_RANGES_NUM 0
#define DT_N_S_soc_S_usb_50000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usb_50000000_IRQ_NUM 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq 67
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_irq DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_priority DT_N_S_soc_S_usb_50000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usb_50000000_IRQ_NAME_otgfs_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_COMPAT_MATCHES_st_stm32_otgfs 1
#define DT_N_S_soc_S_usb_50000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usb_50000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_usb_50000000_P_reg {1342177280 /* 0x50000000 */, 262144 /* 0x40000 */}
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_0 1342177280
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_1 262144
#define DT_N_S_soc_S_usb_50000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, reg, 0) \
	fn(DT_N_S_soc_S_usb_50000000, reg, 1)
#define DT_N_S_soc_S_usb_50000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts {67 /* 0x43 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_0 67
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usb_50000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, interrupts, 0) \
	fn(DT_N_S_soc_S_usb_50000000, interrupts, 1)
#define DT_N_S_soc_S_usb_50000000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_ram_size 1280
#define DT_N_S_soc_S_usb_50000000_P_ram_size_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_phys DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0 DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0_PH DT_N_S_otgfs_phy
#define DT_N_S_soc_S_usb_50000000_P_phys_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_phys_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_phys_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bus 52
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_usb_50000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, clocks, 0)
#define DT_N_S_soc_S_usb_50000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_clocks_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_num_bidir_endpoints 4
#define DT_N_S_soc_S_usb_50000000_P_num_bidir_endpoints_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed "full-speed"
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_STRING_TOKEN full_speed
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_STRING_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_IDX 1
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_TOKEN full_speed
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_ENUM_UPPER_TOKEN FULL_SPEED
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 0) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 1) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 2) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 3) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 4) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 5) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 6) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 7) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 8) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 9)
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, maximum_speed, 9, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_maximum_speed_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_label "OTGFS"
#define DT_N_S_soc_S_usb_50000000_P_label_STRING_TOKEN OTGFS
#define DT_N_S_soc_S_usb_50000000_P_label_STRING_UPPER_TOKEN OTGFS
#define DT_N_S_soc_S_usb_50000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, label, 0) \
	fn(DT_N_S_soc_S_usb_50000000, label, 1) \
	fn(DT_N_S_soc_S_usb_50000000, label, 2) \
	fn(DT_N_S_soc_S_usb_50000000, label, 3) \
	fn(DT_N_S_soc_S_usb_50000000, label, 4)
#define DT_N_S_soc_S_usb_50000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_label_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_status "disabled"
#define DT_N_S_soc_S_usb_50000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_usb_50000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_usb_50000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_usb_50000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, status, 0) \
	fn(DT_N_S_soc_S_usb_50000000, status, 1) \
	fn(DT_N_S_soc_S_usb_50000000, status, 2) \
	fn(DT_N_S_soc_S_usb_50000000, status, 3) \
	fn(DT_N_S_soc_S_usb_50000000, status, 4) \
	fn(DT_N_S_soc_S_usb_50000000, status, 5) \
	fn(DT_N_S_soc_S_usb_50000000, status, 6) \
	fn(DT_N_S_soc_S_usb_50000000, status, 7)
#define DT_N_S_soc_S_usb_50000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usb_50000000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_status_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_compatible {"st,stm32-otgfs"}
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0 "st,stm32-otgfs"
#define DT_N_S_soc_S_usb_50000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, compatible, 0)
#define DT_N_S_soc_S_usb_50000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_compatible_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names {"otgfs"}
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0 "otgfs"
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usb_50000000, interrupt_names, 0)
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usb_50000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_usb_50000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usb_50000000_P_wakeup_source 0
#define DT_N_S_soc_S_usb_50000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40002c00
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40002c00
 *
 * Binding (compatible = st,stm32-window-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-window-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40002c00_PATH "/soc/watchdog@40002c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40002c00_FULL_NAME "watchdog@40002c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40002c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40002c00_CHILD_IDX 7
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40002c00_ORD 107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40002c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40002c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40002c00_EXISTS 1
#define DT_N_INST_0_st_stm32_window_watchdog DT_N_S_soc_S_watchdog_40002c00
#define DT_N_NODELABEL_wwdg                  DT_N_S_soc_S_watchdog_40002c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40002c00_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_ADDRESS 1073753088 /* 0x40002c00 */
#define DT_N_S_soc_S_watchdog_40002c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40002c00_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40002c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq 0
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority 7
#define DT_N_S_soc_S_watchdog_40002c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_COMPAT_MATCHES_st_stm32_window_watchdog 1
#define DT_N_S_soc_S_watchdog_40002c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40002c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40002c00_P_reg {1073753088 /* 0x40002c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0 1073753088
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_label "WWDG"
#define DT_N_S_soc_S_watchdog_40002c00_P_label_STRING_TOKEN WWDG
#define DT_N_S_soc_S_watchdog_40002c00_P_label_STRING_UPPER_TOKEN WWDG
#define DT_N_S_soc_S_watchdog_40002c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, label, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 1) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 2) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 3)
#define DT_N_S_soc_S_watchdog_40002c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits 2048
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40002c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible {"st,stm32-window-watchdog"}
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0 "st,stm32-window-watchdog"
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40002c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts {0 /* 0x0 */, 7 /* 0x7 */}
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0 0
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1 7
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0) \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40002c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40002c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40002c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@40003000
 *
 * Node identifier: DT_N_S_soc_S_watchdog_40003000
 *
 * Binding (compatible = st,stm32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/st,stm32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_40003000_PATH "/soc/watchdog@40003000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_40003000_FULL_NAME "watchdog@40003000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_40003000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_40003000_CHILD_IDX 6
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_40003000_ORD 108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_40003000_REQUIRES_ORDS \
	12, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_40003000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_40003000_EXISTS 1
#define DT_N_INST_0_st_stm32_watchdog DT_N_S_soc_S_watchdog_40003000
#define DT_N_NODELABEL_iwdg           DT_N_S_soc_S_watchdog_40003000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_40003000_REG_NUM 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_ADDRESS 1073754112 /* 0x40003000 */
#define DT_N_S_soc_S_watchdog_40003000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_watchdog_40003000_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_40003000_IRQ_NUM 0
#define DT_N_S_soc_S_watchdog_40003000_COMPAT_MATCHES_st_stm32_watchdog 1
#define DT_N_S_soc_S_watchdog_40003000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_40003000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_40003000_P_reg {1073754112 /* 0x40003000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0 1073754112
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_watchdog_40003000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_label "IWDG"
#define DT_N_S_soc_S_watchdog_40003000_P_label_STRING_TOKEN IWDG
#define DT_N_S_soc_S_watchdog_40003000_P_label_STRING_UPPER_TOKEN IWDG
#define DT_N_S_soc_S_watchdog_40003000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, label, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 1) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 2) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 3)
#define DT_N_S_soc_S_watchdog_40003000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, label, 3, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_label_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_status "disabled"
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_40003000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, status, 0) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 4) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 5) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 6) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 7)
#define DT_N_S_soc_S_watchdog_40003000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_watchdog_40003000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible {"st,stm32-watchdog"}
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0 "st,stm32-watchdog"
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_40003000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_40003000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_40003000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00
 *
 * Binding (compatible = st,stm32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/st,stm32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_PATH "/soc/flash-controller@40023c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_FULL_NAME "flash-controller@40023c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_CHILD_IDX 2
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000) 
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_ORD 109

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_REQUIRES_ORDS \
	12, /* /soc */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_SUPPORTS_ORDS \
	110, /* /soc/flash-controller@40023c00/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_EXISTS 1
#define DT_N_INST_0_st_stm32_flash_controller   DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_INST_0_st_stm32f4_flash_controller DT_N_S_soc_S_flash_controller_40023c00
#define DT_N_NODELABEL_flash                    DT_N_S_soc_S_flash_controller_40023c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_ADDRESS 1073888256 /* 0x40023c00 */
#define DT_N_S_soc_S_flash_controller_40023c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_flash_controller_40023c00_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_irq 4
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_40023c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MATCHES_st_stm32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40023c00_COMPAT_MATCHES_st_stm32f4_flash_controller 1
#define DT_N_S_soc_S_flash_controller_40023c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_P_label "FLASH_CTRL"
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_STRING_TOKEN FLASH_CTRL
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_STRING_UPPER_TOKEN FLASH_CTRL
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 9)
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg {1073888256 /* 0x40023c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0 1073888256
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible {"st,stm32-flash-controller", "st,stm32f4-flash-controller"}
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0 "st,stm32-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1 "st,stm32f4-flash-controller"
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40023c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts {4 /* 0x4 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_0 4
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40023c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@40023c00/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
 *
 * Binding (compatible = st,stm32-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/st,stm32-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PATH "/soc/flash-controller@40023c00/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FULL_NAME "flash@8000000"

/* Node parent (/soc/flash-controller@40023c00) identifier: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_40023c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_CHILD_IDX 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_ORD 110

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REQUIRES_ORDS \
	109, /* /soc/flash-controller@40023c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_st_stm32_nv_flash DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_INST_0_soc_nv_flash      DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_N_NODELABEL_flash0         DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_st_stm32_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_max_erase_time 4000
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_max_erase_time_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label "FLASH_STM32"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_STRING_TOKEN FLASH_STM32
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_STRING_UPPER_TOKEN FLASH_STM32
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 1) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 2) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 3) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 4) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 5) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 6) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 7) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 8) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 9) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 10)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, label, 10, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible {"st,stm32-nv-flash", "soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0 "st,stm32-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, compatible, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_LEN 2
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 2097152 /* 0x200000 */}
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1 2097152
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 0) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 1)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a0_pf0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_PATH "/soc/pin-controller@40020000/fmc_a0_pf0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_FULL_NAME "fmc_a0_pf0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_CHILD_IDX 32
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_ORD 111

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_EXISTS 1
#define DT_N_NODELABEL_fmc_a0_pf0 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_pinmux 2572
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a10_pg0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_PATH "/soc/pin-controller@40020000/fmc_a10_pg0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_FULL_NAME "fmc_a10_pg0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_CHILD_IDX 43
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_ORD 112

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_EXISTS 1
#define DT_N_NODELABEL_fmc_a10_pg0 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_pinmux 3084
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a11_pg1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_PATH "/soc/pin-controller@40020000/fmc_a11_pg1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_FULL_NAME "fmc_a11_pg1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_CHILD_IDX 44
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_ORD 113

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_EXISTS 1
#define DT_N_NODELABEL_fmc_a11_pg1 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_pinmux 3116
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a12_pg2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_PATH "/soc/pin-controller@40020000/fmc_a12_pg2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_FULL_NAME "fmc_a12_pg2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_CHILD_IDX 45
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_ORD 114

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_EXISTS 1
#define DT_N_NODELABEL_fmc_a12_pg2 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_pinmux 3148
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a13_pg3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_PATH "/soc/pin-controller@40020000/fmc_a13_pg3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_FULL_NAME "fmc_a13_pg3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_CHILD_IDX 46
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_ORD 115

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_EXISTS 1
#define DT_N_NODELABEL_fmc_a13_pg3 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_pinmux 3180
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a14_pg4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_PATH "/soc/pin-controller@40020000/fmc_a14_pg4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_FULL_NAME "fmc_a14_pg4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_CHILD_IDX 47
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_ORD 116

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_EXISTS 1
#define DT_N_NODELABEL_fmc_a14_pg4 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_pinmux 3212
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a15_pg5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_PATH "/soc/pin-controller@40020000/fmc_a15_pg5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_FULL_NAME "fmc_a15_pg5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_CHILD_IDX 48
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_ORD 117

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_EXISTS 1
#define DT_N_NODELABEL_fmc_a15_pg5 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_pinmux 3244
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a1_pf1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_PATH "/soc/pin-controller@40020000/fmc_a1_pf1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_FULL_NAME "fmc_a1_pf1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_CHILD_IDX 33
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_ORD 118

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_EXISTS 1
#define DT_N_NODELABEL_fmc_a1_pf1 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_pinmux 2604
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a2_pf2
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_PATH "/soc/pin-controller@40020000/fmc_a2_pf2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_FULL_NAME "fmc_a2_pf2"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_CHILD_IDX 34
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_ORD 119

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_EXISTS 1
#define DT_N_NODELABEL_fmc_a2_pf2 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_pinmux 2636
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a3_pf3
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_PATH "/soc/pin-controller@40020000/fmc_a3_pf3"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_FULL_NAME "fmc_a3_pf3"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_CHILD_IDX 35
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_ORD 120

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_EXISTS 1
#define DT_N_NODELABEL_fmc_a3_pf3 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_pinmux 2668
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a4_pf4
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_PATH "/soc/pin-controller@40020000/fmc_a4_pf4"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_FULL_NAME "fmc_a4_pf4"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_CHILD_IDX 36
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_ORD 121

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_EXISTS 1
#define DT_N_NODELABEL_fmc_a4_pf4 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_pinmux 2700
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a5_pf5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_PATH "/soc/pin-controller@40020000/fmc_a5_pf5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_FULL_NAME "fmc_a5_pf5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_CHILD_IDX 37
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_ORD 122

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_EXISTS 1
#define DT_N_NODELABEL_fmc_a5_pf5 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_pinmux 2732
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a6_pf12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_PATH "/soc/pin-controller@40020000/fmc_a6_pf12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_FULL_NAME "fmc_a6_pf12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_CHILD_IDX 39
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_ORD 123

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_EXISTS 1
#define DT_N_NODELABEL_fmc_a6_pf12 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_pinmux 2956
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a7_pf13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_PATH "/soc/pin-controller@40020000/fmc_a7_pf13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_FULL_NAME "fmc_a7_pf13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_CHILD_IDX 40
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_ORD 124

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_EXISTS 1
#define DT_N_NODELABEL_fmc_a7_pf13 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_pinmux 2988
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a8_pf14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_PATH "/soc/pin-controller@40020000/fmc_a8_pf14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_FULL_NAME "fmc_a8_pf14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_CHILD_IDX 41
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_ORD 125

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_EXISTS 1
#define DT_N_NODELABEL_fmc_a8_pf14 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_pinmux 3020
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_a9_pf15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_PATH "/soc/pin-controller@40020000/fmc_a9_pf15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_FULL_NAME "fmc_a9_pf15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_CHILD_IDX 42
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_ORD 126

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_EXISTS 1
#define DT_N_NODELABEL_fmc_a9_pf15 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_pinmux 3052
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d0_pd14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_PATH "/soc/pin-controller@40020000/fmc_d0_pd14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_FULL_NAME "fmc_d0_pd14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_CHILD_IDX 19
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_ORD 127

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_EXISTS 1
#define DT_N_NODELABEL_fmc_d0_pd14 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_pinmux 1996
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d10_pe13
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_PATH "/soc/pin-controller@40020000/fmc_d10_pe13"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_FULL_NAME "fmc_d10_pe13"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_CHILD_IDX 29
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_ORD 128

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_EXISTS 1
#define DT_N_NODELABEL_fmc_d10_pe13 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_pinmux 2476
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d11_pe14
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_PATH "/soc/pin-controller@40020000/fmc_d11_pe14"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_FULL_NAME "fmc_d11_pe14"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_CHILD_IDX 30
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_ORD 129

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_EXISTS 1
#define DT_N_NODELABEL_fmc_d11_pe14 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_pinmux 2508
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d12_pe15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_PATH "/soc/pin-controller@40020000/fmc_d12_pe15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_FULL_NAME "fmc_d12_pe15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_CHILD_IDX 31
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_ORD 130

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_EXISTS 1
#define DT_N_NODELABEL_fmc_d12_pe15 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_pinmux 2540
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d13_pd8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_PATH "/soc/pin-controller@40020000/fmc_d13_pd8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_FULL_NAME "fmc_d13_pd8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_CHILD_IDX 16
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_ORD 131

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_EXISTS 1
#define DT_N_NODELABEL_fmc_d13_pd8 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_pinmux 1804
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d14_pd9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_PATH "/soc/pin-controller@40020000/fmc_d14_pd9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_FULL_NAME "fmc_d14_pd9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_CHILD_IDX 17
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_ORD 132

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_EXISTS 1
#define DT_N_NODELABEL_fmc_d14_pd9 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_pinmux 1836
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d15_pd10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_PATH "/soc/pin-controller@40020000/fmc_d15_pd10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_FULL_NAME "fmc_d15_pd10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_CHILD_IDX 18
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_ORD 133

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_EXISTS 1
#define DT_N_NODELABEL_fmc_d15_pd10 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_pinmux 1868
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d1_pd15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_PATH "/soc/pin-controller@40020000/fmc_d1_pd15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_FULL_NAME "fmc_d1_pd15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_CHILD_IDX 20
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_ORD 134

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_EXISTS 1
#define DT_N_NODELABEL_fmc_d1_pd15 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_pinmux 2028
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d2_pd0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_PATH "/soc/pin-controller@40020000/fmc_d2_pd0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_FULL_NAME "fmc_d2_pd0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_CHILD_IDX 14
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_ORD 135

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_EXISTS 1
#define DT_N_NODELABEL_fmc_d2_pd0 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_pinmux 1548
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d3_pd1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_PATH "/soc/pin-controller@40020000/fmc_d3_pd1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_FULL_NAME "fmc_d3_pd1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_CHILD_IDX 15
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_ORD 136

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_EXISTS 1
#define DT_N_NODELABEL_fmc_d3_pd1 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_pinmux 1580
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d4_pe7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_PATH "/soc/pin-controller@40020000/fmc_d4_pe7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_FULL_NAME "fmc_d4_pe7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_CHILD_IDX 23
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_ORD 137

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_EXISTS 1
#define DT_N_NODELABEL_fmc_d4_pe7 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_pinmux 2284
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d5_pe8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_PATH "/soc/pin-controller@40020000/fmc_d5_pe8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_FULL_NAME "fmc_d5_pe8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_CHILD_IDX 24
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_ORD 138

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_EXISTS 1
#define DT_N_NODELABEL_fmc_d5_pe8 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_pinmux 2316
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d6_pe9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_PATH "/soc/pin-controller@40020000/fmc_d6_pe9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_FULL_NAME "fmc_d6_pe9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_CHILD_IDX 25
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_ORD 139

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_EXISTS 1
#define DT_N_NODELABEL_fmc_d6_pe9 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_pinmux 2348
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d7_pe10
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_PATH "/soc/pin-controller@40020000/fmc_d7_pe10"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_FULL_NAME "fmc_d7_pe10"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_CHILD_IDX 26
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_ORD 140

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_EXISTS 1
#define DT_N_NODELABEL_fmc_d7_pe10 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_pinmux 2380
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d8_pe11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_PATH "/soc/pin-controller@40020000/fmc_d8_pe11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_FULL_NAME "fmc_d8_pe11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_CHILD_IDX 27
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_ORD 141

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_EXISTS 1
#define DT_N_NODELABEL_fmc_d8_pe11 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_pinmux 2412
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_d9_pe12
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_PATH "/soc/pin-controller@40020000/fmc_d9_pe12"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_FULL_NAME "fmc_d9_pe12"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_CHILD_IDX 28
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_ORD 142

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_EXISTS 1
#define DT_N_NODELABEL_fmc_d9_pe12 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_pinmux 2444
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_nbl0_pe0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_PATH "/soc/pin-controller@40020000/fmc_nbl0_pe0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_FULL_NAME "fmc_nbl0_pe0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_CHILD_IDX 21
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_ORD 143

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_EXISTS 1
#define DT_N_NODELABEL_fmc_nbl0_pe0 DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_pinmux 2060
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_nbl1_pe1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_PATH "/soc/pin-controller@40020000/fmc_nbl1_pe1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_FULL_NAME "fmc_nbl1_pe1"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_CHILD_IDX 22
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_ORD 144

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_EXISTS 1
#define DT_N_NODELABEL_fmc_nbl1_pe1 DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_pinmux 2092
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_sdcke1_pb5
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_PATH "/soc/pin-controller@40020000/fmc_sdcke1_pb5"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_FULL_NAME "fmc_sdcke1_pb5"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_CHILD_IDX 11
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_ORD 145

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_EXISTS 1
#define DT_N_NODELABEL_fmc_sdcke1_pb5 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_pinmux 684
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_sdclk_pg8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_PATH "/soc/pin-controller@40020000/fmc_sdclk_pg8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_FULL_NAME "fmc_sdclk_pg8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_CHILD_IDX 49
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_ORD 146

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_EXISTS 1
#define DT_N_NODELABEL_fmc_sdclk_pg8 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_pinmux 3340
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_sdncas_pg15
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_PATH "/soc/pin-controller@40020000/fmc_sdncas_pg15"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_FULL_NAME "fmc_sdncas_pg15"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_CHILD_IDX 50
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_ORD 147

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_EXISTS 1
#define DT_N_NODELABEL_fmc_sdncas_pg15 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_pinmux 3564
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_sdne1_pb6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_PATH "/soc/pin-controller@40020000/fmc_sdne1_pb6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_FULL_NAME "fmc_sdne1_pb6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_CHILD_IDX 12
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_ORD 148

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_EXISTS 1
#define DT_N_NODELABEL_fmc_sdne1_pb6 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_pinmux 716
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_sdnras_pf11
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_PATH "/soc/pin-controller@40020000/fmc_sdnras_pf11"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_FULL_NAME "fmc_sdnras_pf11"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_CHILD_IDX 38
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_ORD 149

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_EXISTS 1
#define DT_N_NODELABEL_fmc_sdnras_pf11 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_pinmux 2924
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/fmc_sdnwe_pc0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_PATH "/soc/pin-controller@40020000/fmc_sdnwe_pc0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_FULL_NAME "fmc_sdnwe_pc0"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_CHILD_IDX 13
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_ORD 150

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_SUPPORTS_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_EXISTS 1
#define DT_N_NODELABEL_fmc_sdnwe_pc0 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_pinmux 1036
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/memory-controller@a0000000
 *
 * Node identifier: DT_N_S_soc_S_memory_controller_a0000000
 *
 * Binding (compatible = st,stm32-fmc):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/st,stm32-fmc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_controller_a0000000_PATH "/soc/memory-controller@a0000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_controller_a0000000_FULL_NAME "memory-controller@a0000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_controller_a0000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_controller_a0000000_CHILD_IDX 56
#define DT_N_S_soc_S_memory_controller_a0000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram)
#define DT_N_S_soc_S_memory_controller_a0000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram) 
#define DT_N_S_soc_S_memory_controller_a0000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_controller_a0000000_ORD 151

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_controller_a0000000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	111, /* /soc/pin-controller@40020000/fmc_a0_pf0 */ \
	112, /* /soc/pin-controller@40020000/fmc_a10_pg0 */ \
	113, /* /soc/pin-controller@40020000/fmc_a11_pg1 */ \
	114, /* /soc/pin-controller@40020000/fmc_a12_pg2 */ \
	115, /* /soc/pin-controller@40020000/fmc_a13_pg3 */ \
	116, /* /soc/pin-controller@40020000/fmc_a14_pg4 */ \
	117, /* /soc/pin-controller@40020000/fmc_a15_pg5 */ \
	118, /* /soc/pin-controller@40020000/fmc_a1_pf1 */ \
	119, /* /soc/pin-controller@40020000/fmc_a2_pf2 */ \
	120, /* /soc/pin-controller@40020000/fmc_a3_pf3 */ \
	121, /* /soc/pin-controller@40020000/fmc_a4_pf4 */ \
	122, /* /soc/pin-controller@40020000/fmc_a5_pf5 */ \
	123, /* /soc/pin-controller@40020000/fmc_a6_pf12 */ \
	124, /* /soc/pin-controller@40020000/fmc_a7_pf13 */ \
	125, /* /soc/pin-controller@40020000/fmc_a8_pf14 */ \
	126, /* /soc/pin-controller@40020000/fmc_a9_pf15 */ \
	127, /* /soc/pin-controller@40020000/fmc_d0_pd14 */ \
	128, /* /soc/pin-controller@40020000/fmc_d10_pe13 */ \
	129, /* /soc/pin-controller@40020000/fmc_d11_pe14 */ \
	130, /* /soc/pin-controller@40020000/fmc_d12_pe15 */ \
	131, /* /soc/pin-controller@40020000/fmc_d13_pd8 */ \
	132, /* /soc/pin-controller@40020000/fmc_d14_pd9 */ \
	133, /* /soc/pin-controller@40020000/fmc_d15_pd10 */ \
	134, /* /soc/pin-controller@40020000/fmc_d1_pd15 */ \
	135, /* /soc/pin-controller@40020000/fmc_d2_pd0 */ \
	136, /* /soc/pin-controller@40020000/fmc_d3_pd1 */ \
	137, /* /soc/pin-controller@40020000/fmc_d4_pe7 */ \
	138, /* /soc/pin-controller@40020000/fmc_d5_pe8 */ \
	139, /* /soc/pin-controller@40020000/fmc_d6_pe9 */ \
	140, /* /soc/pin-controller@40020000/fmc_d7_pe10 */ \
	141, /* /soc/pin-controller@40020000/fmc_d8_pe11 */ \
	142, /* /soc/pin-controller@40020000/fmc_d9_pe12 */ \
	143, /* /soc/pin-controller@40020000/fmc_nbl0_pe0 */ \
	144, /* /soc/pin-controller@40020000/fmc_nbl1_pe1 */ \
	145, /* /soc/pin-controller@40020000/fmc_sdcke1_pb5 */ \
	146, /* /soc/pin-controller@40020000/fmc_sdclk_pg8 */ \
	147, /* /soc/pin-controller@40020000/fmc_sdncas_pg15 */ \
	148, /* /soc/pin-controller@40020000/fmc_sdne1_pb6 */ \
	149, /* /soc/pin-controller@40020000/fmc_sdnras_pf11 */ \
	150, /* /soc/pin-controller@40020000/fmc_sdnwe_pc0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_controller_a0000000_SUPPORTS_ORDS \
	152, /* /soc/memory-controller@a0000000/sdram */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_controller_a0000000_EXISTS 1
#define DT_N_INST_0_st_stm32_fmc DT_N_S_soc_S_memory_controller_a0000000
#define DT_N_NODELABEL_fmc       DT_N_S_soc_S_memory_controller_a0000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_controller_a0000000_REG_NUM 1
#define DT_N_S_soc_S_memory_controller_a0000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_REG_IDX_0_VAL_ADDRESS 2684354560 /* 0xa0000000 */
#define DT_N_S_soc_S_memory_controller_a0000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_memory_controller_a0000000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_controller_a0000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_controller_a0000000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_controller_a0000000_COMPAT_MATCHES_st_stm32_fmc 1
#define DT_N_S_soc_S_memory_controller_a0000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_4_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_5_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_6_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_7_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_8_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_9_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_10_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_11_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_12_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_13_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_14_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_15_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_16_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_17_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_18_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_19_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_20_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_21_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_22_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_23_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_24_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_25_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_26_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_27_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_28_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_29_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_30_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_31_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_32_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_33_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_34_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_35_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_36_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_37_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_38_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9
#define DT_N_S_soc_S_memory_controller_a0000000_PINCTRL_NAME_default_IDX_39_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10

/* Generic property macros: */
#define DT_N_S_soc_S_memory_controller_a0000000_P_reg {2684354560 /* 0xa0000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_memory_controller_a0000000_P_reg_IDX_0 2684354560
#define DT_N_S_soc_S_memory_controller_a0000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_memory_controller_a0000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000, reg, 0) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, reg, 1)
#define DT_N_S_soc_S_memory_controller_a0000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_label "STM32_FMC"
#define DT_N_S_soc_S_memory_controller_a0000000_P_label_STRING_TOKEN STM32_FMC
#define DT_N_S_soc_S_memory_controller_a0000000_P_label_STRING_UPPER_TOKEN STM32_FMC
#define DT_N_S_soc_S_memory_controller_a0000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000, label, 0) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 1) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 2) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 3) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 4) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 5) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 6) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 7) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 8)
#define DT_N_S_soc_S_memory_controller_a0000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_P_label_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_IDX_0_VAL_bus 56
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000, clocks, 0)
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_LEN 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl0_pe0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_nbl1_pe1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdclk_pg8
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnwe_pc0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_4 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_4_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdcke1_pb5
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_4_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_5 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_5_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdne1_pb6
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_5_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_6 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_6_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdnras_pf11
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_6_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_7 DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_7_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_sdncas_pg15
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_7_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_8 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_8_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a0_pf0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_8_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_9 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_9_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a1_pf1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_9_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_10 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_10_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a2_pf2
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_10_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_11 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_11_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a3_pf3
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_11_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_12 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_12_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a4_pf4
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_12_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_13 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_13_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a5_pf5
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_13_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_14 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_14_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a6_pf12
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_14_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_15 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_15_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a7_pf13
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_15_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_16 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_16_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a8_pf14
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_16_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_17 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_17_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a9_pf15
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_17_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_18 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_18_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a10_pg0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_18_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_19 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_19_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a11_pg1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_19_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_20 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_20_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a12_pg2
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_20_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_21 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_21_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a13_pg3
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_21_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_22 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_22_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a14_pg4
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_22_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_23 DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_23_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_a15_pg5
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_23_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_24 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_24_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d0_pd14
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_24_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_25 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_25_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d1_pd15
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_25_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_26 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_26_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d2_pd0
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_26_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_27 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_27_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d3_pd1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_27_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_28 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_28_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d4_pe7
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_28_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_29 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_29_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d5_pe8
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_29_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_30 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_30_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d6_pe9
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_30_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_31 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_31_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d7_pe10
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_31_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_32 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_32_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d8_pe11
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_32_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_33 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_33_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d9_pe12
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_33_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_34 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_34_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d10_pe13
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_34_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_35 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_35_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d11_pe14
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_35_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_36 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_36_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d12_pe15
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_36_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_37 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_37_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d13_pd8
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_37_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_38 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_38_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d14_pd9
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_38_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_39 DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_39_PH DT_N_S_soc_S_pin_controller_40020000_S_fmc_d15_pd10
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_IDX_39_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 3) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 4) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 5) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 6) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 7) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 8) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 9) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 10) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 11) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 12) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 13) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 14) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 15) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 16) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 17) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 18) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 19) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 20) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 21) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 22) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 23) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 24) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 25) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 26) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 27) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 28) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 29) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 30) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 31) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 32) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 33) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 34) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 35) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 36) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 37) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 38) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 39)
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 14, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 15, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 16, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 17, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 18, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 19, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 20, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 21, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 22, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 23, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 24, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 25, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 26, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 27, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 28, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 29, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 30, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 31, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 32, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 33, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 34, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 35, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 36, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 37, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 38, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_0, 39, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_LEN 40
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_names, 0)
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_status "okay"
#define DT_N_S_soc_S_memory_controller_a0000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_memory_controller_a0000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_memory_controller_a0000000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_memory_controller_a0000000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_memory_controller_a0000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000, status, 0) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, status, 1) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, status, 2) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, status, 3)
#define DT_N_S_soc_S_memory_controller_a0000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_P_status_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_compatible {"st,stm32-fmc"}
#define DT_N_S_soc_S_memory_controller_a0000000_P_compatible_IDX_0 "st,stm32-fmc"
#define DT_N_S_soc_S_memory_controller_a0000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000, compatible, 0)
#define DT_N_S_soc_S_memory_controller_a0000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_controller_a0000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/memory-controller@a0000000/sdram
 *
 * Node identifier: DT_N_S_soc_S_memory_controller_a0000000_S_sdram
 *
 * Binding (compatible = st,stm32-fmc-sdram):
 *   $ZEPHYR_BASE/dts/bindings/memory-controllers/st,stm32-fmc-sdram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_PATH "/soc/memory-controller@a0000000/sdram"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_FULL_NAME "sdram"

/* Node parent (/soc/memory-controller@a0000000) identifier: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_PARENT DT_N_S_soc_S_memory_controller_a0000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_CHILD_IDX 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1) 
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_ORD 152

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_REQUIRES_ORDS \
	151, /* /soc/memory-controller@a0000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_SUPPORTS_ORDS \
	153, /* /soc/memory-controller@a0000000/sdram/bank@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_EXISTS 1
#define DT_N_INST_0_st_stm32_fmc_sdram DT_N_S_soc_S_memory_controller_a0000000_S_sdram
#define DT_N_NODELABEL_sdram           DT_N_S_soc_S_memory_controller_a0000000_S_sdram

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_REG_NUM 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_RANGES_NUM 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_IRQ_NUM 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_COMPAT_MATCHES_st_stm32_fmc_sdram 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_label "STM32_FMC_SDRAM"
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_label_STRING_TOKEN STM32_FMC_SDRAM
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_label_STRING_UPPER_TOKEN STM32_FMC_SDRAM
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 0) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 1) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 2) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 3) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 4) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 5) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 6) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 7) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 8) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 9) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 10) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 11) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 12) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 13) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 14)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, label, 14, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_label_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_power_up_delay 100
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_power_up_delay_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_num_auto_refresh 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_num_auto_refresh_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_mode_register 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_mode_register_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_refresh_rate 1386
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_refresh_rate_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_status "okay"
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, status, 0) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, status, 1) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, status, 2) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, status, 3)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_status_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_compatible {"st,stm32-fmc-sdram"}
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_compatible_IDX_0 "st,stm32-fmc-sdram"
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, compatible, 0)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_wakeup_source 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/memory-controller@a0000000/sdram/bank@1
 *
 * Node identifier: DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_PATH "/soc/memory-controller@a0000000/sdram/bank@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_FULL_NAME "bank@1"

/* Node parent (/soc/memory-controller@a0000000/sdram) identifier: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_PARENT DT_N_S_soc_S_memory_controller_a0000000_S_sdram

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_CHILD_IDX 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_ORD 153

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_REQUIRES_ORDS \
	152, /* /soc/memory-controller@a0000000/sdram */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_REG_NUM 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_RANGES_NUM 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_IRQ_NUM 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_reg 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control {0 /* 0x0 */, 4 /* 0x4 */, 16 /* 0x10 */, 64 /* 0x40 */, 256 /* 0x100 */, 3072 /* 0xc00 */, 0 /* 0x0 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_0 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_1 4
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_2 16
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_2_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_3 64
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_3_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_4 256
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_4_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_5 3072
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_5_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_6 0
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_6_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_7 8192
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_IDX_7_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 0) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 1) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 2) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 3) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 4) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 5) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 6) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 7)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_control, 7, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_LEN 8
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_control_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing {2 /* 0x2 */, 7 /* 0x7 */, 4 /* 0x4 */, 7 /* 0x7 */, 2 /* 0x2 */, 2 /* 0x2 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_0 2
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_1 7
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_2 4
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_2_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_3 7
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_3_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_4 2
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_4_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_5 2
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_5_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_6 2
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_IDX_6_EXISTS 1
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 0) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 1) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 2) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 3) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 4) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 5) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 6)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1, st_sdram_timing, 6, __VA_ARGS__)
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_LEN 7
#define DT_N_S_soc_S_memory_controller_a0000000_S_sdram_S_bank_1_P_st_sdram_timing_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PATH "/soc/pin-controller@40020000/gpio@40020400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FULL_NAME "gpio@40020400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_CHILD_IDX 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_ORD 154

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_EXISTS 1
#define DT_N_INST_1_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400
#define DT_N_NODELABEL_gpiob      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_ADDRESS 1073873920 /* 0x40020400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg {1073873920 /* 0x40020400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0 1073873920
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label "GPIOB"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_STRING_TOKEN GPIOB
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_STRING_UPPER_TOKEN GPIOB
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40021c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PATH "/soc/pin-controller@40020000/gpio@40021c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FULL_NAME "gpio@40021c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_CHILD_IDX 7
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_ORD 155

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_EXISTS 1
#define DT_N_INST_7_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00
#define DT_N_NODELABEL_gpioh      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_ADDRESS 1073880064 /* 0x40021c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg {1073880064 /* 0x40021c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0 1073880064
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label "GPIOH"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_STRING_TOKEN GPIOH
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_STRING_UPPER_TOKEN GPIOH
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40022000
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_PATH "/soc/pin-controller@40020000/gpio@40022000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FULL_NAME "gpio@40022000"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_CHILD_IDX 8
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_ORD 156

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_EXISTS 1
#define DT_N_INST_8_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000
#define DT_N_NODELABEL_gpioi      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_IDX_0_VAL_ADDRESS 1073881088 /* 0x40022000 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg {1073881088 /* 0x40022000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_0 1073881088
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_label "GPIOI"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_label_STRING_TOKEN GPIOI
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_label_STRING_UPPER_TOKEN GPIOI
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40022400
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_PATH "/soc/pin-controller@40020000/gpio@40022400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_FULL_NAME "gpio@40022400"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_CHILD_IDX 9
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_ORD 157

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_EXISTS 1
#define DT_N_INST_9_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400
#define DT_N_NODELABEL_gpioj      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_REG_IDX_0_VAL_ADDRESS 1073882112 /* 0x40022400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_reg {1073882112 /* 0x40022400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_reg_IDX_0 1073882112
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_label "GPIOJ"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_label_STRING_TOKEN GPIOJ
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_label_STRING_UPPER_TOKEN GPIOJ
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_IDX_0_VAL_bits 512
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40022800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_PATH "/soc/pin-controller@40020000/gpio@40022800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_FULL_NAME "gpio@40022800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_CHILD_IDX 10
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_ORD 158

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_EXISTS 1
#define DT_N_INST_10_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800
#define DT_N_NODELABEL_gpiok       DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_REG_IDX_0_VAL_ADDRESS 1073883136 /* 0x40022800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_reg {1073883136 /* 0x40022800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_reg_IDX_0 1073883136
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_label "GPIOK"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_label_STRING_TOKEN GPIOK
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_label_STRING_UPPER_TOKEN GPIOK
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_IDX_0_VAL_bits 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020800
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PATH "/soc/pin-controller@40020000/gpio@40020800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FULL_NAME "gpio@40020800"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_CHILD_IDX 2
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_ORD 159

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_SUPPORTS_ORDS \
	164, /* /soc/spi@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_EXISTS 1
#define DT_N_INST_2_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_NODELABEL_gpioc      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_ADDRESS 1073874944 /* 0x40020800 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg {1073874944 /* 0x40020800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0 1073874944
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label "GPIOC"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_STRING_TOKEN GPIOC
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_STRING_UPPER_TOKEN GPIOC
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_miso_pf8
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_PATH "/soc/pin-controller@40020000/spi5_miso_pf8"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_FULL_NAME "spi5_miso_pf8"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_CHILD_IDX 79
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_ORD 160

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_SUPPORTS_ORDS \
	164, /* /soc/spi@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_EXISTS 1
#define DT_N_NODELABEL_spi5_miso_pf8 DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_pinmux 2821
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_mosi_pf9
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_PATH "/soc/pin-controller@40020000/spi5_mosi_pf9"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_FULL_NAME "spi5_mosi_pf9"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_CHILD_IDX 80
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_ORD 161

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_SUPPORTS_ORDS \
	164, /* /soc/spi@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_EXISTS 1
#define DT_N_NODELABEL_spi5_mosi_pf9 DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_pinmux 2853
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_nss_pf6
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_PATH "/soc/pin-controller@40020000/spi5_nss_pf6"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_FULL_NAME "spi5_nss_pf6"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_CHILD_IDX 81
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_ORD 162

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_SUPPORTS_ORDS \
	164, /* /soc/spi@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_EXISTS 1
#define DT_N_NODELABEL_spi5_nss_pf6 DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_pinmux 2757
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_slew_rate "low-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_slew_rate_STRING_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_slew_rate_STRING_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_slew_rate_ENUM_IDX 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_slew_rate_ENUM_TOKEN low_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_slew_rate_ENUM_UPPER_TOKEN LOW_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 8)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6, slew_rate, 8, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/spi5_sck_pf7
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_PATH "/soc/pin-controller@40020000/spi5_sck_pf7"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_FULL_NAME "spi5_sck_pf7"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_CHILD_IDX 82
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_ORD 163

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_SUPPORTS_ORDS \
	164, /* /soc/spi@40015000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_EXISTS 1
#define DT_N_NODELABEL_spi5_sck_pf7 DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_pinmux 2789
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_pinmux_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_slew_rate "very-high-speed"
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_slew_rate_STRING_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_slew_rate_STRING_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_slew_rate_ENUM_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_slew_rate_ENUM_TOKEN very_high_speed
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_slew_rate_ENUM_UPPER_TOKEN VERY_HIGH_SPEED
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_slew_rate_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 4) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 5) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 6) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 7) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 8) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 9) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 10) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 11) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 12) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 13) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 14)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_slew_rate_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7, slew_rate, 14, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_slew_rate_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_bias_disable 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_bias_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_bias_pull_down 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_output_low 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_output_high 0
#define DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/spi@40015000
 *
 * Node identifier: DT_N_S_soc_S_spi_40015000
 *
 * Binding (compatible = st,stm32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/st,stm32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40015000_PATH "/soc/spi@40015000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40015000_FULL_NAME "spi@40015000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_40015000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40015000_CHILD_IDX 54
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0)
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0) 
#define DT_N_S_soc_S_spi_40015000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, __VA_ARGS__) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40015000_ORD 164

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40015000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */ \
	159, /* /soc/pin-controller@40020000/gpio@40020800 */ \
	160, /* /soc/pin-controller@40020000/spi5_miso_pf8 */ \
	161, /* /soc/pin-controller@40020000/spi5_mosi_pf9 */ \
	162, /* /soc/pin-controller@40020000/spi5_nss_pf6 */ \
	163, /* /soc/pin-controller@40020000/spi5_sck_pf7 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40015000_SUPPORTS_ORDS \
	166, /* /soc/spi@40015000/ili9341@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40015000_EXISTS 1
#define DT_N_INST_0_st_stm32_spi DT_N_S_soc_S_spi_40015000
#define DT_N_NODELABEL_spi5      DT_N_S_soc_S_spi_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40015000_REG_NUM 1
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_VAL_ADDRESS 1073827840 /* 0x40015000 */
#define DT_N_S_soc_S_spi_40015000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_spi_40015000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40015000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40015000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_irq 85
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_priority 5
#define DT_N_S_soc_S_spi_40015000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_COMPAT_MATCHES_st_stm32_spi 1
#define DT_N_S_soc_S_spi_40015000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_40015000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_40015000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8
#define DT_N_S_soc_S_spi_40015000_PINCTRL_NAME_default_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40015000_P_reg {1073827840 /* 0x40015000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_0 1073827840
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_spi_40015000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, reg, 0) \
	fn(DT_N_S_soc_S_spi_40015000, reg, 1)
#define DT_N_S_soc_S_spi_40015000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts {85 /* 0x55 */, 5 /* 0x5 */}
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_0 85
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_1 5
#define DT_N_S_soc_S_spi_40015000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, interrupts, 0) \
	fn(DT_N_S_soc_S_spi_40015000, interrupts, 1)
#define DT_N_S_soc_S_spi_40015000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_spi5_nss_pf6
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_1 DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_1_PH DT_N_S_soc_S_pin_controller_40020000_S_spi5_sck_pf7
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_2 DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_2_PH DT_N_S_soc_S_pin_controller_40020000_S_spi5_miso_pf8
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_3 DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_3_PH DT_N_S_soc_S_pin_controller_40020000_S_spi5_mosi_pf9
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_spi_40015000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_spi_40015000, pinctrl_0, 2) \
	fn(DT_N_S_soc_S_spi_40015000, pinctrl_0, 3)
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, pinctrl_0, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, pinctrl_0, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_LEN 4
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_label "SPI_5"
#define DT_N_S_soc_S_spi_40015000_P_label_STRING_TOKEN SPI_5
#define DT_N_S_soc_S_spi_40015000_P_label_STRING_UPPER_TOKEN SPI_5
#define DT_N_S_soc_S_spi_40015000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, label, 0) \
	fn(DT_N_S_soc_S_spi_40015000, label, 1) \
	fn(DT_N_S_soc_S_spi_40015000, label, 2) \
	fn(DT_N_S_soc_S_spi_40015000, label, 3) \
	fn(DT_N_S_soc_S_spi_40015000, label, 4)
#define DT_N_S_soc_S_spi_40015000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_IDX_0_VAL_pin 2
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, cs_gpios, 0)
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, cs_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_cs_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_status "okay"
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_40015000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_IDX 1
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_40015000_P_status_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, status, 0) \
	fn(DT_N_S_soc_S_spi_40015000, status, 1) \
	fn(DT_N_S_soc_S_spi_40015000, status, 2) \
	fn(DT_N_S_soc_S_spi_40015000, status, 3)
#define DT_N_S_soc_S_spi_40015000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000, status, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible {"st,stm32-spi"}
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0 "st,stm32-spi"
#define DT_N_S_soc_S_spi_40015000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, compatible, 0)
#define DT_N_S_soc_S_spi_40015000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bits 1048576
#define DT_N_S_soc_S_spi_40015000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000, clocks, 0)
#define DT_N_S_soc_S_spi_40015000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_40015000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40015000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@40020000/gpio@40020c00
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
 *
 * Binding (compatible = st,stm32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/st,stm32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PATH "/soc/pin-controller@40020000/gpio@40020c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FULL_NAME "gpio@40020c00"

/* Node parent (/soc/pin-controller@40020000) identifier: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PARENT DT_N_S_soc_S_pin_controller_40020000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_CHILD_IDX 3
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_ORD 165

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REQUIRES_ORDS \
	13, /* /soc/pin-controller@40020000 */ \
	16, /* /soc/rcc@40023800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_SUPPORTS_ORDS \
	166, /* /soc/spi@40015000/ili9341@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_EXISTS 1
#define DT_N_INST_3_st_stm32_gpio DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_NODELABEL_gpiod      DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_ADDRESS 1073875968 /* 0x40020c00 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_COMPAT_MATCHES_st_stm32_gpio 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg {1073875968 /* 0x40020c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0 1073875968
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 1)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label "GPIOD"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_STRING_TOKEN GPIOD
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_STRING_UPPER_TOKEN GPIOD
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 0) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 1) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 2) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 3) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 4)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_label_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bus 48
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios 32
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible {"st,stm32-gpio"}
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0 "st,stm32-gpio"
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/spi@40015000/ili9341@0
 *
 * Node identifier: DT_N_S_soc_S_spi_40015000_S_ili9341_0
 *
 * Binding (compatible = ilitek,ili9341):
 *   $ZEPHYR_BASE/dts/bindings/display/ilitek,ili9341.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_PATH "/soc/spi@40015000/ili9341@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_FULL_NAME "ili9341@0"

/* Node parent (/soc/spi@40015000) identifier: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_PARENT DT_N_S_soc_S_spi_40015000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_CHILD_IDX 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_ORD 166

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_REQUIRES_ORDS \
	164, /* /soc/spi@40015000 */ \
	165, /* /soc/pin-controller@40020000/gpio@40020c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_EXISTS 1
#define DT_N_INST_0_ilitek_ili9341 DT_N_S_soc_S_spi_40015000_S_ili9341_0
#define DT_N_NODELABEL_ili9341     DT_N_S_soc_S_spi_40015000_S_ili9341_0

/* Bus info (controller: '/soc/spi@40015000', type: 'spi') */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_BUS_spi 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_BUS DT_N_S_soc_S_spi_40015000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_REG_NUM 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_RANGES_NUM 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_IRQ_NUM 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_COMPAT_MATCHES_ilitek_ili9341 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifmode {194 /* 0xc2 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifmode_IDX_0 194
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifmode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifmode_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ifmode, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifmode_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ifmode, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifmode_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifmode_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl {1 /* 0x1 */, 0 /* 0x0 */, 6 /* 0x6 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_IDX_0 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_IDX_1 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_IDX_2 6
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ifctl, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ifctl, 1) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ifctl, 2)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ifctl, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ifctl, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ifctl, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_LEN 3
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ifctl_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla {57 /* 0x39 */, 44 /* 0x2c */, 0 /* 0x0 */, 52 /* 0x34 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_0 57
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_1 44
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_2 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_3 52
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_4 2
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_IDX_4_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 1) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 2) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 3) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 4)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrla, 4, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_LEN 5
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrla_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb {0 /* 0x0 */, 193 /* 0xc1 */, 48 /* 0x30 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_IDX_0 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_IDX_1 193
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_IDX_2 48
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrlb, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrlb, 1) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrlb, 2)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrlb, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrlb, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrlb, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_LEN 3
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrlb_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl {100 /* 0x64 */, 3 /* 0x3 */, 18 /* 0x12 */, 129 /* 0x81 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_IDX_0 100
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_IDX_1 3
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_IDX_2 18
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_IDX_3 129
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwseqctrl, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwseqctrl, 1) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwseqctrl, 2) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwseqctrl, 3)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwseqctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwseqctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwseqctrl, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwseqctrl, 3, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_LEN 4
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwseqctrl_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla {133 /* 0x85 */, 0 /* 0x0 */, 120 /* 0x78 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_IDX_0 133
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_IDX_1 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_IDX_2 120
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrla, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrla, 1) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrla, 2)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrla, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrla, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrla, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_LEN 3
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrla_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrlb {0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrlb_IDX_0 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrlb_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrlb_IDX_1 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrlb_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrlb_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrlb, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrlb, 1)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrlb_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrlb, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, timctrlb, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrlb_LEN 2
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_timctrlb_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pumpratioctrl {32 /* 0x20 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pumpratioctrl_IDX_0 32
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pumpratioctrl_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pumpratioctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pumpratioctrl, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pumpratioctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pumpratioctrl, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pumpratioctrl_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pumpratioctrl_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_enable3g {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_enable3g_IDX_0 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_enable3g_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_enable3g_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, enable3g, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_enable3g_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, enable3g, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_enable3g_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_enable3g_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_etmod {6 /* 0x6 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_etmod_IDX_0 6
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_etmod_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_etmod_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, etmod, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_etmod_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, etmod, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_etmod_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_etmod_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_gamset {1 /* 0x1 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_gamset_IDX_0 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_gamset_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_gamset_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, gamset, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_gamset_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, gamset, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_gamset_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_gamset_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frmctr1 {0 /* 0x0 */, 27 /* 0x1b */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frmctr1_IDX_0 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frmctr1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frmctr1_IDX_1 27
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frmctr1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frmctr1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, frmctr1, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, frmctr1, 1)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frmctr1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, frmctr1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, frmctr1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frmctr1_LEN 2
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frmctr1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl {8 /* 0x8 */, 130 /* 0x82 */, 39 /* 0x27 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_IDX_0 8
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_IDX_1 130
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_IDX_2 39
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, disctrl, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, disctrl, 1) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, disctrl, 2)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, disctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, disctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, disctrl, 2, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_LEN 3
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_disctrl_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl1 {16 /* 0x10 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl1_IDX_0 16
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrl1, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrl1, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl1_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl2 {16 /* 0x10 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl2_IDX_0 16
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl2_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl2_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrl2, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl2_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pwctrl2, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl2_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pwctrl2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl1 {69 /* 0x45 */, 21 /* 0x15 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl1_IDX_0 69
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl1_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl1_IDX_1 21
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl1_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl1_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, vmctrl1, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, vmctrl1, 1)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl1_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, vmctrl1, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, vmctrl1, 1, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl1_LEN 2
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl2 {144 /* 0x90 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl2_IDX_0 144
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl2_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl2_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, vmctrl2, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl2_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, vmctrl2, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl2_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_vmctrl2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl {15 /* 0xf */, 41 /* 0x29 */, 36 /* 0x24 */, 12 /* 0xc */, 14 /* 0xe */, 9 /* 0x9 */, 78 /* 0x4e */, 120 /* 0x78 */, 60 /* 0x3c */, 9 /* 0x9 */, 19 /* 0x13 */, 5 /* 0x5 */, 23 /* 0x17 */, 17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_0 15
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_1 41
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_2 36
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_3 12
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_4 14
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_4_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_5 9
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_5_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_6 78
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_6_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_7 120
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_7_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_8 60
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_8_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_9 9
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_9_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_10 19
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_10_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_11 5
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_11_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_12 23
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_12_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_13 17
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_13_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_14 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_IDX_14_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 1) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 2) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 3) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 4) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 5) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 6) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 7) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 8) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 9) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 10) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 11) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 12) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 13) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 14)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, pgamctrl, 14, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_LEN 15
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pgamctrl_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl {0 /* 0x0 */, 22 /* 0x16 */, 27 /* 0x1b */, 4 /* 0x4 */, 17 /* 0x11 */, 7 /* 0x7 */, 49 /* 0x31 */, 51 /* 0x33 */, 66 /* 0x42 */, 5 /* 0x5 */, 12 /* 0xc */, 10 /* 0xa */, 40 /* 0x28 */, 47 /* 0x2f */, 15 /* 0xf */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_0 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_1 22
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_2 27
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_3 4
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_3_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_4 17
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_4_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_5 7
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_5_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_6 49
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_6_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_7 51
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_7_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_8 66
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_8_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_9 5
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_9_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_10 12
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_10_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_11 10
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_11_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_12 40
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_12_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_13 47
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_13_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_14 15
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_IDX_14_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 1) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 2) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 3) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 4) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 5) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 6) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 7) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 8) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 9) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 10) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 11) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 12) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 13) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 14)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 9, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 10, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 11, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 12, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 13, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, ngamctrl, 14, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_LEN 15
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_ngamctrl_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_IDX_0_PH DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_IDX_0_VAL_pin 13
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_IDX_0_VAL_flags 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, cmd_data_gpios, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, cmd_data_gpios, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_cmd_data_gpios_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pixel_format 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pixel_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_pixel_format_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_rotation 180
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_rotation_ENUM_IDX 2
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_rotation_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_display_inversion 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_display_inversion_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, reg, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, reg, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_spi_max_frequency 5625000
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_spi_max_frequency_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_label "ILI9341"
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_label_STRING_TOKEN ILI9341
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_label_STRING_UPPER_TOKEN ILI9341
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 0) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 1) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 2) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 3) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 4) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 5) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 6)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, label, 6, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_label_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_duplex 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_duplex_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frame_format 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frame_format_ENUM_IDX 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_frame_format_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_compatible {"ilitek,ili9341"}
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_compatible_IDX_0 "ilitek,ili9341"
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, compatible, 0)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_wakeup_source 0
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_height 320
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_height_EXISTS 1
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_width 240
#define DT_N_S_soc_S_spi_40015000_S_ili9341_0_P_width_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_PATH "/soc/timers@40000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_FULL_NAME "timers@40000000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_CHILD_IDX 17
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm) fn(DT_N_S_soc_S_timers_40000000_S_counter)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_ORD 167

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_SUPPORTS_ORDS \
	168, /* /soc/timers@40000000/counter */ \
	169, /* /soc/timers@40000000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_EXISTS 1
#define DT_N_INST_1_st_stm32_timers DT_N_S_soc_S_timers_40000000
#define DT_N_NODELABEL_timers2      DT_N_S_soc_S_timers_40000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_REG_NUM 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_ADDRESS 1073741824 /* 0x40000000 */
#define DT_N_S_soc_S_timers_40000000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_P_label "TIMERS_2"
#define DT_N_S_soc_S_timers_40000000_P_label_STRING_TOKEN TIMERS_2
#define DT_N_S_soc_S_timers_40000000_P_label_STRING_UPPER_TOKEN TIMERS_2
#define DT_N_S_soc_S_timers_40000000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, label, 0) \
	fn(DT_N_S_soc_S_timers_40000000, label, 1) \
	fn(DT_N_S_soc_S_timers_40000000, label, 2) \
	fn(DT_N_S_soc_S_timers_40000000, label, 3) \
	fn(DT_N_S_soc_S_timers_40000000, label, 4) \
	fn(DT_N_S_soc_S_timers_40000000, label, 5) \
	fn(DT_N_S_soc_S_timers_40000000, label, 6) \
	fn(DT_N_S_soc_S_timers_40000000, label, 7)
#define DT_N_S_soc_S_timers_40000000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg {1073741824 /* 0x40000000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0 1073741824
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1)
#define DT_N_S_soc_S_timers_40000000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, clocks, 0)
#define DT_N_S_soc_S_timers_40000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000, status, 3) \
	fn(DT_N_S_soc_S_timers_40000000, status, 4) \
	fn(DT_N_S_soc_S_timers_40000000, status, 5) \
	fn(DT_N_S_soc_S_timers_40000000, status, 6) \
	fn(DT_N_S_soc_S_timers_40000000, status, 7)
#define DT_N_S_soc_S_timers_40000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PATH "/soc/timers@40000000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_counter_ORD 168

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REQUIRES_ORDS \
	167, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_counter_EXISTS 1
#define DT_N_INST_0_st_stm32_counter DT_N_S_soc_S_timers_40000000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_counter_P_label "COUNTER_2"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_label_STRING_TOKEN COUNTER_2
#define DT_N_S_soc_S_timers_40000000_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_2
#define DT_N_S_soc_S_timers_40000000_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 8)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PATH "/soc/timers@40000000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000000) identifier: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PARENT DT_N_S_soc_S_timers_40000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_ORD 169

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REQUIRES_ORDS \
	167, /* /soc/timers@40000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_EXISTS 1
#define DT_N_INST_1_st_stm32_pwm DT_N_S_soc_S_timers_40000000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label "PWM_2"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_STRING_TOKEN PWM_2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_STRING_UPPER_TOKEN PWM_2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000000_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_PATH "/soc/timers@40000400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_FULL_NAME "timers@40000400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_CHILD_IDX 18
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm) fn(DT_N_S_soc_S_timers_40000400_S_counter)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_ORD 170

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_SUPPORTS_ORDS \
	171, /* /soc/timers@40000400/counter */ \
	172, /* /soc/timers@40000400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_EXISTS 1
#define DT_N_INST_2_st_stm32_timers DT_N_S_soc_S_timers_40000400
#define DT_N_NODELABEL_timers3      DT_N_S_soc_S_timers_40000400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_REG_NUM 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_ADDRESS 1073742848 /* 0x40000400 */
#define DT_N_S_soc_S_timers_40000400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_P_label "TIMERS_3"
#define DT_N_S_soc_S_timers_40000400_P_label_STRING_TOKEN TIMERS_3
#define DT_N_S_soc_S_timers_40000400_P_label_STRING_UPPER_TOKEN TIMERS_3
#define DT_N_S_soc_S_timers_40000400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, label, 0) \
	fn(DT_N_S_soc_S_timers_40000400, label, 1) \
	fn(DT_N_S_soc_S_timers_40000400, label, 2) \
	fn(DT_N_S_soc_S_timers_40000400, label, 3) \
	fn(DT_N_S_soc_S_timers_40000400, label, 4) \
	fn(DT_N_S_soc_S_timers_40000400, label, 5) \
	fn(DT_N_S_soc_S_timers_40000400, label, 6) \
	fn(DT_N_S_soc_S_timers_40000400, label, 7)
#define DT_N_S_soc_S_timers_40000400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg {1073742848 /* 0x40000400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0 1073742848
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000400, reg, 1)
#define DT_N_S_soc_S_timers_40000400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40000400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, clocks, 0)
#define DT_N_S_soc_S_timers_40000400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000400, interrupts, 1)
#define DT_N_S_soc_S_timers_40000400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400, status, 7)
#define DT_N_S_soc_S_timers_40000400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PATH "/soc/timers@40000400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_counter_ORD 171

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REQUIRES_ORDS \
	170, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_counter_EXISTS 1
#define DT_N_INST_1_st_stm32_counter DT_N_S_soc_S_timers_40000400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_counter_P_label "COUNTER_3"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_label_STRING_TOKEN COUNTER_3
#define DT_N_S_soc_S_timers_40000400_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_3
#define DT_N_S_soc_S_timers_40000400_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 8)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PATH "/soc/timers@40000400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000400) identifier: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PARENT DT_N_S_soc_S_timers_40000400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_ORD 172

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REQUIRES_ORDS \
	170, /* /soc/timers@40000400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_EXISTS 1
#define DT_N_INST_2_st_stm32_pwm DT_N_S_soc_S_timers_40000400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label "PWM_3"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_STRING_TOKEN PWM_3
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_STRING_UPPER_TOKEN PWM_3
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000400_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_PATH "/soc/timers@40000800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_FULL_NAME "timers@40000800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_CHILD_IDX 19
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm) fn(DT_N_S_soc_S_timers_40000800_S_counter)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_ORD 173

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_SUPPORTS_ORDS \
	174, /* /soc/timers@40000800/counter */ \
	175, /* /soc/timers@40000800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_EXISTS 1
#define DT_N_INST_3_st_stm32_timers DT_N_S_soc_S_timers_40000800
#define DT_N_NODELABEL_timers4      DT_N_S_soc_S_timers_40000800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_REG_NUM 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_ADDRESS 1073743872 /* 0x40000800 */
#define DT_N_S_soc_S_timers_40000800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_P_label "TIMERS_4"
#define DT_N_S_soc_S_timers_40000800_P_label_STRING_TOKEN TIMERS_4
#define DT_N_S_soc_S_timers_40000800_P_label_STRING_UPPER_TOKEN TIMERS_4
#define DT_N_S_soc_S_timers_40000800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, label, 0) \
	fn(DT_N_S_soc_S_timers_40000800, label, 1) \
	fn(DT_N_S_soc_S_timers_40000800, label, 2) \
	fn(DT_N_S_soc_S_timers_40000800, label, 3) \
	fn(DT_N_S_soc_S_timers_40000800, label, 4) \
	fn(DT_N_S_soc_S_timers_40000800, label, 5) \
	fn(DT_N_S_soc_S_timers_40000800, label, 6) \
	fn(DT_N_S_soc_S_timers_40000800, label, 7)
#define DT_N_S_soc_S_timers_40000800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg {1073743872 /* 0x40000800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0 1073743872
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000800, reg, 1)
#define DT_N_S_soc_S_timers_40000800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits 4
#define DT_N_S_soc_S_timers_40000800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, clocks, 0)
#define DT_N_S_soc_S_timers_40000800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000800, interrupts, 1)
#define DT_N_S_soc_S_timers_40000800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800, status, 3) \
	fn(DT_N_S_soc_S_timers_40000800, status, 4) \
	fn(DT_N_S_soc_S_timers_40000800, status, 5) \
	fn(DT_N_S_soc_S_timers_40000800, status, 6) \
	fn(DT_N_S_soc_S_timers_40000800, status, 7)
#define DT_N_S_soc_S_timers_40000800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PATH "/soc/timers@40000800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_counter_ORD 174

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REQUIRES_ORDS \
	173, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_counter_EXISTS 1
#define DT_N_INST_2_st_stm32_counter DT_N_S_soc_S_timers_40000800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_counter_P_label "COUNTER_4"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_label_STRING_TOKEN COUNTER_4
#define DT_N_S_soc_S_timers_40000800_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_4
#define DT_N_S_soc_S_timers_40000800_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 8)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PATH "/soc/timers@40000800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000800) identifier: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PARENT DT_N_S_soc_S_timers_40000800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_ORD 175

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REQUIRES_ORDS \
	173, /* /soc/timers@40000800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_EXISTS 1
#define DT_N_INST_3_st_stm32_pwm DT_N_S_soc_S_timers_40000800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label "PWM_4"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_STRING_TOKEN PWM_4
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_STRING_UPPER_TOKEN PWM_4
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000800_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000800_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_PATH "/soc/timers@40000c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_FULL_NAME "timers@40000c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40000c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_CHILD_IDX 20
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm) fn(DT_N_S_soc_S_timers_40000c00_S_counter)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40000c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_ORD 176

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_SUPPORTS_ORDS \
	177, /* /soc/timers@40000c00/counter */ \
	178, /* /soc/timers@40000c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_EXISTS 1
#define DT_N_INST_4_st_stm32_timers DT_N_S_soc_S_timers_40000c00
#define DT_N_NODELABEL_timers5      DT_N_S_soc_S_timers_40000c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_ADDRESS 1073744896 /* 0x40000c00 */
#define DT_N_S_soc_S_timers_40000c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40000c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40000c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40000c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40000c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_P_label "TIMERS_5"
#define DT_N_S_soc_S_timers_40000c00_P_label_STRING_TOKEN TIMERS_5
#define DT_N_S_soc_S_timers_40000c00_P_label_STRING_UPPER_TOKEN TIMERS_5
#define DT_N_S_soc_S_timers_40000c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, label, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 1) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 2) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 3) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 4) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 5) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 6) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 7)
#define DT_N_S_soc_S_timers_40000c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg {1073744896 /* 0x40000c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0 1073744896
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40000c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, reg, 1)
#define DT_N_S_soc_S_timers_40000c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits 8
#define DT_N_S_soc_S_timers_40000c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40000c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40000c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 7)
#define DT_N_S_soc_S_timers_40000c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40000c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40000c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PATH "/soc/timers@40000c00/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_ORD 177

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REQUIRES_ORDS \
	176, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_EXISTS 1
#define DT_N_INST_3_st_stm32_counter DT_N_S_soc_S_timers_40000c00_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_label "COUNTER_5"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_label_STRING_TOKEN COUNTER_5
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_5
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 8)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40000c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40000c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PATH "/soc/timers@40000c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40000c00) identifier: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PARENT DT_N_S_soc_S_timers_40000c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_ORD 178

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REQUIRES_ORDS \
	176, /* /soc/timers@40000c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_EXISTS 1
#define DT_N_INST_4_st_stm32_pwm DT_N_S_soc_S_timers_40000c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40000c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label "PWM_5"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_STRING_TOKEN PWM_5
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_STRING_UPPER_TOKEN PWM_5
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40000c00_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40000c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40000c00_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_PATH "/soc/timers@40001000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_FULL_NAME "timers@40001000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_CHILD_IDX 37
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_ORD 179

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_SUPPORTS_ORDS \
	180, /* /soc/timers@40001000/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_EXISTS 1
#define DT_N_INST_8_st_stm32_timers DT_N_S_soc_S_timers_40001000
#define DT_N_NODELABEL_timers6      DT_N_S_soc_S_timers_40001000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_REG_NUM 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_ADDRESS 1073745920 /* 0x40001000 */
#define DT_N_S_soc_S_timers_40001000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_P_label "TIMERS_6"
#define DT_N_S_soc_S_timers_40001000_P_label_STRING_TOKEN TIMERS_6
#define DT_N_S_soc_S_timers_40001000_P_label_STRING_UPPER_TOKEN TIMERS_6
#define DT_N_S_soc_S_timers_40001000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, label, 0) \
	fn(DT_N_S_soc_S_timers_40001000, label, 1) \
	fn(DT_N_S_soc_S_timers_40001000, label, 2) \
	fn(DT_N_S_soc_S_timers_40001000, label, 3) \
	fn(DT_N_S_soc_S_timers_40001000, label, 4) \
	fn(DT_N_S_soc_S_timers_40001000, label, 5) \
	fn(DT_N_S_soc_S_timers_40001000, label, 6) \
	fn(DT_N_S_soc_S_timers_40001000, label, 7)
#define DT_N_S_soc_S_timers_40001000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg {1073745920 /* 0x40001000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0 1073745920
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001000, reg, 1)
#define DT_N_S_soc_S_timers_40001000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits 16
#define DT_N_S_soc_S_timers_40001000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, clocks, 0)
#define DT_N_S_soc_S_timers_40001000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts {54 /* 0x36 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0 54
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001000, interrupts, 1)
#define DT_N_S_soc_S_timers_40001000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40001000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, status, 0) \
	fn(DT_N_S_soc_S_timers_40001000, status, 1) \
	fn(DT_N_S_soc_S_timers_40001000, status, 2) \
	fn(DT_N_S_soc_S_timers_40001000, status, 3) \
	fn(DT_N_S_soc_S_timers_40001000, status, 4) \
	fn(DT_N_S_soc_S_timers_40001000, status, 5) \
	fn(DT_N_S_soc_S_timers_40001000, status, 6) \
	fn(DT_N_S_soc_S_timers_40001000, status, 7)
#define DT_N_S_soc_S_timers_40001000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PATH "/soc/timers@40001000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40001000) identifier: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PARENT DT_N_S_soc_S_timers_40001000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001000_S_counter_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001000_S_counter_ORD 180

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REQUIRES_ORDS \
	179, /* /soc/timers@40001000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001000_S_counter_EXISTS 1
#define DT_N_INST_7_st_stm32_counter DT_N_S_soc_S_timers_40001000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001000_S_counter_P_label "COUNTER_6"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_label_STRING_TOKEN COUNTER_6
#define DT_N_S_soc_S_timers_40001000_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_6
#define DT_N_S_soc_S_timers_40001000_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 8)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001000_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_PATH "/soc/timers@40001400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_FULL_NAME "timers@40001400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_CHILD_IDX 38
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_ORD 181

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_SUPPORTS_ORDS \
	182, /* /soc/timers@40001400/counter */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_EXISTS 1
#define DT_N_INST_9_st_stm32_timers DT_N_S_soc_S_timers_40001400
#define DT_N_NODELABEL_timers7      DT_N_S_soc_S_timers_40001400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_REG_NUM 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_ADDRESS 1073746944 /* 0x40001400 */
#define DT_N_S_soc_S_timers_40001400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_P_label "TIMERS_7"
#define DT_N_S_soc_S_timers_40001400_P_label_STRING_TOKEN TIMERS_7
#define DT_N_S_soc_S_timers_40001400_P_label_STRING_UPPER_TOKEN TIMERS_7
#define DT_N_S_soc_S_timers_40001400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, label, 0) \
	fn(DT_N_S_soc_S_timers_40001400, label, 1) \
	fn(DT_N_S_soc_S_timers_40001400, label, 2) \
	fn(DT_N_S_soc_S_timers_40001400, label, 3) \
	fn(DT_N_S_soc_S_timers_40001400, label, 4) \
	fn(DT_N_S_soc_S_timers_40001400, label, 5) \
	fn(DT_N_S_soc_S_timers_40001400, label, 6) \
	fn(DT_N_S_soc_S_timers_40001400, label, 7)
#define DT_N_S_soc_S_timers_40001400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg {1073746944 /* 0x40001400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0 1073746944
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001400, reg, 1)
#define DT_N_S_soc_S_timers_40001400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits 32
#define DT_N_S_soc_S_timers_40001400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, clocks, 0)
#define DT_N_S_soc_S_timers_40001400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts {55 /* 0x37 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001400, interrupts, 1)
#define DT_N_S_soc_S_timers_40001400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40001400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, status, 0) \
	fn(DT_N_S_soc_S_timers_40001400, status, 1) \
	fn(DT_N_S_soc_S_timers_40001400, status, 2) \
	fn(DT_N_S_soc_S_timers_40001400, status, 3) \
	fn(DT_N_S_soc_S_timers_40001400, status, 4) \
	fn(DT_N_S_soc_S_timers_40001400, status, 5) \
	fn(DT_N_S_soc_S_timers_40001400, status, 6) \
	fn(DT_N_S_soc_S_timers_40001400, status, 7)
#define DT_N_S_soc_S_timers_40001400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PATH "/soc/timers@40001400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40001400) identifier: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PARENT DT_N_S_soc_S_timers_40001400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001400_S_counter_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001400_S_counter_ORD 182

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001400_S_counter_REQUIRES_ORDS \
	181, /* /soc/timers@40001400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001400_S_counter_EXISTS 1
#define DT_N_INST_8_st_stm32_counter DT_N_S_soc_S_timers_40001400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001400_S_counter_P_label "COUNTER_7"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_label_STRING_TOKEN COUNTER_7
#define DT_N_S_soc_S_timers_40001400_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_7
#define DT_N_S_soc_S_timers_40001400_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 8)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001400_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001400_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001800
 *
 * Node identifier: DT_N_S_soc_S_timers_40001800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001800_PATH "/soc/timers@40001800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001800_FULL_NAME "timers@40001800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001800_CHILD_IDX 40
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm) fn(DT_N_S_soc_S_timers_40001800_S_counter)
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001800_ORD 183

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001800_SUPPORTS_ORDS \
	184, /* /soc/timers@40001800/counter */ \
	185, /* /soc/timers@40001800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001800_EXISTS 1
#define DT_N_INST_11_st_stm32_timers DT_N_S_soc_S_timers_40001800
#define DT_N_NODELABEL_timers12      DT_N_S_soc_S_timers_40001800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001800_REG_NUM 1
#define DT_N_S_soc_S_timers_40001800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_REG_IDX_0_VAL_ADDRESS 1073747968 /* 0x40001800 */
#define DT_N_S_soc_S_timers_40001800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001800_P_label "TIMERS_12"
#define DT_N_S_soc_S_timers_40001800_P_label_STRING_TOKEN TIMERS_12
#define DT_N_S_soc_S_timers_40001800_P_label_STRING_UPPER_TOKEN TIMERS_12
#define DT_N_S_soc_S_timers_40001800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, label, 0) \
	fn(DT_N_S_soc_S_timers_40001800, label, 1) \
	fn(DT_N_S_soc_S_timers_40001800, label, 2) \
	fn(DT_N_S_soc_S_timers_40001800, label, 3) \
	fn(DT_N_S_soc_S_timers_40001800, label, 4) \
	fn(DT_N_S_soc_S_timers_40001800, label, 5) \
	fn(DT_N_S_soc_S_timers_40001800, label, 6) \
	fn(DT_N_S_soc_S_timers_40001800, label, 7) \
	fn(DT_N_S_soc_S_timers_40001800, label, 8)
#define DT_N_S_soc_S_timers_40001800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_reg {1073747968 /* 0x40001800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_0 1073747968
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001800, reg, 1)
#define DT_N_S_soc_S_timers_40001800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bits 64
#define DT_N_S_soc_S_timers_40001800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, clocks, 0)
#define DT_N_S_soc_S_timers_40001800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001800, interrupts, 1)
#define DT_N_S_soc_S_timers_40001800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40001800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_status "disabled"
#define DT_N_S_soc_S_timers_40001800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, status, 0) \
	fn(DT_N_S_soc_S_timers_40001800, status, 1) \
	fn(DT_N_S_soc_S_timers_40001800, status, 2) \
	fn(DT_N_S_soc_S_timers_40001800, status, 3) \
	fn(DT_N_S_soc_S_timers_40001800, status, 4) \
	fn(DT_N_S_soc_S_timers_40001800, status, 5) \
	fn(DT_N_S_soc_S_timers_40001800, status, 6) \
	fn(DT_N_S_soc_S_timers_40001800, status, 7)
#define DT_N_S_soc_S_timers_40001800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001800_S_counter_PATH "/soc/timers@40001800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40001800) identifier: */
#define DT_N_S_soc_S_timers_40001800_S_counter_PARENT DT_N_S_soc_S_timers_40001800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001800_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001800_S_counter_ORD 184

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001800_S_counter_REQUIRES_ORDS \
	183, /* /soc/timers@40001800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001800_S_counter_EXISTS 1
#define DT_N_INST_9_st_stm32_counter DT_N_S_soc_S_timers_40001800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001800_S_counter_P_label "COUNTER_12"
#define DT_N_S_soc_S_timers_40001800_S_counter_P_label_STRING_TOKEN COUNTER_12
#define DT_N_S_soc_S_timers_40001800_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_12
#define DT_N_S_soc_S_timers_40001800_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 8) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 9)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001800_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_PATH "/soc/timers@40001800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40001800) identifier: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_PARENT DT_N_S_soc_S_timers_40001800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_ORD 185

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_REQUIRES_ORDS \
	183, /* /soc/timers@40001800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_EXISTS 1
#define DT_N_INST_9_st_stm32_pwm DT_N_S_soc_S_timers_40001800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_label "PWM_12"
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_label_STRING_TOKEN PWM_12
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_label_STRING_UPPER_TOKEN PWM_12
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001800_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001800_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001c00
 *
 * Node identifier: DT_N_S_soc_S_timers_40001c00
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001c00_PATH "/soc/timers@40001c00"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001c00_FULL_NAME "timers@40001c00"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40001c00_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001c00_CHILD_IDX 41
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm) fn(DT_N_S_soc_S_timers_40001c00_S_counter)
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40001c00_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001c00_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001c00_ORD 186

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001c00_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001c00_SUPPORTS_ORDS \
	187, /* /soc/timers@40001c00/counter */ \
	188, /* /soc/timers@40001c00/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001c00_EXISTS 1
#define DT_N_INST_12_st_stm32_timers DT_N_S_soc_S_timers_40001c00
#define DT_N_NODELABEL_timers13      DT_N_S_soc_S_timers_40001c00

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001c00_REG_NUM 1
#define DT_N_S_soc_S_timers_40001c00_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_REG_IDX_0_VAL_ADDRESS 1073748992 /* 0x40001c00 */
#define DT_N_S_soc_S_timers_40001c00_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40001c00_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001c00_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001c00_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_irq 44
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40001c00_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40001c00_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40001c00_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001c00_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001c00_P_label "TIMERS_13"
#define DT_N_S_soc_S_timers_40001c00_P_label_STRING_TOKEN TIMERS_13
#define DT_N_S_soc_S_timers_40001c00_P_label_STRING_UPPER_TOKEN TIMERS_13
#define DT_N_S_soc_S_timers_40001c00_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, label, 0) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 1) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 2) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 3) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 4) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 5) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 6) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 7) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 8)
#define DT_N_S_soc_S_timers_40001c00_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_reg {1073748992 /* 0x40001c00 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_0 1073748992
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40001c00_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, reg, 0) \
	fn(DT_N_S_soc_S_timers_40001c00, reg, 1)
#define DT_N_S_soc_S_timers_40001c00_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bits 128
#define DT_N_S_soc_S_timers_40001c00_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, clocks, 0)
#define DT_N_S_soc_S_timers_40001c00_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupts {44 /* 0x2c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_0 44
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40001c00, interrupts, 1)
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40001c00_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_st_countermode 0
#define DT_N_S_soc_S_timers_40001c00_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_status "disabled"
#define DT_N_S_soc_S_timers_40001c00_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001c00_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, status, 0) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 1) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 2) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 3) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 4) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 5) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 6) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 7)
#define DT_N_S_soc_S_timers_40001c00_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40001c00_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40001c00_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40001c00_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001c00_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001c00/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40001c00_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_PATH "/soc/timers@40001c00/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40001c00) identifier: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_PARENT DT_N_S_soc_S_timers_40001c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_ORD 187

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_REQUIRES_ORDS \
	186, /* /soc/timers@40001c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_EXISTS 1
#define DT_N_INST_10_st_stm32_counter DT_N_S_soc_S_timers_40001c00_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_label "COUNTER_13"
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_label_STRING_TOKEN COUNTER_13
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_13
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 8) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 9)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001c00_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40001c00/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40001c00_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_PATH "/soc/timers@40001c00/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40001c00) identifier: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_PARENT DT_N_S_soc_S_timers_40001c00

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_ORD 188

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_REQUIRES_ORDS \
	186, /* /soc/timers@40001c00 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_EXISTS 1
#define DT_N_INST_10_st_stm32_pwm DT_N_S_soc_S_timers_40001c00_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40001c00_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_label "PWM_13"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_label_STRING_TOKEN PWM_13
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_label_STRING_UPPER_TOKEN PWM_13
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40001c00_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40001c00_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40001c00_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_PATH "/soc/timers@40002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_FULL_NAME "timers@40002000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40002000_CHILD_IDX 42
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm) fn(DT_N_S_soc_S_timers_40002000_S_counter)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40002000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_ORD 189

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_SUPPORTS_ORDS \
	190, /* /soc/timers@40002000/counter */ \
	191, /* /soc/timers@40002000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_EXISTS 1
#define DT_N_INST_13_st_stm32_timers DT_N_S_soc_S_timers_40002000
#define DT_N_NODELABEL_timers14      DT_N_S_soc_S_timers_40002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40002000_REG_NUM 1
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_VAL_ADDRESS 1073750016 /* 0x40002000 */
#define DT_N_S_soc_S_timers_40002000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40002000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40002000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq 45
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40002000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40002000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40002000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_P_label "TIMERS_14"
#define DT_N_S_soc_S_timers_40002000_P_label_STRING_TOKEN TIMERS_14
#define DT_N_S_soc_S_timers_40002000_P_label_STRING_UPPER_TOKEN TIMERS_14
#define DT_N_S_soc_S_timers_40002000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, label, 0) \
	fn(DT_N_S_soc_S_timers_40002000, label, 1) \
	fn(DT_N_S_soc_S_timers_40002000, label, 2) \
	fn(DT_N_S_soc_S_timers_40002000, label, 3) \
	fn(DT_N_S_soc_S_timers_40002000, label, 4) \
	fn(DT_N_S_soc_S_timers_40002000, label, 5) \
	fn(DT_N_S_soc_S_timers_40002000, label, 6) \
	fn(DT_N_S_soc_S_timers_40002000, label, 7) \
	fn(DT_N_S_soc_S_timers_40002000, label, 8)
#define DT_N_S_soc_S_timers_40002000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg {1073750016 /* 0x40002000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_0 1073750016
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40002000, reg, 1)
#define DT_N_S_soc_S_timers_40002000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bus 64
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bits 256
#define DT_N_S_soc_S_timers_40002000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, clocks, 0)
#define DT_N_S_soc_S_timers_40002000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts {45 /* 0x2d */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_0 45
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40002000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40002000, interrupts, 1)
#define DT_N_S_soc_S_timers_40002000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40002000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40002000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, status, 0) \
	fn(DT_N_S_soc_S_timers_40002000, status, 1) \
	fn(DT_N_S_soc_S_timers_40002000, status, 2) \
	fn(DT_N_S_soc_S_timers_40002000, status, 3) \
	fn(DT_N_S_soc_S_timers_40002000, status, 4) \
	fn(DT_N_S_soc_S_timers_40002000, status, 5) \
	fn(DT_N_S_soc_S_timers_40002000, status, 6) \
	fn(DT_N_S_soc_S_timers_40002000, status, 7)
#define DT_N_S_soc_S_timers_40002000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40002000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40002000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_S_counter_PATH "/soc/timers@40002000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40002000) identifier: */
#define DT_N_S_soc_S_timers_40002000_S_counter_PARENT DT_N_S_soc_S_timers_40002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40002000_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_S_counter_ORD 190

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_S_counter_REQUIRES_ORDS \
	189, /* /soc/timers@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_S_counter_EXISTS 1
#define DT_N_INST_11_st_stm32_counter DT_N_S_soc_S_timers_40002000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40002000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40002000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40002000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40002000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_S_counter_P_label "COUNTER_14"
#define DT_N_S_soc_S_timers_40002000_S_counter_P_label_STRING_TOKEN COUNTER_14
#define DT_N_S_soc_S_timers_40002000_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_14
#define DT_N_S_soc_S_timers_40002000_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 8) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 9)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40002000_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40002000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40002000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PATH "/soc/timers@40002000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40002000) identifier: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PARENT DT_N_S_soc_S_timers_40002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_ORD 191

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_REQUIRES_ORDS \
	189, /* /soc/timers@40002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_EXISTS 1
#define DT_N_INST_11_st_stm32_pwm DT_N_S_soc_S_timers_40002000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40002000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_label "PWM_14"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_label_STRING_TOKEN PWM_14
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_label_STRING_UPPER_TOKEN PWM_14
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40002000_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40002000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40002000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010000
 *
 * Node identifier: DT_N_S_soc_S_timers_40010000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010000_PATH "/soc/timers@40010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010000_FULL_NAME "timers@40010000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40010000_CHILD_IDX 16
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm)
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010000_ORD 192

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010000_SUPPORTS_ORDS \
	193, /* /soc/timers@40010000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010000_EXISTS 1
#define DT_N_INST_0_st_stm32_timers DT_N_S_soc_S_timers_40010000
#define DT_N_NODELABEL_timers1      DT_N_S_soc_S_timers_40010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40010000_REG_NUM 1
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_VAL_ADDRESS 1073807360 /* 0x40010000 */
#define DT_N_S_soc_S_timers_40010000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40010000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40010000_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq 26
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq 27
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40010000_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40010000_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40010000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010000_P_label "TIMERS_1"
#define DT_N_S_soc_S_timers_40010000_P_label_STRING_TOKEN TIMERS_1
#define DT_N_S_soc_S_timers_40010000_P_label_STRING_UPPER_TOKEN TIMERS_1
#define DT_N_S_soc_S_timers_40010000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, label, 0) \
	fn(DT_N_S_soc_S_timers_40010000, label, 1) \
	fn(DT_N_S_soc_S_timers_40010000, label, 2) \
	fn(DT_N_S_soc_S_timers_40010000, label, 3) \
	fn(DT_N_S_soc_S_timers_40010000, label, 4) \
	fn(DT_N_S_soc_S_timers_40010000, label, 5) \
	fn(DT_N_S_soc_S_timers_40010000, label, 6) \
	fn(DT_N_S_soc_S_timers_40010000, label, 7)
#define DT_N_S_soc_S_timers_40010000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg {1073807360 /* 0x40010000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_0 1073807360
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40010000, reg, 1)
#define DT_N_S_soc_S_timers_40010000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bits 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, clocks, 0)
#define DT_N_S_soc_S_timers_40010000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 25 /* 0x19 */, 0 /* 0x0 */, 26 /* 0x1a */, 0 /* 0x0 */, 27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_4 26
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_6 27
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40010000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 1) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 2) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 3) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 4) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 5) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 6) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 7)
#define DT_N_S_soc_S_timers_40010000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40010000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40010000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_status "disabled"
#define DT_N_S_soc_S_timers_40010000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, status, 0) \
	fn(DT_N_S_soc_S_timers_40010000, status, 1) \
	fn(DT_N_S_soc_S_timers_40010000, status, 2) \
	fn(DT_N_S_soc_S_timers_40010000, status, 3) \
	fn(DT_N_S_soc_S_timers_40010000, status, 4) \
	fn(DT_N_S_soc_S_timers_40010000, status, 5) \
	fn(DT_N_S_soc_S_timers_40010000, status, 6) \
	fn(DT_N_S_soc_S_timers_40010000, status, 7)
#define DT_N_S_soc_S_timers_40010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40010000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40010000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40010000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PATH "/soc/timers@40010000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40010000) identifier: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PARENT DT_N_S_soc_S_timers_40010000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_ORD 193

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_REQUIRES_ORDS \
	192, /* /soc/timers@40010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_EXISTS 1
#define DT_N_INST_0_st_stm32_pwm DT_N_S_soc_S_timers_40010000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40010000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label "PWM_1"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_STRING_TOKEN PWM_1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_STRING_UPPER_TOKEN PWM_1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010000_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40010000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010400
 *
 * Node identifier: DT_N_S_soc_S_timers_40010400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010400_PATH "/soc/timers@40010400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010400_FULL_NAME "timers@40010400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40010400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40010400_CHILD_IDX 39
#define DT_N_S_soc_S_timers_40010400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40010400_S_pwm)
#define DT_N_S_soc_S_timers_40010400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400_S_pwm, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40010400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010400_ORD 194

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010400_SUPPORTS_ORDS \
	195, /* /soc/timers@40010400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010400_EXISTS 1
#define DT_N_INST_10_st_stm32_timers DT_N_S_soc_S_timers_40010400
#define DT_N_NODELABEL_timers8       DT_N_S_soc_S_timers_40010400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40010400_REG_NUM 1
#define DT_N_S_soc_S_timers_40010400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_REG_IDX_0_VAL_ADDRESS 1073808384 /* 0x40010400 */
#define DT_N_S_soc_S_timers_40010400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40010400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40010400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40010400_IRQ_NUM 4
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_irq 44
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_irq 45
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_irq 46
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_brk_VAL_irq DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_brk_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_brk_VAL_priority DT_N_S_soc_S_timers_40010400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_brk_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_up_VAL_irq DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_up_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_up_VAL_priority DT_N_S_soc_S_timers_40010400_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_up_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_trgcom_VAL_irq DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_trgcom_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_trgcom_VAL_priority DT_N_S_soc_S_timers_40010400_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_trgcom_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_cc_VAL_irq DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_irq
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_cc_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_cc_VAL_priority DT_N_S_soc_S_timers_40010400_IRQ_IDX_3_VAL_priority
#define DT_N_S_soc_S_timers_40010400_IRQ_NAME_cc_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40010400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40010400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010400_P_label "TIMERS_8"
#define DT_N_S_soc_S_timers_40010400_P_label_STRING_TOKEN TIMERS_8
#define DT_N_S_soc_S_timers_40010400_P_label_STRING_UPPER_TOKEN TIMERS_8
#define DT_N_S_soc_S_timers_40010400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, label, 0) \
	fn(DT_N_S_soc_S_timers_40010400, label, 1) \
	fn(DT_N_S_soc_S_timers_40010400, label, 2) \
	fn(DT_N_S_soc_S_timers_40010400, label, 3) \
	fn(DT_N_S_soc_S_timers_40010400, label, 4) \
	fn(DT_N_S_soc_S_timers_40010400, label, 5) \
	fn(DT_N_S_soc_S_timers_40010400, label, 6) \
	fn(DT_N_S_soc_S_timers_40010400, label, 7)
#define DT_N_S_soc_S_timers_40010400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_reg {1073808384 /* 0x40010400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40010400_P_reg_IDX_0 1073808384
#define DT_N_S_soc_S_timers_40010400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40010400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40010400, reg, 1)
#define DT_N_S_soc_S_timers_40010400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_VAL_bits 2
#define DT_N_S_soc_S_timers_40010400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, clocks, 0)
#define DT_N_S_soc_S_timers_40010400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40010400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */, 44 /* 0x2c */, 0 /* 0x0 */, 45 /* 0x2d */, 0 /* 0x0 */, 46 /* 0x2e */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_2 44
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_4 45
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_6 46
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_timers_40010400_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 1) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 2) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 3) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 4) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 5) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 6) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 7)
#define DT_N_S_soc_S_timers_40010400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupts, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40010400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40010400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_status "disabled"
#define DT_N_S_soc_S_timers_40010400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40010400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, status, 0) \
	fn(DT_N_S_soc_S_timers_40010400, status, 1) \
	fn(DT_N_S_soc_S_timers_40010400, status, 2) \
	fn(DT_N_S_soc_S_timers_40010400, status, 3) \
	fn(DT_N_S_soc_S_timers_40010400, status, 4) \
	fn(DT_N_S_soc_S_timers_40010400, status, 5) \
	fn(DT_N_S_soc_S_timers_40010400, status, 6) \
	fn(DT_N_S_soc_S_timers_40010400, status, 7)
#define DT_N_S_soc_S_timers_40010400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40010400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40010400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, compatible, 0)
#define DT_N_S_soc_S_timers_40010400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names {"brk", "up", "trgcom", "cc"}
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_0 "brk"
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_1 "up"
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_2 "trgcom"
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_3 "cc"
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_IDX_3_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 0) \
	fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 1) \
	fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 2) \
	fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 3)
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400, interrupt_names, 3, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_LEN 4
#define DT_N_S_soc_S_timers_40010400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40010400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40010400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40010400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_PATH "/soc/timers@40010400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40010400) identifier: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_PARENT DT_N_S_soc_S_timers_40010400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40010400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40010400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40010400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40010400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_ORD 195

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_REQUIRES_ORDS \
	194, /* /soc/timers@40010400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_EXISTS 1
#define DT_N_INST_8_st_stm32_pwm DT_N_S_soc_S_timers_40010400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40010400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40010400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40010400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40010400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_label "PWM_8"
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_label_STRING_TOKEN PWM_8
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_label_STRING_UPPER_TOKEN PWM_8
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40010400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40010400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40010400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40010400_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_PATH "/soc/timers@40014000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_FULL_NAME "timers@40014000"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_CHILD_IDX 21
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm) fn(DT_N_S_soc_S_timers_40014000_S_counter)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014000_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_ORD 196

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_SUPPORTS_ORDS \
	197, /* /soc/timers@40014000/counter */ \
	198, /* /soc/timers@40014000/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_EXISTS 1
#define DT_N_INST_5_st_stm32_timers DT_N_S_soc_S_timers_40014000
#define DT_N_NODELABEL_timers9      DT_N_S_soc_S_timers_40014000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_REG_NUM 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_ADDRESS 1073823744 /* 0x40014000 */
#define DT_N_S_soc_S_timers_40014000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014000_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014000_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_P_label "TIMERS_9"
#define DT_N_S_soc_S_timers_40014000_P_label_STRING_TOKEN TIMERS_9
#define DT_N_S_soc_S_timers_40014000_P_label_STRING_UPPER_TOKEN TIMERS_9
#define DT_N_S_soc_S_timers_40014000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, label, 0) \
	fn(DT_N_S_soc_S_timers_40014000, label, 1) \
	fn(DT_N_S_soc_S_timers_40014000, label, 2) \
	fn(DT_N_S_soc_S_timers_40014000, label, 3) \
	fn(DT_N_S_soc_S_timers_40014000, label, 4) \
	fn(DT_N_S_soc_S_timers_40014000, label, 5) \
	fn(DT_N_S_soc_S_timers_40014000, label, 6) \
	fn(DT_N_S_soc_S_timers_40014000, label, 7)
#define DT_N_S_soc_S_timers_40014000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, label, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg {1073823744 /* 0x40014000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0 1073823744
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014000, reg, 1)
#define DT_N_S_soc_S_timers_40014000_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits 65536
#define DT_N_S_soc_S_timers_40014000_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, clocks, 0)
#define DT_N_S_soc_S_timers_40014000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014000, interrupts, 1)
#define DT_N_S_soc_S_timers_40014000_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014000_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014000_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000, status, 7)
#define DT_N_S_soc_S_timers_40014000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PATH "/soc/timers@40014000/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_counter_ORD 197

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REQUIRES_ORDS \
	196, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_counter_EXISTS 1
#define DT_N_INST_4_st_stm32_counter DT_N_S_soc_S_timers_40014000_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014000_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_counter_P_label "COUNTER_9"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_label_STRING_TOKEN COUNTER_9
#define DT_N_S_soc_S_timers_40014000_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_9
#define DT_N_S_soc_S_timers_40014000_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 8)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014000/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014000_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PATH "/soc/timers@40014000/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014000) identifier: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PARENT DT_N_S_soc_S_timers_40014000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_ORD 198

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REQUIRES_ORDS \
	196, /* /soc/timers@40014000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_EXISTS 1
#define DT_N_INST_5_st_stm32_pwm DT_N_S_soc_S_timers_40014000_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014000_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label "PWM_9"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_STRING_TOKEN PWM_9
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_STRING_UPPER_TOKEN PWM_9
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 4)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, label, 4, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014000_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014000_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014000_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_PATH "/soc/timers@40014400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_FULL_NAME "timers@40014400"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_CHILD_IDX 22
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm) fn(DT_N_S_soc_S_timers_40014400_S_counter)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014400_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_ORD 199

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_SUPPORTS_ORDS \
	200, /* /soc/timers@40014400/counter */ \
	201, /* /soc/timers@40014400/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_EXISTS 1
#define DT_N_INST_6_st_stm32_timers DT_N_S_soc_S_timers_40014400
#define DT_N_NODELABEL_timers10     DT_N_S_soc_S_timers_40014400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_REG_NUM 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_ADDRESS 1073824768 /* 0x40014400 */
#define DT_N_S_soc_S_timers_40014400_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014400_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014400_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014400_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_P_label "TIMERS_10"
#define DT_N_S_soc_S_timers_40014400_P_label_STRING_TOKEN TIMERS_10
#define DT_N_S_soc_S_timers_40014400_P_label_STRING_UPPER_TOKEN TIMERS_10
#define DT_N_S_soc_S_timers_40014400_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, label, 0) \
	fn(DT_N_S_soc_S_timers_40014400, label, 1) \
	fn(DT_N_S_soc_S_timers_40014400, label, 2) \
	fn(DT_N_S_soc_S_timers_40014400, label, 3) \
	fn(DT_N_S_soc_S_timers_40014400, label, 4) \
	fn(DT_N_S_soc_S_timers_40014400, label, 5) \
	fn(DT_N_S_soc_S_timers_40014400, label, 6) \
	fn(DT_N_S_soc_S_timers_40014400, label, 7) \
	fn(DT_N_S_soc_S_timers_40014400, label, 8)
#define DT_N_S_soc_S_timers_40014400_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg {1073824768 /* 0x40014400 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0 1073824768
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1)
#define DT_N_S_soc_S_timers_40014400_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits 131072
#define DT_N_S_soc_S_timers_40014400_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, clocks, 0)
#define DT_N_S_soc_S_timers_40014400_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014400_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014400_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400, status, 7)
#define DT_N_S_soc_S_timers_40014400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014400_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PATH "/soc/timers@40014400/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_counter_ORD 200

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REQUIRES_ORDS \
	199, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_counter_EXISTS 1
#define DT_N_INST_5_st_stm32_counter DT_N_S_soc_S_timers_40014400_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014400_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_counter_P_label "COUNTER_10"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_label_STRING_TOKEN COUNTER_10
#define DT_N_S_soc_S_timers_40014400_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_10
#define DT_N_S_soc_S_timers_40014400_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 8) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 9)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014400/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014400_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PATH "/soc/timers@40014400/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014400) identifier: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PARENT DT_N_S_soc_S_timers_40014400

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_ORD 201

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REQUIRES_ORDS \
	199, /* /soc/timers@40014400 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_EXISTS 1
#define DT_N_INST_6_st_stm32_pwm DT_N_S_soc_S_timers_40014400_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014400_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label "PWM_10"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_STRING_TOKEN PWM_10
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_STRING_UPPER_TOKEN PWM_10
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014400_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014400_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014400_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800
 *
 * Binding (compatible = st,stm32-timers):
 *   $ZEPHYR_BASE/dts/bindings/timer/st,stm32-timers.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_PATH "/soc/timers@40014800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_FULL_NAME "timers@40014800"

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timers_40014800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_CHILD_IDX 23
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm) fn(DT_N_S_soc_S_timers_40014800_S_counter)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, __VA_ARGS__) fn(DT_N_S_soc_S_timers_40014800_S_counter, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_ORD 202

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_REQUIRES_ORDS \
	12, /* /soc */ \
	16, /* /soc/rcc@40023800 */ \
	37, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_SUPPORTS_ORDS \
	203, /* /soc/timers@40014800/counter */ \
	204, /* /soc/timers@40014800/pwm */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_EXISTS 1
#define DT_N_INST_7_st_stm32_timers DT_N_S_soc_S_timers_40014800
#define DT_N_NODELABEL_timers11     DT_N_S_soc_S_timers_40014800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_REG_NUM 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_ADDRESS 1073825792 /* 0x40014800 */
#define DT_N_S_soc_S_timers_40014800_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_timers_40014800_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_IRQ_NUM 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority DT_N_S_soc_S_timers_40014800_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_timers_40014800_IRQ_NAME_global_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_COMPAT_MATCHES_st_stm32_timers 1
#define DT_N_S_soc_S_timers_40014800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_P_label "TIMERS_11"
#define DT_N_S_soc_S_timers_40014800_P_label_STRING_TOKEN TIMERS_11
#define DT_N_S_soc_S_timers_40014800_P_label_STRING_UPPER_TOKEN TIMERS_11
#define DT_N_S_soc_S_timers_40014800_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, label, 0) \
	fn(DT_N_S_soc_S_timers_40014800, label, 1) \
	fn(DT_N_S_soc_S_timers_40014800, label, 2) \
	fn(DT_N_S_soc_S_timers_40014800, label, 3) \
	fn(DT_N_S_soc_S_timers_40014800, label, 4) \
	fn(DT_N_S_soc_S_timers_40014800, label, 5) \
	fn(DT_N_S_soc_S_timers_40014800, label, 6) \
	fn(DT_N_S_soc_S_timers_40014800, label, 7) \
	fn(DT_N_S_soc_S_timers_40014800, label, 8)
#define DT_N_S_soc_S_timers_40014800_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, label, 8, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg {1073825792 /* 0x40014800 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0 1073825792
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1 1024
#define DT_N_S_soc_S_timers_40014800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, reg, 0) \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1)
#define DT_N_S_soc_S_timers_40014800_P_reg_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, reg, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, reg, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_reg_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_PH DT_N_S_soc_S_rcc_40023800
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus 68
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bus_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits 262144
#define DT_N_S_soc_S_timers_40014800_P_clocks_IDX_0_VAL_bits_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, clocks, 0)
#define DT_N_S_soc_S_timers_40014800_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_clocks_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_clocks_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_timers_40014800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0) \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupts, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, interrupts, 1, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler 0
#define DT_N_S_soc_S_timers_40014800_P_st_prescaler_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_st_countermode 0
#define DT_N_S_soc_S_timers_40014800_P_st_countermode_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800, status, 7)
#define DT_N_S_soc_S_timers_40014800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible {"st,stm32-timers"}
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0 "st,stm32-timers"
#define DT_N_S_soc_S_timers_40014800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names {"global"}
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0 "global"
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_timers_40014800_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/counter
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_counter
 *
 * Binding (compatible = st,stm32-counter):
 *   $ZEPHYR_BASE/dts/bindings/counter/st,stm32-counter.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PATH "/soc/timers@40014800/counter"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_counter_FULL_NAME "counter"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_counter_CHILD_IDX 1
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_counter_ORD 203

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REQUIRES_ORDS \
	202, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_counter_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_counter_EXISTS 1
#define DT_N_INST_6_st_stm32_counter DT_N_S_soc_S_timers_40014800_S_counter

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_counter_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_counter_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_counter_COMPAT_MATCHES_st_stm32_counter 1
#define DT_N_S_soc_S_timers_40014800_S_counter_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_counter_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_counter_P_label "COUNTER_11"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_label_STRING_TOKEN COUNTER_11
#define DT_N_S_soc_S_timers_40014800_S_counter_P_label_STRING_UPPER_TOKEN COUNTER_11
#define DT_N_S_soc_S_timers_40014800_S_counter_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 5) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 6) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 7) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 8) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 9)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 7, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 8, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, label, 9, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 7)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_counter, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible {"st,stm32-counter"}
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0 "st,stm32-counter"
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_counter, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_counter_P_wakeup_source_EXISTS 1

/*
 * Devicetree node: /soc/timers@40014800/pwm
 *
 * Node identifier: DT_N_S_soc_S_timers_40014800_S_pwm
 *
 * Binding (compatible = st,stm32-pwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/st,stm32-pwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PATH "/soc/timers@40014800/pwm"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_FULL_NAME "pwm"

/* Node parent (/soc/timers@40014800) identifier: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PARENT DT_N_S_soc_S_timers_40014800

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_CHILD_IDX 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_ORD 204

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REQUIRES_ORDS \
	202, /* /soc/timers@40014800 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_EXISTS 1
#define DT_N_INST_7_st_stm32_pwm DT_N_S_soc_S_timers_40014800_S_pwm

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_REG_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_RANGES_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timers_40014800_S_pwm_IRQ_NUM 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_COMPAT_MATCHES_st_stm32_pwm 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label "PWM_11"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_STRING_TOKEN PWM_11
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_STRING_UPPER_TOKEN PWM_11
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 5)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, label, 5, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_label_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status "disabled"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_IDX 2
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_TOKEN disabled
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 2, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 3, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 4, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 5, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 6, __VA_ARGS__) \
	fn(DT_N_S_soc_S_timers_40014800_S_pwm, status, 7, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_status_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible {"st,stm32-pwm"}
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0 "st,stm32-pwm"
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timers_40014800_S_pwm, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_LEN 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source 0
#define DT_N_S_soc_S_timers_40014800_S_pwm_P_wakeup_source_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_40023c00
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_rng_50060800
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_serial_40011000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_serial_40011000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_ccm                     DT_N_S_memory_10000000
#define DT_CHOSEN_zephyr_ccm_EXISTS              1
#define DT_CHOSEN_zephyr_display                 DT_N_S_soc_S_spi_40015000_S_ili9341_0
#define DT_CHOSEN_zephyr_display_EXISTS          1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_st_stm32f4discovery 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v7m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv7m_systick 1
#define DT_COMPAT_HAS_OKAY_st_stm32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4_flash_controller 1
#define DT_COMPAT_HAS_OKAY_st_stm32_nv_flash 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rcc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_exti 1
#define DT_COMPAT_HAS_OKAY_st_stm32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_st_stm32_gpio 1
#define DT_COMPAT_HAS_OKAY_st_stm32_usart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_uart 1
#define DT_COMPAT_HAS_OKAY_st_stm32_i2c_v1 1
#define DT_COMPAT_HAS_OKAY_st_stm32_rtc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_spi 1
#define DT_COMPAT_HAS_OKAY_ilitek_ili9341 1
#define DT_COMPAT_HAS_OKAY_st_stm32_fmc 1
#define DT_COMPAT_HAS_OKAY_st_stm32_fmc_sdram 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ltdc 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m4f 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_st_stm32_hse_clock 1
#define DT_COMPAT_HAS_OKAY_st_stm32f4_pll_clock 1
#define DT_COMPAT_HAS_OKAY_usb_nop_xceiv 1
#define DT_COMPAT_HAS_OKAY_zephyr_memory_region 1
#define DT_COMPAT_HAS_OKAY_st_stm32_ccm 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_st_stm32f4discovery_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v7m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv7m_systick_NUM_OKAY 1
#define DT_N_INST_st_stm32_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_flash_controller_NUM_OKAY 1
#define DT_N_INST_st_stm32_nv_flash_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_st_stm32_rcc_NUM_OKAY 1
#define DT_N_INST_st_stm32_exti_NUM_OKAY 1
#define DT_N_INST_st_stm32_pinctrl_NUM_OKAY 1
#define DT_N_INST_st_stm32_gpio_NUM_OKAY 11
#define DT_N_INST_st_stm32_usart_NUM_OKAY 1
#define DT_N_INST_st_stm32_uart_NUM_OKAY 1
#define DT_N_INST_st_stm32_i2c_v1_NUM_OKAY 3
#define DT_N_INST_st_stm32_rtc_NUM_OKAY 1
#define DT_N_INST_st_stm32_spi_NUM_OKAY 1
#define DT_N_INST_ilitek_ili9341_NUM_OKAY 1
#define DT_N_INST_st_stm32_fmc_NUM_OKAY 1
#define DT_N_INST_st_stm32_fmc_sdram_NUM_OKAY 1
#define DT_N_INST_st_stm32_ltdc_NUM_OKAY 1
#define DT_N_INST_arm_cortex_m4f_NUM_OKAY 1
#define DT_N_INST_mmio_sram_NUM_OKAY 2
#define DT_N_INST_st_stm32_hse_clock_NUM_OKAY 1
#define DT_N_INST_st_stm32f4_pll_clock_NUM_OKAY 1
#define DT_N_INST_usb_nop_xceiv_NUM_OKAY 2
#define DT_N_INST_zephyr_memory_region_NUM_OKAY 2
#define DT_N_INST_st_stm32_ccm_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_st_stm32f4discovery(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_st_stm32f4discovery(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f4discovery(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f4discovery(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v7m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v7m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v7m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v7m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv7m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv7m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv7m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv7m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40023c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f4_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_40023c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32f4_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f4_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f4_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_40023c00_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rcc(fn) fn(DT_N_S_soc_S_rcc_40023800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rcc(fn, ...) fn(DT_N_S_soc_S_rcc_40023800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rcc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rcc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_exti(fn) fn(DT_N_S_soc_S_interrupt_controller_40013c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_exti(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_40013c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_exti(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_exti(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_40020000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_gpio(fn) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_gpio(fn, ...) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40020c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021800, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40021c00, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022400, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_40020000_S_gpio_40022800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_gpio(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9) fn(10)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__) fn(10, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_usart(fn) fn(DT_N_S_soc_S_serial_40011000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_usart(fn, ...) fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_uart(fn) fn(DT_N_S_soc_S_serial_40011000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_uart(fn, ...) fn(DT_N_S_soc_S_serial_40011000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_i2c_v1(fn) fn(DT_N_S_soc_S_i2c_40005400) fn(DT_N_S_soc_S_i2c_40005800) fn(DT_N_S_soc_S_i2c_40005c00)
#define DT_FOREACH_OKAY_VARGS_st_stm32_i2c_v1(fn, ...) fn(DT_N_S_soc_S_i2c_40005400, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005800, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_40005c00, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_i2c_v1(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_i2c_v1(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_rtc(fn) fn(DT_N_S_soc_S_rtc_40002800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_40002800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_spi(fn) fn(DT_N_S_soc_S_spi_40015000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_spi(fn, ...) fn(DT_N_S_soc_S_spi_40015000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_spi(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_spi(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_ilitek_ili9341(fn) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0)
#define DT_FOREACH_OKAY_VARGS_ilitek_ili9341(fn, ...) fn(DT_N_S_soc_S_spi_40015000_S_ili9341_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_ilitek_ili9341(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_ilitek_ili9341(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_fmc(fn) fn(DT_N_S_soc_S_memory_controller_a0000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_fmc(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_fmc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_fmc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_fmc_sdram(fn) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram)
#define DT_FOREACH_OKAY_VARGS_st_stm32_fmc_sdram(fn, ...) fn(DT_N_S_soc_S_memory_controller_a0000000_S_sdram, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_fmc_sdram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_fmc_sdram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_ltdc(fn) fn(DT_N_S_soc_S_display_controller_40016800)
#define DT_FOREACH_OKAY_VARGS_st_stm32_ltdc(fn, ...) fn(DT_N_S_soc_S_display_controller_40016800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_ltdc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_ltdc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m4f(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m4f(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m4f(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m4f(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000) fn(DT_N_S_sdram_d0000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_sdram_d0000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_hse_clock(fn) fn(DT_N_S_clocks_S_clk_hse)
#define DT_FOREACH_OKAY_VARGS_st_stm32_hse_clock(fn, ...) fn(DT_N_S_clocks_S_clk_hse, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_hse_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_hse_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32f4_pll_clock(fn) fn(DT_N_S_clocks_S_pll)
#define DT_FOREACH_OKAY_VARGS_st_stm32f4_pll_clock(fn, ...) fn(DT_N_S_clocks_S_pll, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32f4_pll_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32f4_pll_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_usb_nop_xceiv(fn) fn(DT_N_S_otgfs_phy) fn(DT_N_S_otghs_fs_phy)
#define DT_FOREACH_OKAY_VARGS_usb_nop_xceiv(fn, ...) fn(DT_N_S_otgfs_phy, __VA_ARGS__) fn(DT_N_S_otghs_fs_phy, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_usb_nop_xceiv(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_usb_nop_xceiv(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_memory_region(fn) fn(DT_N_S_memory_10000000) fn(DT_N_S_sdram_d0000000)
#define DT_FOREACH_OKAY_VARGS_zephyr_memory_region(fn, ...) fn(DT_N_S_memory_10000000, __VA_ARGS__) fn(DT_N_S_sdram_d0000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_memory_region(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_memory_region(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_st_stm32_ccm(fn) fn(DT_N_S_memory_10000000)
#define DT_FOREACH_OKAY_VARGS_st_stm32_ccm(fn, ...) fn(DT_N_S_memory_10000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_st_stm32_ccm(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_st_stm32_ccm(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_gpio_keys)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_gpio_keys, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_ilitek_ili9341_BUS_spi 1
